/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/auth": {
    /**
     * Get all the Authorization details associated with the current api
     *
     * @deprecated
     * @description Get all the authorization details associated with the current api token
     */
    get: {
      responses: {
        /** @description Current authorization details. */
        200: {
          content: {
            "application/json": components["schemas"]["Authorization"];
          };
        };
      };
    };
  };
  "/auth/current": {
    /**
     * Get the authorization details associated with the current API token
     *
     * @deprecated
     * @description Get the authorization details associated with the current API token for the users current site
     */
    post: {
      responses: {
        /** @description Authorization details for users current site. */
        200: {
          content: {
            "application/json": components["schemas"]["CurrentAuthorization"];
          };
        };
      };
    };
  };
  "/auth/invalidateToken": {
    /**
     * Invalidate current token
     *
     * @deprecated
     * @description Invalidates current token
     */
    post: {
      responses: {
        /** @description token invalidated */
        204: {
          content: never;
        };
      };
    };
  };
  "/auth/keepAlive": {
    /**
     * Invalidate existing token and generates new token
     *
     * @deprecated
     * @description Invalidates existing token and generates new token with extended expiration based on existing token credentials.
     */
    post: {
      responses: {
        /** @description Updated token. */
        200: {
          content: {
            "application/json": components["schemas"]["AuthToken"];
          };
        };
      };
    };
  };
  "/auth/tokens": {
    /**
     * Create a token based on other authentication details (basic, etc.)
     *
     * @deprecated
     * @description Create a token based on other authentication details (basic, etc.)
     */
    post: {
      responses: {
        /** @description New auth token generated. */
        200: {
          content: {
            "application/json": components["schemas"]["AuthToken"];
          };
        };
      };
    };
  };
  "/devices/extensionAttributes": {
    /**
     * Get Mobile Device Extension Attribute values placed in select paramter
     *
     * @description Gets Mobile Device Extension Attribute values placed in select parameter.
     */
    get: {
      parameters: {
        query?: {
          /**
           * @description Acceptable values currently include:
           * * name
           */
          select?: string;
        };
      };
      responses: {
        /** @description Successful response - Extension Attributes retrieved */
        200: {
          content: {
            "application/json": components["schemas"]["MobileDeviceExtensionAttributeResults"];
          };
        };
      };
    };
  };
  "/inventory-preload": {
    /**
     * Return all Inventory Preload records
     *
     * @deprecated
     * @description Returns all Inventory Preload records.
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          pagesize?: components["parameters"]["pagesize"];
          sort?: "ASC" | "DESC";
          sortBy?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InventoryPreloadRecordSearchResults"][];
            "text/csv": components["schemas"]["InventoryPreloadRecordSearchResults"];
          };
        };
      };
    };
    /**
     * Create a new Inventory Preload record using JSON or CSV
     *
     * @deprecated
     * @description Create a new Inventory Preload record using JSON or CSV.
     * A CSV template can be downloaded from /api/inventory-preload/csv-template.
     * Serial number and device type are required. All other fields are optional.
     * When a matching serial number exists in the Inventory Preload data, the record will be overwritten with the CSV data.
     * If the CSV file contains a new username and an email address is provided, the new user is created in Jamf Pro.
     * If the CSV file contains an existing username, the following user-related fields are updated in Jamf Pro.
     * Full Name,
     * Email Address,
     * Phone Number,
     * Position.
     * This endpoint does not do full validation of each record in the CSV data.
     * To do full validation, use the /inventory-preload/validate-csv endpoint first.
     */
    post: {
      /** @description Inventory Preload record or records to be created */
      requestBody: {
        content: {
          "application/json": components["schemas"]["InventoryPreloadRecord"];
          "text/csv": components["schemas"]["InventoryPreloadRecord"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["InventoryPreloadRecord"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete all Inventory Preload records
     *
     * @deprecated
     * @description Deletes all Inventory Preload records.
     */
    delete: {
      responses: {
        /** @description OK */
        204: {
          content: never;
        };
      };
    };
  };
  "/inventory-preload/csv-template": {
    /**
     * Get the Inventory Preload CSV template
     *
     * @deprecated
     * @description Retrieves the Inventory Preload CSV template.
     */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "text/csv": Record<string, never>;
          };
        };
      };
    };
  };
  "/inventory-preload/history": {
    /**
     * Get Inventory Preload history entries
     *
     * @deprecated
     * @description Gets Inventory Preload history entries.
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          size?: components["parameters"]["size"];
          pagesize?: components["parameters"]["pagesize"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
  };
  "/inventory-preload/history/notes": {
    /**
     * Add Inventory Preload history object notes
     *
     * @deprecated
     * @description Adds Inventory Preload history object notes.
     */
    post: {
      /** @description History notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of Inventory Preload history were added */
        201: {
          content: {
            "application/json": components["schemas"]["ObjectHistory"];
          };
        };
        /** @description Inventory Preload history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/inventory-preload/validate-csv": {
    /**
     * Validate a given CSV file
     *
     * @deprecated
     * @description Validate a given CSV file.
     * Serial number and device type are required. All other fields are optional.
     * A CSV template can be downloaded from /api/inventory-preload/csv-template.
     */
    post: {
      /** @description Inventory Preload records to be validated. A CSV template can be downloaded from /api/inventory-preload/csv-template */
      requestBody: {
        content: {
          "text/csv": Record<string, never>;
        };
      };
      responses: {
        /** @description Ok */
        200: {
          content: {
            "application/json": components["schemas"]["InventoryPreloadCsvValidationSuccess"];
          };
        };
        /** @description Precondition Failed */
        412: {
          content: {
            "application/json": components["schemas"]["InventoryPreloadInvalidCsvResponse"];
          };
        };
      };
    };
  };
  "/inventory-preload/{id}": {
    /**
     * Get an Inventory Preload record
     *
     * @deprecated
     * @description Retrieves an Inventory Preload record.
     */
    get: {
      parameters: {
        path: {
          /** @description Inventory Preload identifier */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InventoryPreloadRecord"];
          };
        };
        /** @description Inventory Preload record with specified id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update an Inventory Preload record
     *
     * @deprecated
     * @description Updates an Inventory Preload record.
     */
    put: {
      parameters: {
        path: {
          /** @description Inventory Preload identifier */
          id: number;
        };
      };
      /** @description Inventory Preload record to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["InventoryPreloadRecord"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InventoryPreloadRecord"];
          };
        };
        /** @description Inventory Preload record with specified id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete an Inventory Preload record
     *
     * @deprecated
     * @description Deletes an Inventory Preload record.
     */
    delete: {
      parameters: {
        path: {
          /** @description Inventory Preload identifier */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        204: {
          content: never;
        };
        /** @description Inventory Preload record with specified id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/ldap/groups": {
    /**
     * Retrieve the configured access groups that contain the text in the search param
     *
     * @description Retrieves the configured access groups that contain the text in the searchParam.
     */
    get: {
      parameters: {
        query?: {
          /** @description Will perform a "contains" search on the names of access groups */
          q?: string;
        };
      };
      responses: {
        /** @description Successful search. */
        200: {
          content: {
            "application/json": components["schemas"]["LdapGroupSearchResults"];
          };
        };
      };
    };
  };
  "/ldap/servers": {
    /**
     * Retrieve all Servers including LDAP and Cloud Identity Providers.
     *
     * @description Retrieve all Servers including LDAP and Cloud Identity Providers.
     */
    get: {
      responses: {
        /** @description Successfully completed. */
        200: {
          content: {
            "application/json": components["schemas"]["LdapServer"][];
          };
        };
      };
    };
  };
  "/notifications/alerts": {
    /**
     * Get Notifications for user and site
     *
     * @deprecated
     * @description Gets notifications for user and site
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["Notification"][];
          };
        };
      };
    };
  };
  "/notifications/alerts/{id}": {
    /**
     * DEPRECATED - USE "alerts/{type}/{id}" INSTEAD. Deletes only Patch Management notifications.
     *
     * @deprecated
     * @description DEPRECATED - USE "alerts/{type}/{id}" INSTEAD. Deletes only Patch Management notifications.
     */
    delete: {
      parameters: {
        path: {
          /** @description instance ID of the notification */
          id: number;
        };
      };
      responses: {
        /** @description Sucessful deletion */
        204: {
          content: never;
        };
      };
    };
  };
  "/notifications/alerts/{type}/{id}": {
    /**
     * Delete Notifications
     *
     * @deprecated
     * @description Deletes notifications. Option for 'type' is 'PATCH_UPDATE'.
     */
    delete: {
      parameters: {
        path: {
          /** @description instance ID of the notification */
          id: number;
          /** @description type of the notification */
          type: components["schemas"]["NotificationType"];
        };
      };
      responses: {
        /** @description Sucessful deletion */
        204: {
          content: never;
        };
      };
    };
  };
  "/preview/computers": {
    /**
     * Return a list of Computers
     *
     * @description Returns a list of computers.
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          size?: components["parameters"]["size"];
          pagesize?: components["parameters"]["pagesize"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ComputersSearchResults"];
          };
        };
      };
    };
  };
  "/preview/mdm/commands": {
    /**
     * Post a command for creation and queuing
     *
     * @deprecated
     * @description Provided an MDM command type and appropriate information, will create and then queue said command.
     */
    post: {
      /** @description The mdm command object to create and queue */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["MdmCommandRequest"];
        };
      };
      responses: {
        /** @description Success */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"][];
          };
        };
        /** @description Failure, unable to queue command. */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/preview/remote-administration-configurations": {
    /**
     * Get information about all remote administration configurations.
     * @description Remote administration feature creates a secure screen-sharing experience between Jamf Pro administrators and their end-users.
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
        };
      };
      responses: {
        /** @description Remote administration configurations returned. */
        200: {
          content: {
            "application/json": components["schemas"]["RemoteAdministrationSearchResults"];
          };
        };
        /** @description Remote Administration feature is not available. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/preview/remote-administration-configurations/team-viewer": {
    /**
     * Create Team Viewer Remote Administration connection configuration
     * @description Creates Team Viewer Remote Administration connection configuration
     */
    post: {
      /** @description Team Viewer connection configuration create definition */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ConnectionConfigurationCandidateRequest"];
        };
      };
      responses: {
        /** @description Team Viewer connection configuration created successfully */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Invalid field for Team Viewer connection configuration */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Insufficient privileges or site not found for Team Viewer connection configuration */
        403: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Site limit exceeded for Team Viewer connection configuration */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/preview/remote-administration-configurations/team-viewer/{configurationId}/sessions": {
    /**
     * Get a paginated list of sessions
     *
     * @description Returns a paginated list of sessions for a given configuration ID
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /**
           * @description Query in the RSQL format, allowing to filter sessions collection.
           * Default filter is empty query - returning all results for the requested page.
           *
           * Fields allowed in the query: `deviceId`, `deviceType`, `state`
           *
           * This param can be combined with paging.
           *
           * @example deviceId==1 and deviceType=="COMPUTER" and state=="OPEN"
           */
          filter?: string;
        };
        path: {
          /** @description ID of the Team Viewer connection configuration */
          configurationId: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["SessionDetailsSearchResults"];
          };
        };
        /** @description Insufficient privileges */
        403: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Create a new session
     * @description Creates a new Team Viewer session to be used to establish a remote connection
     */
    post: {
      parameters: {
        path: {
          /** @description ID of the Team Viewer connection configuration */
          configurationId: string;
        };
      };
      /** @description Team Viewer session attributes */
      requestBody: {
        content: {
          "application/json": components["schemas"]["SessionCandidateRequest"];
        };
      };
      responses: {
        /** @description Successful response */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Invalid attributes for Team Viewer session */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Insufficient privileges */
        403: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Connection configuration is not active or there is an active session for the device */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/preview/remote-administration-configurations/team-viewer/{configurationId}/sessions/{sessionId}": {
    /**
     * Get a session by its ID
     *
     * @description Returns a session details if found.
     */
    get: {
      parameters: {
        path: {
          /** @description ID of the Team Viewer connection configuration */
          configurationId: string;
          /** @description ID of the Team Viewer session */
          sessionId: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["SessionDetails"];
          };
        };
        /** @description Insufficient privileges */
        403: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/preview/remote-administration-configurations/team-viewer/{configurationId}/sessions/{sessionId}/close": {
    /**
     * Close a session
     * @description Changes the session state from open to close. Closing a session means it is not possible to establish new remote connection between devices
     */
    post: {
      parameters: {
        path: {
          /** @description ID of the Team Viewer connection configuration */
          configurationId: string;
          /** @description ID of the Team Viewer session */
          sessionId: string;
        };
      };
      responses: {
        /** @description Successful response */
        204: {
          content: never;
        };
        /** @description Insufficient privileges */
        403: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Connection configuration is not active */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/preview/remote-administration-configurations/team-viewer/{configurationId}/sessions/{sessionId}/resend-notification": {
    /**
     * Resend nofications for a session
     * @description Resends configured notifications (e.g. Self Service push notifications).
     */
    post: {
      parameters: {
        path: {
          /** @description ID of the Team Viewer connection configuration */
          configurationId: string;
          /** @description ID of the Team Viewer session */
          sessionId: string;
        };
      };
      responses: {
        /** @description Successful response */
        204: {
          content: never;
        };
        /** @description Insufficient privileges */
        403: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Connection configuration is not active or session is already closed */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/preview/remote-administration-configurations/team-viewer/{configurationId}/sessions/{sessionId}/status": {
    /**
     * Get a session status by its ID
     *
     * @description Returns a session status if found.
     */
    get: {
      parameters: {
        path: {
          /** @description ID of the Team Viewer connection configuration */
          configurationId: string;
          /** @description ID of the Team Viewer session */
          sessionId: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["SessionStatus"];
          };
        };
        /** @description Insufficient privileges */
        403: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Team Viewer session status not found */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/preview/remote-administration-configurations/team-viewer/{id}": {
    /**
     * Get Team Viewer Remote Administration connection configuration
     * @description Returns Team Viewer Remote Administration connection configuration
     */
    get: {
      parameters: {
        path: {
          /** @description ID of the Team Viewer connection configuration */
          id: string;
        };
      };
      responses: {
        /** @description Returns Team Viewer connection configuration response */
        200: {
          content: {
            "application/json": components["schemas"]["ConnectionConfigurationResponse"];
          };
        };
        /** @description Team Viewer connection configuration does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete Team Viewer Remote Administration connection configuration
     * @description Deletes Team Viewer Remote Administration connection configuration
     */
    delete: {
      parameters: {
        path: {
          /** @description ID of the Team Viewer connection configuration */
          id: string;
        };
      };
      responses: {
        /** @description Team Viewer connection configuration deleted successfully */
        204: {
          content: never;
        };
      };
    };
    /**
     * Update Team Viewer Remote Administration connection configuration
     * @description Updates Team Viewer Remote Administration connection configuration
     */
    patch: {
      parameters: {
        path: {
          /** @description ID of the Team Viewer connection configuration */
          id: string;
        };
      };
      /** @description Team Viewer connection configuration update request */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ConnectionConfigurationUpdateRequest"];
        };
      };
      responses: {
        /** @description Team Viewer connection configuration updated successfully */
        200: {
          content: {
            "application/json": components["schemas"]["ConnectionConfigurationResponse"];
          };
        };
        /** @description Invalid field for Team Viewer connection configuration update request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Team Viewer connection configuration does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/preview/remote-administration-configurations/team-viewer/{id}/status": {
    /**
     * Get Team Viewer Remote Administration connection status
     * @description Returns Team Viewer Remote Administration connection status
     */
    get: {
      parameters: {
        path: {
          /** @description ID of the Team Viewer connection configuration */
          id: string;
        };
      };
      responses: {
        /** @description Returns Team Viewer connection status response */
        200: {
          content: {
            "application/json": components["schemas"]["ConnectionConfigurationStatusResponse"];
          };
        };
      };
    };
  };
  "/self-service/branding/images": {
    /**
     * Upload an image
     *
     * @description Uploads an image
     */
    post: {
      requestBody: {
        content: {
          "multipart/form-data": {
            /**
             * Format: binary
             * @description The file to upload
             */
            file: string;
          };
        };
      };
      responses: {
        /** @description Image successfully uploaded */
        201: {
          content: {
            "application/json": components["schemas"]["BrandingImageUrl"];
          };
        };
      };
    };
  };
  "/settings/issueTomcatSslCertificate": {
    /**
     * Generate a SSL Certificate using Jamf Certificate Authority
     *
     * @description generate a SSL Certificate using Jamf Certificate Authority
     */
    post: {
      responses: {
        /** @description SSL certificate created successfully */
        204: {
          content: never;
        };
      };
    };
  };
  "/settings/obj/policyProperties": {
    /**
     * Get Policy Properties object
     *
     * @deprecated
     * @description Gets `Policy Properties` object.
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PolicyProperties"];
          };
        };
      };
    };
    /**
     * Update Policy Properties object
     *
     * @deprecated
     * @description Update Policy Properties object
     */
    put: {
      /** @description Policy Properties object to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PolicyProperties"];
        };
      };
      responses: {
        /** @description Policy Properties was updated */
        201: {
          content: {
            "application/json": components["schemas"]["PolicyProperties"];
          };
        };
      };
    };
  };
  "/settings/sites": {
    /**
     * Find all sites
     *
     * @deprecated
     * @description Found all sites.
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["Site"][];
          };
        };
      };
    };
  };
  "/startup-status": {
    /**
     * Retrieve information about application startup
     *
     * @description Retrieves information about application startup. Current startup operation taking place (if any) and overall startup completion percentage.
     */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["StartupStatus"];
          };
        };
      };
    };
  };
  "/system/initialize": {
    /**
     * Set up fresh installed Jamf Pro Server
     *
     * @deprecated
     * @description Set up fresh installed Jamf Pro Server
     */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["Initialize"];
        };
      };
      responses: {
        /** @description OK */
        204: {
          content: never;
        };
        /**
         * @description The following are codes returned by this call:
         * INVALID_ACTIVATION_CODE - activation code provided is not valid or is expired
         * INVALID_STATE - The system is in an invalid state to be initialized.
         * FIELD_REQUIRED - A required field was not provided.  The field name will be provided on the response.
         */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/system/initialize-database-connection": {
    /**
     * Provide Database Password during startup
     *
     * @deprecated
     * @description Provide database password during startup. Endpoint is accessible when database password was not configured and Jamf Pro server has not been initialized yet.
     */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["DatabasePassword"];
        };
      };
      responses: {
        /** @description OK */
        204: {
          content: never;
        };
        /** @description Incorrect database password. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Limit of requests per second was exceeded */
        429: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/user": {
    /**
     * Return all Jamf Pro user acounts
     *
     * @description Return all Jamf Pro user acounts.
     */
    get: {
      responses: {
        /** @description List of all Jamf Pro user acounts. */
        200: {
          content: {
            "application/json": components["schemas"]["Account"][];
          };
        };
      };
    };
  };
  "/user/obj/preference/{key}": {
    /**
     * Get the user setting for the authenticated user and key
     *
     * @deprecated
     * @description Gets the user setting for the authenticated user and key.
     */
    get: {
      parameters: {
        path: {
          /** @description user setting to be retrieved */
          key: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["UserPreferencesJson"];
          };
        };
        /** @description setting not found */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Persist the user setting
     *
     * @deprecated
     * @description Persists the user setting
     */
    put: {
      parameters: {
        path: {
          /** @description key of user setting to be persisted */
          key: string;
        };
      };
      /** @description user setting value to be persisted */
      requestBody?: {
        content: {
          "application/json": string;
        };
      };
      responses: {
        /** @description setting sucessfully updated */
        200: {
          content: {
            "application/json": components["schemas"]["UserPreferencesJson"];
          };
        };
      };
    };
    /**
     * Remove specified setting for authenticated user
     *
     * @deprecated
     * @description Remove specified setting for authenticated user
     */
    delete: {
      parameters: {
        path: {
          /** @description key of user setting to be persisted */
          key: string;
        };
      };
      responses: {
        /** @description setting was deleted */
        204: {
          content: never;
        };
        /** @description setting not found */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/user/updateSession": {
    /**
     * Update values in the User's current session
     *
     * @description Updates values in the user's current session.
     */
    post: {
      /** @description Values to update in user's current session. */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Session"];
        };
      };
      responses: {
        /** @description The user's current session has been sucessfully updated. */
        200: {
          content: {
            "application/json": components["schemas"]["Session"];
          };
        };
      };
    };
  };
  "/v1/adue-session-token-settings": {
    /**
     * Retrieve the Account Driven User Enrollment Session Token Settings
     *
     * @description Retrieve the Account Driven User Enrollment Session Token Settings
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["AccountDrivenUserEnrollmentSessionTokenSettings"];
          };
        };
      };
    };
    /**
     * Update Account Driven User Enrollment Session Token Settings.
     *
     * @description Update the Account Driven User Enrollment Session Token Settings object.
     */
    put: {
      /** @description Update Account Driven User Enrollment Session Token Settings. */
      requestBody: {
        content: {
          "application/json": components["schemas"]["AccountDrivenUserEnrollmentSessionTokenSettings"];
        };
      };
      responses: {
        /** @description Successfully updated Account Driven User Enrollment Session Token Settings object */
        200: {
          content: {
            "application/json": components["schemas"]["AccountDrivenUserEnrollmentSessionTokenSettings"];
          };
        };
        /** @description Invalid data response */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/advanced-mobile-device-searches": {
    /**
     * Get Advanced Search objects
     *
     * @description Gets Advanced Search Objects
     */
    get: {
      responses: {
        /** @description Successful response - Advanced searches retrieved */
        200: {
          content: {
            "application/json": components["schemas"]["AdvancedSearchSearchResults"];
          };
        };
      };
    };
    /**
     * Create Advanced Search object
     *
     * @description Creates Advanced Search Object
     */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["AdvancedSearch"];
        };
      };
      responses: {
        /** @description Successful response - Advanced search created */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
      };
    };
  };
  "/v1/advanced-mobile-device-searches/choices": {
    /**
     * Get Mobile Device Advanced Search criteria choices
     *
     * @description Gets Mobile Device Advanced Search criteria choices. A list of potentially valid choices can be found by navigating to the Criteria page of the Advanced Mobile Device Search creation process. A few are "App Name", "Building", and "Display Name".
     */
    get: {
      parameters: {
        query: {
          criteria: string;
          site?: string;
          contains?: string;
        };
      };
      responses: {
        /** @description Successful response - Criteria choices retrieved */
        200: {
          content: {
            "application/json": components["schemas"]["AdvancedSearchCriteriaChoices"];
          };
        };
      };
    };
  };
  "/v1/advanced-mobile-device-searches/delete-multiple": {
    /**
     * Remove specified Advanced Search objects
     *
     * @description Removes specified Advanced Search Objects
     */
    post: {
      /** @description ids of the building to be deleted */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Ids"];
        };
      };
      responses: {
        /** @description Successful response - Advanced searches deleted */
        204: {
          content: never;
        };
        /** @description At least one target Advanced Search does not exist */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/advanced-mobile-device-searches/{id}": {
    /**
     * Get specified Advanced Search object
     *
     * @description Gets Specified Advanced Search Object
     */
    get: {
      parameters: {
        path: {
          /** @description id of target Advanced Search */
          id: string;
        };
      };
      responses: {
        /** @description Successful response - Advanced Search retrieved */
        200: {
          content: {
            "application/json": components["schemas"]["AdvancedSearch"];
          };
        };
        /** @description Target Advanced Search does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Get specified Advanced Search object
     *
     * @description Gets Specified Advanced Search Object
     */
    put: {
      parameters: {
        path: {
          /** @description id of target Advanced Search */
          id: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["AdvancedSearch"];
        };
      };
      responses: {
        /** @description Successful response - Advanced Search updated */
        200: {
          content: {
            "application/json": components["schemas"]["AdvancedSearch"];
          };
        };
        /** @description Target Advanced Search does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Remove specified Advanced Search object
     *
     * @description Removes specified Advanced Search Object
     */
    delete: {
      parameters: {
        path: {
          /** @description instance id of advanced search record */
          id: string;
        };
      };
      responses: {
        /** @description Successful response - Advanced search deleted */
        204: {
          content: never;
        };
        /** @description Target Advanced Search does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/advanced-user-content-searches": {
    /**
     * Get All Advanced User Content Search objects
     *
     * @description Get All Advanced User Content Search Objects
     */
    get: {
      responses: {
        /** @description Successful response - Advanced User Content Searches retrieved */
        200: {
          content: {
            "application/json": components["schemas"]["AdvancedUserContentSearchSearchResults"];
          };
        };
      };
    };
    /**
     * Create Advanced User Content Search object
     *
     * @description Creates Advanced User Content Search Object
     */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["AdvancedUserContentSearch"];
        };
      };
      responses: {
        /** @description Successful response - Advanced User Content Search created */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
      };
    };
  };
  "/v1/advanced-user-content-searches/{id}": {
    /**
     * Get Specified Advanced User Content Search object
     *
     * @description Gets Specified Advanced User Content Search Object
     */
    get: {
      parameters: {
        path: {
          /** @description id of target Advanced User Content Search */
          id: string;
        };
      };
      responses: {
        /** @description Successful response - Advanced User Content Search retrieved */
        200: {
          content: {
            "application/json": components["schemas"]["AdvancedUserContentSearch"];
          };
        };
        /** @description Target Advanced User Content Search does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Get Specified Advanced User Content Search object
     *
     * @description Gets Specified Advanced User Content Search Object
     */
    put: {
      parameters: {
        path: {
          /** @description id of target Advanced User Content Search */
          id: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["AdvancedUserContentSearch"];
        };
      };
      responses: {
        /** @description Successful response - Advanced User Content Search updated */
        200: {
          content: {
            "application/json": components["schemas"]["AdvancedUserContentSearch"];
          };
        };
        /** @description Target Advanced User Content Search does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Remove specified Advanced User Content Search object
     *
     * @description Removes specified Advanced User Content Search Object
     */
    delete: {
      parameters: {
        path: {
          /** @description instance id of Advanced User Content Search record */
          id: string;
        };
      };
      responses: {
        /** @description Successful response - Advanced User Content Search deleted */
        204: {
          content: never;
        };
        /** @description Target Advanced User Content Search does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/api-integrations": {
    /**
     * Get the current API Integrations
     * @description Get Jamf|Pro API Integrations with Search Criteria
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Fields allowed in the query: id, displayName. Example: sort=displayName:desc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter app titles collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, displayName. Example: displayName=="*IntegrationName*" */
          filter?: string;
        };
      };
      responses: {
        /** @description A list of the current Jamf API Integrations */
        200: {
          content: {
            "application/json": components["schemas"]["ApiIntegrationSearchResult"];
          };
        };
      };
    };
    /**
     * Create API integration object
     * @description Create API integration object
     */
    post: operations["postCreateApiIntegration"];
  };
  "/v1/api-integrations/{id}": {
    /**
     * Get specified API integration object
     * @description Gets specified API integration object
     */
    get: operations["getOneApiIntegration"];
    /**
     * Update specified API integration object
     * @description Update specified API integration object
     */
    put: operations["putUpdateApiIntegration"];
    /**
     * Remove specified API integration
     * @description Removes specified API integration
     */
    delete: operations["deleteApiIntegration"];
  };
  "/v1/api-integrations/{id}/client-credentials": {
    /**
     * Create client credentials for specified API integration
     * @description Create client credentials for specified API integration
     */
    post: operations["postCreateClientCredentials"];
  };
  "/v1/api-role-privileges": {
    /**
     * Get the current Jamf API Role Privileges
     * @description Get role privileges
     */
    get: {
      responses: {
        /** @description A sorted list of the current Jamf API Roles Privileges */
        200: {
          content: {
            "application/json": components["schemas"]["ApiRolePrivileges"];
          };
        };
      };
    };
  };
  "/v1/api-role-privileges/search": {
    /**
     * Search the current Jamf API Role Privileges
     * @description Search role privileges
     */
    get: {
      parameters: {
        query: {
          /** @description The partial or complete privilege name we are searching for */
          name: string;
          /** @description Limit the query results, defaults to 15 */
          limit?: string;
        };
      };
      responses: {
        /** @description A list of matches Jamf API Roles Privileges */
        200: {
          content: {
            "application/json": components["schemas"]["ApiRolePrivileges"];
          };
        };
      };
    };
  };
  "/v1/api-roles": {
    /**
     * Get the current Jamf API Roles
     * @description Get roles with Search Criteria
     */
    get: operations["getAllApiRoles"];
    /**
     * Create a new API role
     * @description Post to create new Role
     */
    post: operations["postCreateApiRole"];
  };
  "/v1/api-roles/{id}": {
    /**
     * Get the specific Jamf API Role
     * @description Get specific Role
     */
    get: operations["getOneApiRole"];
    /**
     * Update API Integrations Role
     * @description Update specific Role
     */
    put: operations["putUpdateApiRole"];
    /**
     * Delete API Integrations Role
     * @description Delete specific Role
     */
    delete: operations["deleteApiRole"];
  };
  "/v1/app-request/form-input-fields": {
    /**
     * Search for Form Input Fields
     *
     * @description Search for form input fields
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["AppRequestFormInputFieldSearchResults"];
          };
        };
      };
    };
    /**
     * Replace all Form Input Fields
     *
     * @description Replace all form input fields. Will delete, update, and create all input fields accordingly.
     */
    put: {
      /** @description list of form input fields to replace all existing fields. Will delete, update, and create all input fields accordingly. */
      requestBody: {
        content: {
          "application/json": components["schemas"]["AppRequestFormInputField"][];
        };
      };
      responses: {
        /** @description form input fields were replaced */
        200: {
          content: {
            "application/json": components["schemas"]["AppRequestFormInputField"][];
          };
        };
        /** @description Invalid data response */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Specified form input field object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Create Form Input Field record
     *
     * @description Create form input field record
     */
    post: {
      /** @description form input field object to create. ids defined in this body will be ignored */
      requestBody: {
        content: {
          "application/json": components["schemas"]["AppRequestFormInputField"];
        };
      };
      responses: {
        /** @description form input field record was created */
        201: {
          content: {
            "application/json": components["schemas"]["AppRequestFormInputField"];
          };
        };
        /** @description Invalid data response */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/app-request/form-input-fields/{id}": {
    /**
     * Get specified Form Input Field object
     *
     * @description Gets specified form input field object
     */
    get: {
      parameters: {
        path: {
          /** @description Instance id of form input field record */
          id: number;
        };
      };
      responses: {
        /** @description Details of form input field were found */
        200: {
          content: {
            "application/json": components["schemas"]["AppRequestFormInputField"];
          };
        };
        /** @description Specified form input field object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update specified Form Input Field object
     *
     * @description Update specified form input field object
     */
    put: {
      parameters: {
        path: {
          /** @description Instance id of form input field record */
          id: number;
        };
      };
      /** @description form input field object to create. ids defined in this body will be ignored */
      requestBody: {
        content: {
          "application/json": components["schemas"]["AppRequestFormInputField"];
        };
      };
      responses: {
        /** @description form input field update */
        200: {
          content: {
            "application/json": components["schemas"]["AppRequestFormInputField"];
          };
        };
        /** @description Invalid data response */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Specified form input field object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Remove specified Form Input Field record
     *
     * @description Removes specified form input field record
     */
    delete: {
      parameters: {
        path: {
          /** @description Instance id of form input field record */
          id: number;
        };
      };
      responses: {
        /** @description form input field record was deleted */
        204: {
          content: never;
        };
        /** @description Specified form input field object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/app-request/settings": {
    /**
     * Get Applicastion Request Settings
     *
     * @description Get app request settings
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["AppRequestSettings"];
          };
        };
      };
    };
    /**
     * Update Application Request Settings
     *
     * @description Update app request settings
     */
    put: {
      /** @description App request settings object */
      requestBody: {
        content: {
          "application/json": components["schemas"]["AppRequestSettings"];
        };
      };
      responses: {
        /** @description App request settings updated */
        200: {
          content: {
            "application/json": components["schemas"]["AppRequestSettings"];
          };
        };
        /** @description Invalid data response */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/app-store-country-codes": {
    /**
     * Return a list of Countries and the associated Codes
     *
     * @description Returns a list of countries and the associated codes that can be use for the App Store locale
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["CountryCodes"];
          };
        };
      };
    };
  };
  "/v1/auth": {
    /**
     * Get all the Authorization details associated with the current api
     *
     * @description Get all the authorization details associated with the current api token
     */
    get: {
      responses: {
        /** @description Current authorization details. */
        200: {
          content: {
            "application/json": components["schemas"]["AuthorizationV1"];
          };
        };
      };
    };
  };
  "/v1/auth/invalidate-token": {
    /**
     * Invalidate current token
     *
     * @description Invalidates current token
     */
    post: {
      responses: {
        /** @description token invalidated */
        204: {
          content: never;
        };
      };
    };
  };
  "/v1/auth/keep-alive": {
    /**
     * Invalidate existing token and generates new token
     *
     * @description Invalidates existing token and generates new token with extended expiration based on existing token credentials.
     */
    post: {
      responses: {
        /** @description Updated token. */
        200: {
          content: {
            "application/json": components["schemas"]["AuthTokenV1"];
          };
        };
      };
    };
  };
  "/v1/auth/token": {
    /**
     * Create a token based on other authentication details (basic, etc.)
     *
     * @description Create a token based on other authentication details (basic, etc.)
     */
    post: {
      responses: {
        /** @description New auth token generated. */
        200: {
          content: {
            "application/json": components["schemas"]["AuthTokenV1"];
          };
        };
      };
    };
  };
  "/v1/branding-images/download/{id}": {
    /**
     * Download a self service branding image
     *
     * @description Download a self service branding image
     */
    get: {
      parameters: {
        path: {
          /** @description id of the self service branding image */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "image/*": string;
          };
        };
      };
    };
  };
  "/v1/buildings": {
    /**
     * Search for sorted and paged Buildings
     *
     * @description Search for sorted and paged buildings
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter buildings collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: name, streetAddress1, streetAddress2, city, stateProvince, zipPostalCode, country. This param can be combined with paging and sorting. Example: filter=city=="Chicago" and name=="*build*" */
          filter?: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["BuildingSearchResults"];
          };
        };
      };
    };
    /**
     * Create Building record
     *
     * @description Create building record
     */
    post: {
      /** @description building object to create. ids defined in this body will be ignored */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Building"];
        };
      };
      responses: {
        /** @description Building record was created */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
      };
    };
  };
  "/v1/buildings/delete-multiple": {
    /**
     * Delete multiple Buildings by their ids
     *
     * @description multiple many Buildings by their ids
     */
    post: {
      /** @description ids of the building to be deleted */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Ids"];
        };
      };
      responses: {
        /** @description All building ids passed in request sucessfully deleted. */
        204: {
          content: never;
        };
        /** @description Request processed.  Returns ids and error codes of any buildings unable to be deleted.  Expected error codes: INVALID_ID - id does not exist SYSTEM_EXCEPTION - a system exception occurred trying to delete the building. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/buildings/export": {
    /**
     * Export Buildings collection
     *
     * @description Export Buildings collection
     */
    post: {
      parameters: {
        query?: {
          "export-fields"?: components["parameters"]["export-fields"];
          "export-labels"?: components["parameters"]["export-labels"];
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=id:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. This param can be combined with paging and sorting. Example: name=="*buildings*" */
          filter?: string;
        };
      };
      /** @description Optional. Override query parameters since they can make URI exceed 2,000 character limit. */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ExportParameters"];
        };
      };
      responses: {
        /** @description Export successful */
        200: {
          content: {
            "text/csv": unknown;
          };
        };
        /** @description Export fields specified incorrectly - non-existing column or duplicate on the list. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Export currently unavailable, all export-related resources are in use. Try again later. */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/buildings/{id}": {
    /**
     * Get specified Building object
     *
     * @description Gets specified Building object
     */
    get: {
      parameters: {
        path: {
          /** @description instance id of building record */
          id: string;
        };
      };
      responses: {
        /** @description Details of building were found */
        200: {
          content: {
            "application/json": components["schemas"]["Building"];
          };
        };
        /** @description Specified building object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update specified Building object
     *
     * @description Update specified building object
     */
    put: {
      parameters: {
        path: {
          /** @description instance id of building record */
          id: string;
        };
      };
      /** @description building object to update. ids defined in this body will be ignored */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Building"];
        };
      };
      responses: {
        /** @description Building update */
        200: {
          content: {
            "application/json": components["schemas"]["Building"];
          };
        };
      };
    };
    /**
     * Remove specified Building record
     *
     * @description Removes specified building record
     */
    delete: {
      parameters: {
        path: {
          /** @description instance id of building record */
          id: string;
        };
      };
      responses: {
        /** @description Building record was deleted */
        204: {
          content: never;
        };
      };
    };
  };
  "/v1/buildings/{id}/history": {
    /**
     * Get specified Building History object
     *
     * @description Gets specified Building history object
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15 */
          filter?: string;
        };
        path: {
          /** @description instance id of building history record */
          id: string;
        };
      };
      responses: {
        /** @description Details of building history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
        /** @description Specified building object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Add specified Building history object notes
     *
     * @description Adds specified Building history object notes
     */
    post: {
      parameters: {
        path: {
          /** @description instance id of building history record */
          id: string;
        };
      };
      /** @description history notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of building history were added */
        201: {
          content: {
            "application/json": components["schemas"]["ObjectHistory"];
          };
        };
        /** @description Specified building object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Building history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/buildings/{id}/history/export": {
    /**
     * Export history object collection in specified format for specified Buildings
     *
     * @description Export history object collection in specified format for specified Buildings
     */
    post: {
      parameters: {
        query?: {
          "export-fields"?: components["parameters"]["export-fields"];
          "export-labels"?: components["parameters"]["export-labels"];
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15 */
          filter?: string;
        };
        path: {
          /** @description instance id of buildings */
          id: string;
        };
      };
      /** @description Optional. Override query parameters since they can make URI exceed 2,000 character limit. */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ExportParameters"];
        };
      };
      responses: {
        /** @description Export successful */
        200: {
          content: {
            "text/csv": unknown;
          };
        };
        /** @description Export fields specified incorrectly - non-existing column or duplicate on the list. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Export currently unavailable, all export-related resources are in use. Try again later. */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/cache-settings": {
    /**
     * Get Cache Settings
     *
     * @description gets cache settings
     */
    get: {
      responses: {
        /** @description cache settings */
        200: {
          content: {
            "application/json": components["schemas"]["CacheSettings"];
          };
        };
      };
    };
    /**
     * Update Cache Settings
     *
     * @description updates cache settings
     */
    put: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["CacheSettings"];
        };
      };
      responses: {
        /** @description cache has been updated */
        200: {
          content: {
            "application/json": components["schemas"]["CacheSettings"];
          };
        };
        /**
         * @description The following code is returned by this call:
         * HOSTED_ENVIRONMENT - PUT command is not available in hosted environments.
         */
        403: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/categories": {
    /**
     * Get Category objects
     *
     * @description Gets `Category` objects.
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter categories collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: name, priority. This param can be combined with paging and sorting. Example: filter=name=="Apps*" and priority>=5 */
          filter?: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["CategoriesSearchResults"];
          };
        };
      };
    };
    /**
     * Create Category record
     *
     * @description Create category record
     */
    post: {
      /** @description category object to create. IDs defined in this body will be ignored */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Category"];
        };
      };
      responses: {
        /** @description Category record was created */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
      };
    };
  };
  "/v1/categories/delete-multiple": {
    /**
     * Delete multiple Categories by their IDs
     *
     * @description Delete multiple Categories by their IDs
     */
    post: {
      /** @description IDs of the categories to be deleted */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Ids"];
        };
      };
      responses: {
        /** @description All Category IDs passed in request sucessfully deleted. */
        204: {
          content: never;
        };
        /** @description Request processed.  Returns IDs and error codes of any categories unable to be deleted.  Expected error codes: INVALID_ID - id does not exist SYSTEM_EXCEPTION - a system exception occurred trying to delete the category. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/categories/{id}": {
    /**
     * Get specified Category object
     *
     * @description Gets specified Category object
     */
    get: {
      parameters: {
        path: {
          /** @description instance id of category record */
          id: string;
        };
      };
      responses: {
        /** @description Details of category were found */
        200: {
          content: {
            "application/json": components["schemas"]["Category"];
          };
        };
        /** @description Specified category object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update specified Category object
     *
     * @description Update specified category object
     */
    put: {
      parameters: {
        path: {
          /** @description instance id of category record */
          id: string;
        };
      };
      /** @description category object to create. id defined in this body will be ignored */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Category"];
        };
      };
      responses: {
        /** @description Category record was updated */
        200: {
          content: {
            "application/json": components["schemas"]["Category"];
          };
        };
      };
    };
    /**
     * Remove specified Category record
     *
     * @description Removes specified category record
     */
    delete: {
      parameters: {
        path: {
          /** @description instance id of category record */
          id: string;
        };
      };
      responses: {
        /** @description Category record was deleted */
        204: {
          content: never;
        };
      };
    };
  };
  "/v1/categories/{id}/history": {
    /**
     * Get specified Category history object
     *
     * @description Gets specified Category history object
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15 */
          filter?: string;
        };
        path: {
          /** @description instance id of category history record */
          id: string;
        };
      };
      responses: {
        /** @description Details of category history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
        /** @description Specified category object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Add specified Category history object notes
     *
     * @description Adds specified Category history object notes
     */
    post: {
      parameters: {
        path: {
          /** @description instance id of category history record */
          id: string;
        };
      };
      /** @description history notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of category history were added */
        201: {
          content: {
            "application/json": components["schemas"]["ObjectHistory"];
          };
        };
        /** @description Specified category object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Category history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/classic-ldap/{id}": {
    /**
     * Get mappings for OnPrem Ldap configuration with given id.
     * @description Get mappings for OnPrem Ldap configuration with given id.
     */
    get: {
      parameters: {
        path: {
          /** @description OnPrem Ldap identifier */
          id: string;
        };
      };
      responses: {
        /** @description OnPrem Ldap mappings returned. */
        200: {
          content: {
            "application/json": components["schemas"]["ClassicLdapMappings"];
          };
        };
        /** @description Id can only be a number. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Specified OnPrem Ldap configuration does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/cloud-azure": {
    /**
     * Create Azure Cloud Identity Provider configuration
     * @description Create new Azure Cloud Identity Provider configuration with unique display name.
     */
    post: {
      /** @description Azure Cloud Identity Provider configuration to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["AzureConfigurationRequest"];
        };
      };
      responses: {
        /** @description Azure Cloud Identity Provider configuration created */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Azure Cloud Identity Provider configuration cannot be saved. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description This endpoint is not available for your environment. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/cloud-azure/defaults/mappings": {
    /**
     * Get default mappings
     * @description This is the default set of attributes that allows you to return the data you need from Azure AD. Some fields may be empty and may be edited when creating a new configuration.
     */
    get: {
      responses: {
        /** @description Default mappings returned. */
        200: {
          content: {
            "application/json": components["schemas"]["AzureMappings"];
          };
        };
        /** @description Files cannot be loaded. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description This endpoint is not available for your environment. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/cloud-azure/defaults/server-configuration": {
    /**
     * Get default server configuration
     * @description This is the default set of attributes that allows you to return the data you need from Azure AD. Some fields may be empty and may be edited when creating a new configuration.
     */
    get: {
      responses: {
        /** @description Default server configuration returned. */
        200: {
          content: {
            "application/json": components["schemas"]["AzureServerConfiguration"];
          };
        };
        /** @description Default server configuration cannot be loaded. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description This endpoint is not available for your environment. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/cloud-azure/{id}": {
    /**
     * Get Azure Cloud Identity Provider configuration with given ID.
     * @description Get Azure Cloud Identity Provider configuration with given ID.
     */
    get: {
      parameters: {
        path: {
          /** @description Cloud Identity Provider identifier */
          id: string;
        };
      };
      responses: {
        /** @description Cloud Identity Provider configuration returned. */
        200: {
          content: {
            "application/json": components["schemas"]["AzureConfiguration"];
          };
        };
        /** @description ID can only be a number. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description This endpoint is not available for your environment if CLOUD_ONLY reason code or specified Azure Cloud Identity Provider configuration does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update Azure Cloud Identity Provider configuration
     * @description Update Azure Cloud Identity Provider configuration. Cannot be used for partial updates, all content body must be sent.
     */
    put: {
      parameters: {
        path: {
          /** @description Cloud Identity Provider identifier */
          id: string;
        };
      };
      /** @description Azure Cloud Identity Provider configuration to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["AzureConfigurationUpdate"];
        };
      };
      responses: {
        /** @description Cloud Identity Provider configuration updated */
        200: {
          content: {
            "application/json": components["schemas"]["AzureConfiguration"];
          };
        };
        /** @description One or more parameters were invalid. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description This endpoint is not available for your environment if CLOUD_ONLY reason code or Cloud Identity Provider configuration does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description The request URL configuration id value does not match the id value in the request body. */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete Cloud Identity Provider configuration.
     * @description Delete Cloud Identity Provider configuration.
     */
    delete: {
      parameters: {
        path: {
          /** @description Cloud Identity Provider identifier */
          id: string;
        };
      };
      responses: {
        /** @description Cloud Identity Provider configuration deleted. */
        204: {
          content: never;
        };
        /** @description ID can only be a number. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description This endpoint is not available for your environment if CLOUD_ONLY reason code or Cloud Identity Provider configuration does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/cloud-distribution-point/upload-capability": {
    /**
     * Finds specific information for the currently configured Cloud Distribution Point.
     *
     * @description Finds a variety of values based on the currently configured Cloud Distrbution Point.
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["CloudDistributionPointUploadCapability"];
          };
        };
      };
    };
  };
  "/v1/cloud-idp": {
    /**
     * Get information about all Cloud Identity Providers configurations.
     * @description Returns basic informations about all configured Cloud Identity Provider.
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
        };
      };
      responses: {
        /** @description Cloud Identity Provider configurations informations returned. */
        200: {
          content: {
            "application/json": components["schemas"]["ConfigurationSearchResults"];
          };
        };
      };
    };
  };
  "/v1/cloud-idp/export": {
    /**
     * Export Cloud Identity Providers collection
     *
     * @description Export Cloud Identity Providers collection
     */
    post: {
      parameters: {
        query?: {
          "export-fields"?: components["parameters"]["export-fields"];
          "export-labels"?: components["parameters"]["export-labels"];
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:desc. Multiple sort criteria are supported and must be seperated with a comma. Example: sort=id:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. This param can be combined with paging and sorting. Example: name=="*department*" */
          filter?: string;
        };
      };
      /** @description Optional. Override query parameters since they can make URI exceed 2,000 character limit. */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ExportParameters"];
        };
      };
      responses: {
        /** @description Export successful */
        200: {
          content: {
            "text/csv": unknown;
          };
        };
        /** @description Export fields specified incorrectly - non-existing column or duplicate on the list. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Export currently unavailable, all export-related resources are in use. Try again later. */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/cloud-idp/{id}": {
    /**
     * Get Cloud Identity Provider configuration with given ID.
     * @description Get Cloud Identity Provider configuration with given ID.
     */
    get: {
      parameters: {
        path: {
          /** @description Cloud Identity Provider identifier */
          id: string;
        };
      };
      responses: {
        /** @description Cloud Identity Provider configuration returned. */
        200: {
          content: {
            "application/json": components["schemas"]["CloudIdPCommon"];
          };
        };
        /** @description ID can only be a number. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Specified Cloud Identity Provider configuration does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/cloud-idp/{id}/history": {
    /**
     * Get Cloud Identity Provider history
     * @description Gets specified Cloud Identity Provider object history
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15 */
          filter?: string;
        };
        path: {
          /** @description Cloud Identity Provider identifier */
          id: string;
        };
      };
      responses: {
        /** @description Details of Cloud Identity Provider history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
        /** @description Id can only be a number. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Specified Cloud Identity Provider object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Add Cloud Identity Provider history note
     * @description Adds specified Cloud Identity Provider object history notes
     */
    post: {
      parameters: {
        path: {
          /** @description Cloud Identity Provider identifier */
          id: string;
        };
      };
      /** @description history notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of Cloud Identity Provider history were added */
        201: {
          content: {
            "application/json": components["schemas"]["ObjectHistory"];
          };
        };
        /** @description Specified Cloud Identity Provider object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Notes of Cloud Identity Provider can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/cloud-idp/{id}/test-group": {
    /**
     * Get group test search
     * @description Do test search to ensure about configuration and mappings
     */
    post: {
      parameters: {
        path: {
          /** @description Cloud Identity Provider identifier */
          id: string;
        };
      };
      /** @description Search request */
      requestBody: {
        content: {
          "application/json": components["schemas"]["GroupTestSearchRequest"];
        };
      };
      responses: {
        /** @description Cloud Identity Provider test search result returned. */
        200: {
          content: {
            "application/json": components["schemas"]["GroupTestSearchResponse"];
          };
        };
        /** @description Cloud Identity Provider does not exist or is not active. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/cloud-idp/{id}/test-user": {
    /**
     * Get user test search
     * @description Do test search to ensure about configuration and mappings
     */
    post: {
      parameters: {
        path: {
          /** @description Cloud Identity Provider identifier */
          id: string;
        };
      };
      /** @description Search request */
      requestBody: {
        content: {
          "application/json": components["schemas"]["UserTestSearchRequest"];
        };
      };
      responses: {
        /** @description Cloud Identity Provider test search result returned. */
        200: {
          content: {
            "application/json": components["schemas"]["UserTestSearchResponse"];
          };
        };
        /** @description Cloud Identity Provider does not exist or is not active. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/cloud-idp/{id}/test-user-membership": {
    /**
     * Get membership test search
     * @description Do test search to ensure about configuration and mappings
     */
    post: {
      parameters: {
        path: {
          /** @description Cloud Identity Provider identifier */
          id: string;
        };
      };
      /** @description Search request */
      requestBody: {
        content: {
          "application/json": components["schemas"]["MembershipTestSearchRequest"];
        };
      };
      responses: {
        /** @description Cloud Identity Provider test search result returned. */
        200: {
          content: {
            "application/json": components["schemas"]["MembershipTestSearchResponse"];
          };
        };
        /** @description Cloud Identity Provider does not exist or is not active. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/cloud-information": {
    /**
     * Retrieve information related to cloud setup.
     *
     * @description Retrieve information related to cloud setup.
     * Retrieves information related to cloud setup. Provides details about cloud instance configuration.
     */
    get: {
      responses: {
        /** @description Result of verification for being cloud-based instance */
        200: {
          content: {
            "application/json": components["schemas"]["CloudResponse"];
          };
        };
      };
    };
  };
  "/v1/computer-groups": {
    /**
     * Returns the list of all computer groups
     *
     * @description Use it to get the list of all computer groups.
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["ComputerGroup"][];
          };
        };
      };
    };
  };
  "/v1/computer-inventory-collection-settings": {
    /**
     * Returns computer inventory settings
     * @description Returns computer inventory settings
     */
    get: {
      responses: {
        /** @description Successful response returns the computer inventory settings */
        200: {
          content: {
            "application/json": components["schemas"]["ComputerInventoryCollectionSettings"];
          };
        };
      };
    };
    /**
     * Update computer inventory settings
     * @description Update computer inventory settings
     */
    patch: {
      /** @description Computer inventory settings to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ComputerInventoryCollectionSettings"];
        };
      };
      responses: {
        /** @description Computer inventory settings updated */
        200: {
          content: {
            "application/json": components["schemas"]["ComputerInventoryCollectionSettings"];
          };
        };
      };
    };
  };
  "/v1/computer-inventory-collection-settings/custom-path": {
    /**
     * Create Computer Inventory Collection Settings Custom Path
     * @description Creates a custom search path to use when collecting applications, fonts, and plug-ins.
     */
    post: {
      /** @description Computer inventory settings to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreatePath"];
        };
      };
      responses: {
        /** @description Custom path created */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Invalid data response */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/computer-inventory-collection-settings/custom-path/{id}": {
    /**
     * Delete Custom Path from Computer Inventory Collection Settings
     * @description Delete Custom Path from Computer Inventory Collection Settings
     */
    delete: {
      parameters: {
        path: {
          /** @description id of Custom Path */
          id: string;
        };
      };
      responses: {
        /** @description Custom path deleted */
        204: {
          content: never;
        };
        /** @description Invalid data response */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/computer-prestages/scope": {
    /**
     * Get all device Scope for all Computer Prestages
     *
     * @deprecated
     * @description Get all device scope for all computer prestages
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageScope"];
          };
        };
      };
    };
  };
  "/v1/computer-prestages/{id}/scope": {
    /**
     * Get device Scope for a specific Computer Prestage
     *
     * @deprecated
     * @description Get device scope for a specific computer prestage
     */
    get: {
      parameters: {
        path: {
          /** @description Computer Prestage identifier */
          id: number;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageScopeResponse"];
          };
        };
        /** @description Computer Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Replace device Scope for a specific Computer Prestage
     *
     * @deprecated
     * @description Replace device scope for a specific computer prestage
     */
    put: {
      parameters: {
        path: {
          /** @description Computer Prestage identifier */
          id: number;
        };
      };
      /** @description Serial Numbers to scope */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PrestageScopeUpdate"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageScopeResponse"];
          };
        };
        /** @description One or more serial numbers are not valid */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Computer Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Optimistic Lock Error - The prestage you are trying to update has been updated by another process */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Add device Scope for a specific Computer Prestage
     *
     * @deprecated
     * @description Add device scope for a specific computer prestage
     */
    post: {
      parameters: {
        path: {
          /** @description Computer Prestage identifier */
          id: number;
        };
      };
      /** @description Serial Numbers to scope */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PrestageScopeUpdate"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageScopeResponse"];
          };
        };
        /** @description One or more serial numbers are not valid */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Computer Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Optimistic Lock Error - The prestage you are trying to update has been updated by another process */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Remove device Scope for a specific Computer Prestage
     *
     * @deprecated
     * @description Remove device scope for a specific computer prestage
     */
    delete: {
      parameters: {
        path: {
          /** @description Computer Prestage identifier */
          id: number;
        };
      };
      /** @description Serial Numbers to remove from scope */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PrestageScopeUpdate"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageScopeResponse"];
          };
        };
        /** @description One or more serial numbers are not valid */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Computer Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Optimistic Lock Error - The prestage you are trying to update has been updated by another process */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/computers-inventory": {
    /**
     * Return paginated Computer Inventory records
     * @description Return paginated Computer Inventory records
     */
    get: {
      parameters: {
        query?: {
          /** @description section of computer details, if not specified, General section data is returned. Multiple section parameters are supported, e.g. section=GENERAL&section=HARDWARE */
          section?: components["schemas"]["ComputerSection"][];
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /**
           * @description Sorting criteria in the format: `property:asc/desc`. Default sort
           * is `general.name:asc`. Multiple sort criteria are supported and must be separated with
           * a comma.
           *
           * Fields allowed in the sort: `general.name`, `udid`, `id`, `general.assetTag`,
           * `general.jamfBinaryVersion`, `general.lastContactTime`, `general.lastEnrolledDate`, `general.lastCloudBackupDate`,
           * `general.reportDate`, `general.remoteManagement.managementUsername`,
           * `general.mdmCertificateExpiration`, `general.platform`,
           * `hardware.make`, `hardware.model`,
           * `operatingSystem.build`, `operatingSystem.supplementalBuildVersion`, `operatingSystem.rapidSecurityResponse`, `operatingSystem.name`, `operatingSystem.version`,
           * `userAndLocation.realname`,
           * `purchasing.lifeExpectancy`, `purchasing.warrantyDate`
           *
           * Example: `sort=udid:desc,general.name:asc`.
           */
          sort?: string[];
          /**
           * @description Query in the RSQL format, allowing to filter computer inventory collection.
           * Default filter is empty query - returning all results for the requested page.
           *
           * Fields allowed in the query: `general.name`, `udid`, `id`, `general.assetTag`, `general.barcode1`, `general.barcode2`,
           * `general.enrolledViaAutomatedDeviceEnrollment`, `general.lastIpAddress`, `general.itunesStoreAccountActive`,
           * `general.jamfBinaryVersion`, `general.lastContactTime`, `general.lastEnrolledDate`, `general.lastCloudBackupDate`,
           * `general.reportDate`, `general.lastReportedIp`, `general.remoteManagement.managed`, `general.remoteManagement.managementUsername`,
           * `general.mdmCapable.capable`, `general.mdmCertificateExpiration`, `general.platform`, `general.supervised`, `general.userApprovedMdm`, `general.declarativeDeviceManagementEnabled`,
           * `hardware.bleCapable`, `hardware.macAddress`, `hardware.make`, `hardware.model`, `hardware.modelIdentifier`, `hardware.serialNumber`,
           * `hardware.supportsIosAppInstalls`,`hardware.appleSilicon`, `operatingSystem.activeDirectoryStatus`, `operatingSystem.fileVault2Status`,
           * `operatingSystem.build`, `operatingSystem.supplementalBuildVersion`, `operatingSystem.rapidSecurityResponse`, `operatingSystem.name`, `operatingSystem.version`, `security.activationLockEnabled`,
           * `security.recoveryLockEnabled`,`security.firewallEnabled`,`userAndLocation.buildingId`, `userAndLocation.departmentId`, `userAndLocation.email`, `userAndLocation.realname`,
           * `userAndLocation.phone`, `userAndLocation.position`,`userAndLocation.room`, `userAndLocation.username`,
           * `purchasing.appleCareId`, `purchasing.lifeExpectancy`, `purchasing.purchased`, `purchasing.leased`, `purchasing.vendor`, `purchasing.warrantyDate`,
           *
           * This param can be combined with paging and sorting.
           * Example: `filter=general.name=="Orchard"`
           */
          filter?: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["ComputerInventorySearchResults"];
          };
        };
      };
    };
  };
  "/v1/computers-inventory-detail/{id}": {
    /**
     * Return all sections of a computer
     * @description Return all sections of a computer
     */
    get: {
      parameters: {
        path: {
          /** @description instance id of computer record */
          id: string;
        };
      };
      responses: {
        /** @description Details of computer were found */
        200: {
          content: {
            "application/json": components["schemas"]["ComputerInventory"];
          };
        };
        /** @description Specified computer object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update specific fields on a computer
     * @description Update specific fields on a computer, then return the updated computer object.
     */
    patch: {
      parameters: {
        path: {
          /** @description instance id of computer record */
          id: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ComputerInventoryUpdateRequest"];
        };
      };
      responses: {
        /** @description Details of computer were found */
        200: {
          content: {
            "application/json": components["schemas"]["ComputerInventory"];
          };
        };
        /** @description Specified computer object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/computers-inventory/filevault": {
    /**
     * Return paginated FileVault information for all computers
     * @description Return paginated FileVault information for all computers
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["ComputerInventoryFileVaultSearchResults"];
          };
        };
      };
    };
  };
  "/v1/computers-inventory/{id}": {
    /**
     * Return General section of a Computer
     * @description Return General section of a Computer
     */
    get: {
      parameters: {
        query?: {
          /** @description section of computer details, if not specified, General section data is returned. Multiple section parameters are supported, e.g. section=general&section=hardware */
          section?: components["schemas"]["ComputerSection"][];
        };
        path: {
          /** @description instance id of computer record */
          id: string;
        };
      };
      responses: {
        /** @description Details of computer were found */
        200: {
          content: {
            "application/json": components["schemas"]["ComputerInventory"];
          };
        };
        /** @description Specified computer object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Remove specified Computer record
     * @description Remove specified Computer record
     */
    delete: {
      parameters: {
        path: {
          /** @description instance id of computer record */
          id: string;
        };
      };
      responses: {
        /** @description Computer record successfully removed */
        204: {
          content: never;
        };
        /** @description Specified computer object id does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/computers-inventory/{id}/attachments": {
    /**
     * Upload attachment and assign to computer
     * @description Upload attachment and assign to computer
     */
    post: {
      parameters: {
        path: {
          /** @description instance id of computer record */
          id: string;
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            /**
             * Format: binary
             * @description The file to upload
             */
            file: string;
          };
        };
      };
      responses: {
        /** @description Successfully uploaded attachment */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Specified computer object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/computers-inventory/{id}/attachments/{attachmentId}": {
    /**
     * Download attachment file
     * @description Download attachment file
     */
    get: {
      parameters: {
        path: {
          /** @description instance id of computer record */
          id: string;
          /** @description instance id of attachment object */
          attachmentId: string;
        };
      };
      responses: {
        /** @description Attachment successfully downloaded */
        200: {
          content: {
            "text/plain": string;
          };
        };
        /** @description Specified computer object or attachment does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Remove attachment
     * @description Remove attachment
     */
    delete: {
      parameters: {
        path: {
          /** @description instance id of computer record */
          id: string;
          /** @description instance id of attachment object */
          attachmentId: string;
        };
      };
      responses: {
        /** @description Attachment successfully removed */
        204: {
          content: never;
        };
        /** @description Specified computer object or attachment does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/computers-inventory/{id}/filevault": {
    /**
     * Return FileVault information for a specific computer
     * @description Return FileVault information for a specific computer
     */
    get: {
      parameters: {
        path: {
          /** @description instance id of computer record */
          id: string;
        };
      };
      responses: {
        /** @description FileVault information for computer was found */
        200: {
          content: {
            "application/json": components["schemas"]["ComputerInventoryFileVault"];
          };
        };
        /** @description FileVault information for specified computer does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/computers-inventory/{id}/view-recovery-lock-password": {
    /**
     * Return a Computers Recovery Lock Password
     * @description Return a Computers Recovery Lock Password
     */
    get: {
      parameters: {
        path: {
          /** @description instance id of computer record */
          id: string;
        };
      };
      responses: {
        /** @description Recovery Lock Password */
        200: {
          content: {
            "application/json": components["schemas"]["ComputerInventoryRecoveryLockPasswordResponse"];
          };
        };
        /** @description Specified computer object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/computers/{id}/recalculate-smart-groups": {
    /**
     * Recalculate a smart group for the given id
     *
     * @description Recalculates a smart group for the given id and then
     * returns the count of smart groups the computer falls into
     */
    post: {
      parameters: {
        path: {
          /** @description id of computer */
          id: number;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["RecalculationResults"];
          };
        };
        /** @description smart group not found */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/conditional-access/device-compliance-information/computer/{deviceId}": {
    /**
     * Get compliance information for a single computer device
     * @description Return basic compliance information for the given computer device
     */
    get: {
      parameters: {
        path: {
          /** @description ID of the device the query pertains */
          deviceId: string;
        };
      };
      responses: {
        /** @description Array of device compliance information records */
        200: {
          content: {
            "application/json": components["schemas"]["DeviceComplianceInformation"][];
          };
        };
      };
    };
  };
  "/v1/conditional-access/device-compliance-information/mobile/{deviceId}": {
    /**
     * Get compliance information for a single mobile device
     * @description Return basic compliance information for the given mobile device
     */
    get: {
      parameters: {
        path: {
          /** @description ID of the device the query pertains */
          deviceId: string;
        };
      };
      responses: {
        /** @description Array of device compliance information records */
        200: {
          content: {
            "application/json": components["schemas"]["DeviceComplianceInformation"][];
          };
        };
      };
    };
  };
  "/v1/conditional-access/device-compliance/feature-toggle": {
    /**
     * Retrieves Status of the Feature Toggle
     * @description Retrieves Status of the Feature Toggle
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["SharedDeviceComplianceFeatureToggle"];
          };
        };
      };
    };
  };
  "/v1/csa/token": {
    /**
     * Get details regarding the CSA token exchange
     *
     * @description Get details regarding the CSA token exchange
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["CsaToken"];
          };
        };
        /** @description CSA token exchange has not been initialized */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Re-initialize the CSA token exchange with new credentials
     *
     * @description Re-initialize the CSA token exchange with new credentials
     */
    put: {
      /** @description Jamf Nation username and password */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["JamfNationCredentials"];
        };
      };
      responses: {
        /** @description CSA Token Exchange succesfully updated */
        200: {
          content: {
            "application/json": components["schemas"]["CsaToken"];
          };
        };
        /** @description Jamf Nation credentials provided are invalid */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description CSA token exchange has not been initialized */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Initialize the CSA token exchange
     *
     * @description Initializes the CSA token exchange - This will allow Jamf Pro to authenticate with cloud-hosted services
     */
    post: {
      /** @description Jamf Nation username and password */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["JamfNationCredentials"];
        };
      };
      responses: {
        /** @description CSA Token Exchange succesfully initialized */
        200: {
          content: {
            "application/json": components["schemas"]["CsaToken"];
          };
        };
        /** @description Jamf Nation credentials provided are invalid */
        403: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description CSA token exchange has already been initialized */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete the CSA token exchange - This will disable Jamf Pro's ability to authenticate with cloud-hosted services
     *
     * @description Delete the CSA token exchange - This will disable Jamf Pro's ability to authenticate with cloud-hosted services
     */
    delete: {
      responses: {
        /** @description CSA Token Exchange successfully deleted */
        204: {
          content: never;
        };
        /** @description CSA Token Exchange has not been initialized */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/dashboard": {
    /**
     * Get all the dashboard setup information
     *
     * @description Get all the dashboard information for widgets and setup tasks
     */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["DashboardSetup"];
          };
        };
        /** @description Dashboard service is unavailable */
        503: {
          content: {
            "application/json": components["schemas"]["ApiErrorCause"];
          };
        };
      };
    };
  };
  "/v1/departments": {
    /**
     * Search for Departments
     *
     * @description Search for Departments
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter department collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. Example: name=="*department*" */
          filter?: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["DepartmentsSearchResults"];
          };
        };
      };
    };
    /**
     * Create department record
     *
     * @description Create department record
     */
    post: {
      /** @description department object to create. ids defined in this body will be ignored */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Department"];
        };
      };
      responses: {
        /** @description Department record was created */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
      };
    };
  };
  "/v1/departments/delete-multiple": {
    /**
     * Deletes all departments by ids passed in body
     *
     * @description Deletes all departments by ids passed in body
     */
    post: {
      /** @description ids of departments to be deleted. pass in an array of ids */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Ids"];
        };
      };
      responses: {
        /** @description All department ids passed in request sucessfully deleted. */
        204: {
          content: never;
        };
        /** @description Request processed.  Returns ids and error codes of any departments unable to be deleted.  Expected error codes: INVALID_ID - id does not exist SYSTEM_EXCEPTION - a system exception occured trying to delete the department. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/departments/{id}": {
    /**
     * Get specified Department object
     *
     * @description Gets specified Department object
     */
    get: {
      parameters: {
        path: {
          /** @description instance id of department record */
          id: string;
        };
      };
      responses: {
        /** @description Details of department were found */
        200: {
          content: {
            "application/json": components["schemas"]["Department"];
          };
        };
        /** @description Specified department object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update specified department object
     *
     * @description Update specified department object
     */
    put: {
      parameters: {
        path: {
          /** @description instance id of department record */
          id: string;
        };
      };
      /** @description department object to create. ids defined in this body will be ignored */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Department"];
        };
      };
      responses: {
        /** @description Department update */
        200: {
          content: {
            "application/json": components["schemas"]["Department"];
          };
        };
      };
    };
    /**
     * Remove specified department record
     *
     * @description Removes specified department record
     */
    delete: {
      parameters: {
        path: {
          /** @description instance id of department record */
          id: string;
        };
      };
      responses: {
        /** @description Department record was deleted */
        204: {
          content: never;
        };
      };
    };
  };
  "/v1/departments/{id}/history": {
    /**
     * Get specified Department history object
     *
     * @description Gets specified Department history object
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15 */
          filter?: string;
        };
        path: {
          /** @description instance id of department history record */
          id: string;
        };
      };
      responses: {
        /** @description Details of department history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
        /** @description Specified department object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Add specified Department history object notes
     *
     * @description Adds specified Department history object notes
     */
    post: {
      parameters: {
        path: {
          /** @description instance id of department history record */
          id: string;
        };
      };
      /** @description history notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of department history were added */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Specified department object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Department history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/deploy-package": {
    /**
     * Deploy packages using MDM
     * @description Deploys packages to macOS devices using the InstallEnterpriseApplication MDM command.
     */
    post: {
      parameters: {
        query?: {
          /**
           * @description Enables the 'verbose' response, which includes information about the commands queued as well as information about commands that failed to queue.
           * @example true
           */
          verbose?: boolean;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["InstallPackage"];
        };
      };
      responses: {
        /** @description Package deployment was successfully processed. See response body for further information. */
        200: {
          content: {
            "application/json": components["schemas"]["VerbosePackageDeploymentResponse"];
          };
        };
        /** @description Package deployment was queued up */
        202: {
          content: never;
        };
        /** @description Insufficient privileges to perform this action or Package Deployment is not enabled. */
        403: {
          content: never;
        };
      };
    };
  };
  "/v1/device-communication-settings": {
    /**
     * Retrieves all settings for device communication
     *
     * @description Retrieves all device communication settings, including automatic renewal of the MDM profile.
     */
    get: {
      responses: {
        /** @description Successful response - Device Communication Settings retrieved */
        200: {
          content: {
            "application/json": components["schemas"]["DeviceCommunicationSettings"];
          };
        };
      };
    };
    /**
     * Update device communication settings
     *
     * @description Update device communication settings
     */
    put: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["DeviceCommunicationSettings"];
        };
      };
      responses: {
        /** @description Successful response - Device communication Settings updated */
        200: {
          content: {
            "application/json": components["schemas"]["DeviceCommunicationSettings"];
          };
        };
      };
    };
  };
  "/v1/device-communication-settings/history": {
    /**
     * Get Device Communication settings history
     *
     * @description Gets Device Communication settings history
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15 */
          filter?: string;
        };
      };
      responses: {
        /** @description Details of Device Communication Settings history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
    /**
     * Add Device Communication Settings history notes
     *
     * @description Adds Device Communication Settings history notes
     */
    post: {
      /** @description history notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes to Device Communication Settings history were added */
        201: {
          content: {
            "application/json": components["schemas"]["ObjectHistory"];
          };
        };
        /** @description Device Communication Settings history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/device-enrollments": {
    /**
     * Read all sorted and paged Device Enrollment instances
     *
     * @description Search for sorted and paged device enrollment instances
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["DeviceEnrollmentInstanceSearchResults"];
          };
        };
      };
    };
  };
  "/v1/device-enrollments/public-key": {
    /**
     * Retrieve the Jamf Pro Device Enrollment public key
     *
     * @description Retrieve the Jamf Pro device enrollment public key
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/x-pem-file": string;
          };
        };
        /** @description Not Found */
        404: {
          content: never;
        };
      };
    };
  };
  "/v1/device-enrollments/syncs": {
    /**
     * Get all instance sync states for all Device Enrollment Instances
     *
     * @description Get all instance sync states for all instances
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["DeviceEnrollmentInstanceSyncStatus"][];
          };
        };
      };
    };
  };
  "/v1/device-enrollments/upload-token": {
    /**
     * Create a Device Enrollment Instance with the supplied Token
     *
     * @description Creates a device enrollment instance with the supplied token.
     */
    post: {
      /** @description The downloaded token base 64 encoded from the MDM server to be used to create a new Device Enrollment Instance. */
      requestBody: {
        content: {
          "application/json": components["schemas"]["DeviceEnrollmentToken"];
        };
      };
      responses: {
        /** @description Device Enrollment Instance was created */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Something went wrong */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/device-enrollments/{id}": {
    /**
     * Retrieve a Device Enrollment Instance with the supplied id
     *
     * @description Retrieves a Device Enrollment Instance with the supplied id
     */
    get: {
      parameters: {
        path: {
          /** @description Device Enrollment Instance identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeviceEnrollmentInstance"];
          };
        };
        /** @description Device Enrollment Instance with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update a Device Enrollment Instance with the supplied id
     *
     * @description Updates a Device Enrollment Instance with the supplied id
     */
    put: {
      parameters: {
        path: {
          /** @description Device Enrollment Instance identifier */
          id: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["DeviceEnrollmentInstance"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeviceEnrollmentInstance"];
          };
        };
        /** @description Device Enrollment Instance with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete a Device Enrollment Instance with the supplied id
     *
     * @description Deletes a Device Enrollment Instance with the supplied id
     */
    delete: {
      parameters: {
        path: {
          /** @description Device Enrollment Instance identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        204: {
          content: never;
        };
        /** @description Device Enrollment Instance with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/device-enrollments/{id}/devices": {
    /**
     * Retrieve a list of Devices assigned to the supplied id
     *
     * @description Retrieves a list of devices assigned to the supplied id
     */
    get: {
      parameters: {
        path: {
          /** @description Device Enrollment Instance identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeviceEnrollmentDeviceSearchResults"];
          };
        };
      };
    };
  };
  "/v1/device-enrollments/{id}/disown": {
    /**
     * Disown devices from the given Device Enrollment Instance
     *
     * @description Disowns devices from the given device enrollment instance
     */
    post: {
      parameters: {
        path: {
          /** @description Device Enrollment Instance identifier */
          id: string;
        };
      };
      /** @description List of device serial numbers to disown */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["DeviceEnrollmentDisownBody"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeviceEnrollmentDisownResponse"];
          };
        };
        /** @description Could not find device enrollment program instance for given id */
        404: {
          content: never;
        };
        /** @description Something went wrong. */
        500: {
          content: never;
        };
      };
    };
  };
  "/v1/device-enrollments/{id}/history": {
    /**
     * Get sorted and paged Device Enrollment history objects
     *
     * @description Gets sorted and paged device enrollment history objects
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default search is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: search=username!=admin and details==*disabled* and date<2019-12-15 */
          filter?: string;
        };
        path: {
          /** @description Device Enrollment Instance identifier */
          id: string;
        };
      };
      responses: {
        /** @description Details of device enrollment history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
    /**
     * Add Device Enrollment history object notes
     *
     * @description Adds device enrollment history object notes
     */
    post: {
      parameters: {
        path: {
          /** @description Device Enrollment Instance identifier */
          id: string;
        };
      };
      /** @description History notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of device enrollment history were added */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Device enrollment history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/device-enrollments/{id}/syncs": {
    /**
     * Get all instance sync states for a single Device Enrollment Instance
     *
     * @description Get all instance sync states for a single instance
     */
    get: {
      parameters: {
        path: {
          /** @description Device Enrollment Instance identifier */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["DeviceEnrollmentInstanceSyncStatus"][];
          };
        };
      };
    };
  };
  "/v1/device-enrollments/{id}/syncs/latest": {
    /**
     * Get the latest sync state for a single Device Enrollment Instance
     *
     * @description Get the latest sync state for a single instance
     */
    get: {
      parameters: {
        path: {
          /** @description Device Enrollment Instance identifier */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["DeviceEnrollmentInstanceSyncStatus"];
          };
        };
      };
    };
  };
  "/v1/device-enrollments/{id}/upload-token": {
    /**
     * Update a Device Enrollment Instance with the supplied Token
     *
     * @description Updates a device enrollment instance with the supplied token.
     */
    put: {
      parameters: {
        path: {
          /** @description Device Enrollment Instance identifier */
          id: string;
        };
      };
      /** @description The downloaded token base 64 encoded from the MDM server to be used to create a new Device Enrollment Instance. */
      requestBody: {
        content: {
          "application/json": components["schemas"]["DeviceEnrollmentToken"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeviceEnrollmentInstance"];
          };
        };
        /** @description Device Enrollment Instance with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Something went wrong */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/dock-items": {
    /**
     * Create a DockItem
     *
     * @description Creates a DockItem
     */
    post: {
      /** @description new DockItem to create. ids defined in this body will be ignored */
      requestBody: {
        content: {
          "application/json": components["schemas"]["DockItem"];
        };
      };
      responses: {
        /** @description DockItem created successfully */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Duplicate */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/dock-items/{id}": {
    /**
     * Retrieve a full dockItem object
     *
     * @description Retrieves a full dockItem object
     */
    get: {
      parameters: {
        path: {
          /** @description DockItem object identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["DockItem"];
          };
        };
        /** @description Dockitem with that ID does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Replace the dockItem at the id with the supplied information
     *
     * @description Replaces the dockItem at the id with the supplied information
     */
    put: {
      parameters: {
        path: {
          /** @description DockItem object identifier */
          id: string;
        };
      };
      /** @description new dockItem to upload to existing id. ids defined in this body will be ignored */
      requestBody: {
        content: {
          "application/json": components["schemas"]["DockItem"];
        };
      };
      responses: {
        /** @description DockItem at id was updated */
        200: {
          content: {
            "text/plain": string;
          };
        };
        /** @description DockItem with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Duplicate */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete a DockItem at the specified id
     *
     * @description Deletes a dockItem at the specified id
     */
    delete: {
      parameters: {
        path: {
          /** @description DockItem object identifier */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        204: {
          content: never;
        };
        /** @description DockItem with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/ebooks": {
    /**
     * Get Ebook object
     *
     * @description Gets ebook object
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["EbookSearchResults"];
          };
        };
      };
    };
  };
  "/v1/ebooks/{id}": {
    /**
     * Get specified Ebook object
     *
     * @description Gets specified Ebook object
     */
    get: {
      parameters: {
        path: {
          /** @description instance id of ebook record */
          id: string;
        };
      };
      responses: {
        /** @description Details about ebook were found for given id */
        200: {
          content: {
            "application/json": components["schemas"]["Ebook"];
          };
        };
        /** @description Specified ebook object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/ebooks/{id}/scope": {
    /**
     * Get specified scope of Ebook object
     *
     * @description Gets specified scope of Ebook object
     */
    get: {
      parameters: {
        path: {
          /** @description instance id of ebook record */
          id: string;
        };
      };
      responses: {
        /** @description Details of scope for ebook were found */
        200: {
          content: {
            "application/json": components["schemas"]["EbookScope"];
          };
        };
        /** @description Specified scope for ebook object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/engage": {
    /**
     * Get Engage settings
     *
     * @deprecated
     * @description Get Engage settings
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["Engage"];
          };
        };
      };
    };
    /**
     * Update Engage settings
     *
     * @deprecated
     * @description Update Engage settings
     */
    put: {
      /** @description Engage settings object */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Engage"];
        };
      };
      responses: {
        /** @description Engage settings updated */
        200: {
          content: {
            "application/json": components["schemas"]["Engage"];
          };
        };
      };
    };
  };
  "/v1/engage/history": {
    /**
     * Get Engage settings history
     *
     * @deprecated
     * @description Gets Engage settings history
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          size?: components["parameters"]["size"];
          pagesize?: components["parameters"]["pagesize"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string;
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default search is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: search=username!=admin and details==*disabled* and date<2019-12-15 */
          search?: string;
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15 */
          filter?: string;
        };
      };
      responses: {
        /** @description Details of Engage settings history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
    /**
     * Add Engage settings history notes
     *
     * @deprecated
     * @description Adds Engage settings history notes
     */
    post: {
      /** @description history notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes to Engage settings history were added */
        201: {
          content: {
            "application/json": components["schemas"]["ObjectHistory"];
          };
        };
        /** @description Engage history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/enrollment-customization": {
    /**
     * Retrieve sorted and paged Enrollment Customizations
     *
     * @deprecated
     * @description Retrieves sorted and paged Enrollment Customizations
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          size?: components["parameters"]["size"];
          pagesize?: components["parameters"]["pagesize"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["EnrollmentCustomizationSearchResults"];
          };
        };
      };
    };
    /**
     * Create an Enrollment Customization
     *
     * @deprecated
     * @description Create an enrollment customization
     */
    post: {
      /** @description Enrollment customization to create. */
      requestBody: {
        content: {
          "application/json": components["schemas"]["EnrollmentCustomization"];
        };
      };
      responses: {
        /** @description Enrollment customization was created */
        201: {
          content: {
            "application/json": components["schemas"]["GetEnrollmentCustomization"];
          };
        };
      };
    };
  };
  "/v1/enrollment-customization/images": {
    /**
     * Upload an image
     * @deprecated
     * @description Uploads an image
     */
    post: {
      requestBody: {
        content: {
          "multipart/form-data": {
            /**
             * Format: binary
             * @description The file to upload
             */
            file: string;
          };
        };
      };
      responses: {
        /** @description Image successfully uploaded */
        201: {
          content: {
            "application/json": components["schemas"]["BrandingImageUrl"];
          };
        };
      };
    };
  };
  "/v1/enrollment-customization/parse-markdown": {
    /**
     * Parse the given string as markdown text and return Html output
     *
     * @description Parse the given string as markdown text and return Html output
     */
    post: {
      /** @description Enrollment Customization Panel to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Markdown"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["Markdown"];
          };
        };
      };
    };
  };
  "/v1/enrollment-customization/{id}": {
    /**
     * Retrieve an Enrollment Customization with the supplied id
     *
     * @deprecated
     * @description Retrieves an Enrollment Customization with the supplied id
     */
    get: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GetEnrollmentCustomization"];
          };
        };
        /** @description Enrollment Customization with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update an Enrollment Customization
     *
     * @deprecated
     * @description Updates an Enrollment Customization
     */
    put: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
        };
      };
      /** @description Enrollment Customization to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["EnrollmentCustomization"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GetEnrollmentCustomization"];
          };
        };
        /** @description Enrollment Customization with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete an Enrollment Customization with the supplied id
     *
     * @deprecated
     * @description Deletes an Enrollment Customization with the supplied id
     */
    delete: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
        };
      };
      responses: {
        /** @description Success */
        204: {
          content: never;
        };
      };
    };
  };
  "/v1/enrollment-customization/{id}/all": {
    /**
     * Get all Panels for single Enrollment Customization
     *
     * @description Get all panels for single enrollment customization
     */
    get: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["EnrollmentCustomizationPanelList"];
          };
        };
        /** @description Enrollment Customization with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/enrollment-customization/{id}/all/{panel-id}": {
    /**
     * Get a single Panel for a single Enrollment Customization
     *
     * @description Get a single panel for a single enrollment customization
     */
    get: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
          /** @description Panel object identifier */
          "panel-id": number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GetEnrollmentCustomizationPanel"];
          };
        };
        /** @description Enrollment Customization with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete a single Panel from an Enrollment Customization
     *
     * @description Delete a single panel from an Enrollment Customization
     */
    delete: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
          /** @description Panel object identifier */
          "panel-id": number;
        };
      };
      responses: {
        /** @description Success */
        204: {
          content: never;
        };
      };
    };
  };
  "/v1/enrollment-customization/{id}/history": {
    /**
     * Get sorted and paged Enrollment Customization history objects
     *
     * @deprecated
     * @description Gets sorted and paged enrollment customization history objects
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          size?: components["parameters"]["size"];
          pagesize?: components["parameters"]["pagesize"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc */
          sort?: string[];
        };
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
        };
      };
      responses: {
        /** @description Details of enrollment customization history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
    /**
     * Add Enrollment Customization history object notes
     *
     * @deprecated
     * @description Adds enrollment customization history object notes
     */
    post: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
        };
      };
      /** @description History notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of enrollment customization history were added */
        201: {
          content: {
            "application/json": components["schemas"]["ObjectHistory"];
          };
        };
        /** @description Enrollment customization history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/enrollment-customization/{id}/ldap": {
    /**
     * Create an LDAP Panel for a single Enrollment Customization
     *
     * @description Create an LDAP panel for a single enrollment customization. If multiple LDAP access groups are defined with the same name and id, only one will be saved.
     */
    post: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
        };
      };
      /** @description Enrollment Customization Panel to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["EnrollmentCustomizationPanelLdapAuth"];
        };
      };
      responses: {
        /** @description LDAP panel was created */
        201: {
          content: {
            "application/json": components["schemas"]["GetEnrollmentCustomizationPanelLdapAuth"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/enrollment-customization/{id}/ldap/{panel-id}": {
    /**
     * Get a single LDAP panel for a single Enrollment Customization
     *
     * @description Get a single LDAP panel for a single enrollment customization
     */
    get: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
          /** @description Panel object identifier */
          "panel-id": number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GetEnrollmentCustomizationPanelLdapAuth"];
          };
        };
        /** @description Enrollment Customization or Panel does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update a single LDAP Panel for a single Enrollment Customization
     *
     * @description Update a single LDAP panel for a single enrollment customization. If multiple LDAP access groups are defined with the same name and id, only one will be saved.
     */
    put: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
          /** @description Panel object identifier */
          "panel-id": number;
        };
      };
      /** @description Enrollment Customization Panel to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["EnrollmentCustomizationPanelLdapAuth"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GetEnrollmentCustomizationPanelLdapAuth"];
          };
        };
        /** @description Enrollment Customization or Panel does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete an LDAP single panel from an Enrollment Customization
     *
     * @description Delete an LDAP single Panel from an Enrollment Customization
     */
    delete: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
          /** @description Panel object identifier */
          "panel-id": number;
        };
      };
      responses: {
        /** @description Success */
        204: {
          content: never;
        };
      };
    };
  };
  "/v1/enrollment-customization/{id}/prestages": {
    /**
     * Retrieve the list of Prestages using this Enrollment Customization
     *
     * @deprecated
     * @description Retrieves the list of Prestages using this Enrollment Customization
     */
    get: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageDependencies"];
          };
        };
        /** @description Enrollment Customization with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/enrollment-customization/{id}/sso": {
    /**
     * Create an SSO Panel for a single Enrollment Customization
     *
     * @description Create an SSO panel for a single enrollment customization
     */
    post: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
        };
      };
      /** @description Enrollment Customization Panel to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["EnrollmentCustomizationPanelSsoAuth"];
        };
      };
      responses: {
        /** @description Auth panel was created */
        201: {
          content: {
            "application/json": components["schemas"]["GetEnrollmentCustomizationPanelSsoAuth"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/enrollment-customization/{id}/sso/{panel-id}": {
    /**
     * Get a single SSO Panel for a single Enrollment Customization
     *
     * @description Get a single SSO panel for a single enrollment customization
     */
    get: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
          /** @description Panel object identifier */
          "panel-id": number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GetEnrollmentCustomizationPanelSsoAuth"];
          };
        };
        /** @description Enrollment Customization or Panel does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update a single SSO Panel for a single Enrollment Customization
     *
     * @description Update a single SSO panel for a single enrollment customization
     */
    put: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
          /** @description Panel object identifier */
          "panel-id": number;
        };
      };
      /** @description Enrollment Customization Panel to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["EnrollmentCustomizationPanelSsoAuth"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GetEnrollmentCustomizationPanelSsoAuth"];
          };
        };
        /** @description Enrollment Customization or Panel does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete a single SSO Panel from an Enrollment Customization
     *
     * @description Delete a single SSO panel from an Enrollment Customization
     */
    delete: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
          /** @description Panel object identifier */
          "panel-id": number;
        };
      };
      responses: {
        /** @description Success */
        204: {
          content: never;
        };
      };
    };
  };
  "/v1/enrollment-customization/{id}/text": {
    /**
     * Create a Text Panel for a single Enrollment Customization
     *
     * @description Create a Text panel for a single enrollment customization
     */
    post: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
        };
      };
      /** @description Enrollment Customization Panel to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["EnrollmentCustomizationPanelText"];
        };
      };
      responses: {
        /** @description Text panel was created */
        201: {
          content: {
            "application/json": components["schemas"]["GetEnrollmentCustomizationPanelText"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/enrollment-customization/{id}/text/{panel-id}": {
    /**
     * Get a single Text Panel for a single Enrollment Customization
     *
     * @description Get a single Text panel for a single enrollment customization
     */
    get: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
          /** @description Panel object identifier */
          "panel-id": number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GetEnrollmentCustomizationPanelText"];
          };
        };
        /** @description Enrollment Customization with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update a single Text Panel for a single Enrollment Customization
     *
     * @description Update a single Text panel for a single enrollment customization
     */
    put: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
          /** @description Panel object identifier */
          "panel-id": number;
        };
      };
      /** @description Enrollment Customization Panel to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["EnrollmentCustomizationPanelText"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GetEnrollmentCustomizationPanelText"];
          };
        };
        /** @description Enrollment Customization or Panel does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete a Text single Panel from an Enrollment Customization
     *
     * @description Delete a Text single panel from an Enrollment Customization
     */
    delete: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
          /** @description Panel object identifier */
          "panel-id": number;
        };
      };
      responses: {
        /** @description Success */
        204: {
          content: never;
        };
      };
    };
  };
  "/v1/enrollment-customization/{id}/text/{panel-id}/markdown": {
    /**
     * Get the markdown output of a single Text Panel for a single Enrollment
     *
     * @description Get the markdown output of a single Text panel for a single enrollment customization
     */
    get: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: number;
          /** @description Panel object identifier */
          "panel-id": number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["Markdown"];
          };
        };
        /** @description Enrollment Customization with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/icon": {
    /**
     * Upload an icon
     *
     * @description Uploads an icon
     */
    post: {
      requestBody: {
        content: {
          "multipart/form-data": {
            /**
             * Format: binary
             * @description The file to upload
             */
            file: string;
          };
        };
      };
      responses: {
        /** @description Icon successfully uploaded */
        201: {
          content: {
            "application/json": components["schemas"]["IconResponse"];
          };
        };
        /** @description Failure, field required: "file". */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Upload Failed. */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/icon/download/{id}": {
    /**
     * Download a self service icon
     *
     * @description Download a self service icon
     */
    get: {
      parameters: {
        query?: {
          /** @description request a specific resolution of original, 300, or 512; invalid options will result in original resolution */
          res?: string;
          /** @description request a scale; 0 results in original image, non-0 results in scaled to 300 */
          scale?: string;
        };
        path: {
          /** @description id of the self service icon */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "image/*": string;
          };
        };
      };
    };
  };
  "/v1/icon/{id}": {
    /**
     * Get an icon
     *
     * @description Get an icon
     */
    get: {
      parameters: {
        path: {
          /** @description id of the icon */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["IconResponse"];
          };
        };
      };
    };
  };
  "/v1/inventory-information": {
    /**
     * Get statistics about managed/unmanaged devices and computers in the inventory
     *
     * @description Gets statistics about managed/unmanaged devices and computers in the inventory.
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["InventoryInformation"];
          };
        };
      };
    };
  };
  "/v1/inventory-preload": {
    /**
     * Return all Inventory Preload records
     *
     * @deprecated
     * @description Returns all Inventory Preload records.
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          size?: components["parameters"]["size"];
          pagesize?: components["parameters"]["pagesize"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InventoryPreloadRecordSearchResults"];
            "text/csv": components["schemas"]["InventoryPreloadRecordSearchResults"];
          };
        };
      };
    };
    /**
     * Create a new Inventory Preload record using JSON or CSV
     *
     * @deprecated
     * @description Create a new Inventory Preload record using JSON or CSV.
     * A CSV template can be downloaded from /api/inventory-preload/csv-template.
     * Serial number and device type are required. All other fields are optional.
     * When a matching serial number exists in the Inventory Preload data, the record will be overwritten with the CSV data.
     * If the CSV file contains a new username and an email address is provided, the new user is created in Jamf Pro.
     * If the CSV file contains an existing username, the following user-related fields are updated in Jamf Pro.
     * Full Name,
     * Email Address,
     * Phone Number,
     * Position.
     * This endpoint does not do full validation of each record in the CSV data.
     * To do full validation, use the /inventory-preload/validate-csv endpoint first.
     */
    post: {
      /** @description Inventory Preload record or records to be created */
      requestBody: {
        content: {
          "application/json": components["schemas"]["InventoryPreloadRecord"];
          "text/csv": components["schemas"]["InventoryPreloadRecord"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["InventoryPreloadRecord"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete all Inventory Preload records
     *
     * @deprecated
     * @description Deletes all Inventory Preload records.
     */
    delete: {
      responses: {
        /** @description OK */
        204: {
          content: never;
        };
      };
    };
  };
  "/v1/inventory-preload/csv-template": {
    /**
     * Retrieve the Inventory Preload CSV template
     *
     * @deprecated
     * @description Retrieves the Inventory Preload CSV template.
     */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "text/csv": Record<string, never>;
          };
        };
      };
    };
  };
  "/v1/inventory-preload/history": {
    /**
     * Get Inventory Preload history entries
     *
     * @deprecated
     * @description Gets Inventory Preload history entries.
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          size?: components["parameters"]["size"];
          pagesize?: components["parameters"]["pagesize"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
    /**
     * Add Inventory Preload history object notes
     *
     * @deprecated
     * @description Adds Inventory Preload history object notes.
     */
    post: {
      /** @description History notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of Inventory Preload history were added */
        201: {
          content: {
            "application/json": components["schemas"]["ObjectHistory"];
          };
        };
        /** @description Inventory Preload history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/inventory-preload/validate-csv": {
    /**
     * Validate a given CSV file
     *
     * @deprecated
     * @description Validate a given CSV file.
     * Serial number and device type are required. All other fields are optional.
     * A CSV template can be downloaded from /api/inventory-preload/csv-template.
     */
    post: {
      /** @description Inventory Preload records to be validated. A CSV template can be downloaded from /api/inventory-preload/csv-template */
      requestBody: {
        content: {
          "text/csv": Record<string, never>;
        };
      };
      responses: {
        /** @description Ok */
        200: {
          content: {
            "application/json": components["schemas"]["InventoryPreloadCsvValidationSuccess"];
          };
        };
        /** @description Precondition Failed */
        412: {
          content: {
            "application/json": components["schemas"]["InventoryPreloadInvalidCsvResponse"];
          };
        };
      };
    };
  };
  "/v1/inventory-preload/{id}": {
    /**
     * Get an Inventory Preload record
     *
     * @deprecated
     * @description Retrieves an Inventory Preload record.
     */
    get: {
      parameters: {
        path: {
          /** @description Inventory Preload identifier */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InventoryPreloadRecord"];
          };
        };
        /** @description Inventory Preload record with specified id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update an Inventory Preload record
     *
     * @deprecated
     * @description Updates an Inventory Preload record.
     */
    put: {
      parameters: {
        path: {
          /** @description Inventory Preload identifier */
          id: number;
        };
      };
      /** @description Inventory Preload record to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["InventoryPreloadRecord"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InventoryPreloadRecord"];
          };
        };
        /** @description Inventory Preload record with specified id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete an Inventory Preload record
     *
     * @deprecated
     * @description Deletes an Inventory Preload record.
     */
    delete: {
      parameters: {
        path: {
          /** @description Inventory Preload identifier */
          id: number;
        };
      };
      responses: {
        /** @description OK */
        204: {
          content: never;
        };
        /** @description Inventory Preload record with specified id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/jamf-connect": {
    /**
     * Get the Jamf Connect settings that you have access to see
     *
     * @description Get the Jamf Connect settings that you have access to see.
     */
    get: {
      responses: {
        /** @description Success, no content. */
        204: {
          content: never;
        };
        /** @description Cloud Services Connection has not been established. */
        403: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/jamf-connect/config-profiles": {
    /**
     * Search for config profiles linked to Jamf Connect
     *
     * @description Search for config profiles linked to Jamf Connect
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          sort?: components["parameters"]["sort"];
          filter?: components["parameters"]["filter"];
        };
      };
      responses: {
        /** @description Success. */
        200: {
          content: {
            "application/json": components["schemas"]["LinkedConnectProfileSearchResults"];
          };
        };
      };
    };
  };
  "/v1/jamf-connect/config-profiles/{id}": {
    /**
     * Update the way the Jamf Connect app gets updated on computers within scope of the associated configuration profile.
     *
     * @description Update the way the Jamf Connect app gets updated on computers within scope of the associated configuration profile.
     */
    put: {
      parameters: {
        path: {
          /**
           * @description the UUID of the profile to update
           * @example 24a7bb2a-9871-4895-9009-d1be07ed31b1
           */
          id: string;
        };
      };
      /** @description Updatable Jamf Connect Settings */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["LinkedConnectProfile"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["LinkedConnectProfile"];
          };
        };
      };
    };
  };
  "/v1/jamf-connect/deployments/{id}/tasks": {
    /**
     * Search for deployment tasks for a config profile linked to Jamf Connect
     *
     * @description Search for config profiles linked to Jamf Connect
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          sort?: components["parameters"]["sort"];
          filter?: components["parameters"]["filter"];
        };
        path: {
          /**
           * @description the UUID of the Jamf Connect deployment
           * @example 24a7bb2a-9871-4895-9009-d1be07ed31b1
           */
          id: string;
        };
      };
      responses: {
        /** @description Success. */
        200: {
          content: {
            "application/json": components["schemas"]["DeploymentTaskSearchResults"];
          };
        };
      };
    };
  };
  "/v1/jamf-connect/deployments/{id}/tasks/retry": {
    /**
     * Request a retry of Connect install tasks
     *
     * @description Request a retry of Connect install tasks
     */
    post: {
      parameters: {
        path: {
          /**
           * @description the UUID of the deployment associated with the retry
           * @example 24a7bb2a-9871-4895-9009-d1be07ed31b1
           */
          id: string;
        };
      };
      /** @description task IDs to retry */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Ids"];
        };
      };
      responses: {
        /** @description Success, no content. */
        204: {
          content: never;
        };
        /** @description Cloud Services Connection has not been established. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Jamf Connect tasks to retry failed */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/jamf-connect/history": {
    /**
     * Get Jamf Connect history
     *
     * @description Get Jamf Connect history
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          sort?: components["parameters"]["sort"];
          filter?: components["parameters"]["filter"];
        };
      };
      responses: {
        /** @description Details of Jamf Connect history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
    /**
     * Add Jamf Connect history notes
     *
     * @description Add Jamf Connect history notes
     */
    post: {
      /** @description history notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes to Jamf Connect history were added */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Jamf Connect history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/jamf-management-framework/redeploy/{id}": {
    /**
     * Redeploy Jamf Management Framework
     *
     * @description Redeploys the Jamf Management Framework for enrolled device
     */
    post: {
      parameters: {
        path: {
          /** @description instance id of computer */
          id: string;
        };
      };
      responses: {
        /** @description Command successfully queued to redeploy the Jamf Managment Framework */
        202: {
          content: {
            "application/json": components["schemas"]["RedeployJamfManagementFrameworkResponse"];
          };
        };
        /** @description Computer with given id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/jamf-package": {
    /**
     * Get the packages for a given Jamf application
     *
     * @description Get the packages for a given Jamf application.
     */
    get: {
      parameters: {
        query: {
          /**
           * @description The Jamf Application key. The only supported values are protect and connect.
           * @example protect
           */
          application: string;
        };
      };
      responses: {
        /** @description List of packages for the given application. */
        200: {
          content: {
            "application/json": components["schemas"]["JamfPackageResponse"][];
          };
        };
        /** @description Invalid Content. It is possible that there is no application with the given application id. Or Cloud Services Connection has not been established. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/jamf-pro-information": {
    /**
     * Get basic information about the Jamf Pro Server
     *
     * @deprecated
     * @description Deprecated version of the endpoint.
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["JamfProInformation"];
          };
        };
      };
    };
  };
  "/v1/jamf-pro-server-url": {
    /**
     * Get Jamf Pro Server URL settings
     *
     * @description Get Jamf Pro Server URL settings
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["JamfProServerUrl"];
          };
        };
      };
    };
    /**
     * Update Jamf Pro Server URL settings
     *
     * @description Update Jamf Pro Server URL settings
     */
    put: {
      /** @description Jamf Pro Server URL settings object */
      requestBody: {
        content: {
          "application/json": components["schemas"]["JamfProServerUrl"];
        };
      };
      responses: {
        /** @description Jamf Pro Server URL settings updated */
        200: {
          content: {
            "application/json": components["schemas"]["JamfProServerUrl"];
          };
        };
        /** @description Jamf Pro Server URL is managed by Jamf Cloud */
        403: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/jamf-pro-server-url/history": {
    /**
     * Get Jamf Pro Server URL settings history
     *
     * @description Gets Jamf Pro Server URL settings history
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          size?: components["parameters"]["size"];
          pagesize?: components["parameters"]["pagesize"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string;
        };
      };
      responses: {
        /** @description Details of Jamf Pro Server URL settings history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
    /**
     * Add Jamf Pro Server URL settings history notes
     *
     * @description Adds Jamf Pro Server URL settings history notes
     */
    post: {
      /** @description History notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes to Jamf Pro Server URL settings history were added */
        201: {
          content: {
            "application/json": components["schemas"]["ObjectHistory"];
          };
        };
        /** @description Jamf Pro Server URL is managed by Jamf Cloud */
        403: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Jamf Pro Server URL history does not exist. */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/jamf-pro-version": {
    /**
     * Return information about the Jamf Pro including the current version
     *
     * @description Returns information about the Jamf Pro including the current version.
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["JamfProVersion"];
          };
        };
      };
    };
  };
  "/v1/jamf-protect": {
    /**
     * Jamf Protect integration settings
     * @description Jamf Protect integration settings
     */
    get: {
      responses: {
        /** @description Success. */
        200: {
          content: {
            "application/json": components["schemas"]["ProtectSettingsResponse"];
          };
        };
        /** @description Cloud Services Connection has not been established. */
        403: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Protect Integration has not been configured. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Jamf Pro is not able to establish contact with the Protect API via the SOUP CSA client. */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Jamf Protect integration settings
     * @description Jamf Protect integration settings
     */
    put: {
      /** @description Updatable Jamf Protect Settings */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ProtectUpdatableSettingsRequest"];
        };
      };
      responses: {
        /** @description Success. */
        200: {
          content: {
            "application/json": components["schemas"]["ProtectSettingsResponse"];
          };
        };
      };
    };
    /**
     * Delete Jamf Protect API registration.
     * @description Deletes an existing Jamf Protect API registration if present. Jamf Protect API integration will be disabled.
     */
    delete: {
      responses: {
        /** @description Success, No Content */
        204: {
          content: never;
        };
        /** @description Cloud Services Connection has not been established. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Error Deleting registration */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/jamf-protect/deployments/{id}/tasks": {
    /**
     * Search for deployment tasks for a config profile linked to Jamf Protect
     *
     * @description Search for config profiles linked to Jamf Protect
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          sort?: components["parameters"]["sort"];
          filter?: components["parameters"]["filter"];
        };
        path: {
          /**
           * @description the UUID of the Jamf Protect deployment
           * @example 24a7bb2a-9871-4895-9009-d1be07ed31b1
           */
          id: string;
        };
      };
      responses: {
        /** @description Success. */
        200: {
          content: {
            "application/json": components["schemas"]["DeploymentTaskSearchResults"];
          };
        };
      };
    };
  };
  "/v1/jamf-protect/deployments/{id}/tasks/retry": {
    /**
     * Request a retry of Protect install tasks
     *
     * @description Request a retry of Protect install tasks
     */
    post: {
      parameters: {
        path: {
          /**
           * @description the UUID of the deployment associated with the retry
           * @example 24a7bb2a-9871-4895-9009-d1be07ed31b1
           */
          id: string;
        };
      };
      /** @description task IDs to retry */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Ids"];
        };
      };
      responses: {
        /** @description Success, no content. */
        204: {
          content: never;
        };
        /** @description Cloud Services Connection has not been established. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Jamf Protect tasks to retry failed */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/jamf-protect/history": {
    /**
     * Get Jamf Protect history
     *
     * @description Get Jamf Protect history
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          sort?: components["parameters"]["sort"];
          filter?: components["parameters"]["filter"];
        };
      };
      responses: {
        /** @description Details of Jamf Protect history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
    /**
     * Add Jamf Protect history notes
     *
     * @description Add Jamf Protect history notes
     */
    post: {
      /** @description history notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes to Jamf Protect history were added */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Jamf Protect history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/jamf-protect/plans": {
    /**
     * Get all of the previously synced Jamf Protect Plans with information about their associated configuration profile
     * @description Get all of the previously synced Jamf Protect Plans with information about their associated configuration profile
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          sort?: components["parameters"]["sort"];
          filter?: components["parameters"]["filter"];
        };
      };
      responses: {
        /** @description Success. */
        200: {
          content: {
            "application/json": components["schemas"]["PlanSearchResults"];
          };
        };
      };
    };
  };
  "/v1/jamf-protect/plans/sync": {
    /**
     * Sync Plans with Jamf Protect
     * @description Sync Plans with Jamf Protect. Configuration profiles associated with new plans will be imported to Jamf Pro.
     */
    post: {
      responses: {
        /** @description Success. */
        204: {
          content: never;
        };
        /** @description Cloud Services Connection has not been established. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Protect API credentials have not been configured. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/jamf-protect/register": {
    /**
     * Register a Jamf Protect API configuration with Jamf Pro
     * @description Register a Jamf Protect API configuration with Jamf Pro
     */
    post: {
      /** @description Jamf Protect API connection information */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ProtectRegistrationRequest"];
        };
      };
      responses: {
        /** @description Successful registration. */
        201: {
          content: {
            "application/json": components["schemas"]["ProtectSettingsResponse"];
          };
        };
        /** @description Cloud Services Connection has not been established. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/jamf-remote-assist/session": {
    /**
     * Gets session history items.
     *
     * @description Returns tenants sessions history.
     */
    get: {
      responses: {
        /** @description Up to 100 latest session history items */
        200: {
          content: {
            "application/json": components["schemas"]["SessionHistoryItem"][];
          };
        };
      };
    };
  };
  "/v1/jamf-remote-assist/session/{id}": {
    /**
     * Gets single session history item.
     *
     * @description Returns tenants session history for specific session.
     */
    get: {
      parameters: {
        path: {
          /** @description instance id of session */
          id: string;
        };
      };
      responses: {
        /** @description Single session history item */
        200: {
          content: {
            "application/json": components["schemas"]["SessionHistoryItemWithDetails"];
          };
        };
        /** @description Session with given id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/jcds/files": {
    /**
     * Retrieve a list of files and file metadata from the Jamf Content Distribution Server
     * @description Retrieve a list of files and file metadata from the Jamf Content Distribution Server.
     */
    get: {
      responses: {
        /** @description Retrieved the list of files and file metadata from the Jamf Content Distribution Server. */
        200: {
          content: {
            "application/json": components["schemas"]["FileData"][];
          };
        };
      };
    };
    /**
     * Initiate an upload to the Jamf Content Distribution Server
     * @description Creates a temporary record and returns the credentials and information needed for uploading the file to the Jamf Content Distribution Server.
     */
    post: {
      responses: {
        /** @description File upload was initiated to the Jamf Content Distribution Server. */
        201: {
          content: {
            "application/json": components["schemas"]["Credentials"];
          };
        };
      };
    };
  };
  "/v1/jcds/files/{fileName}": {
    /**
     * Retrieve a download URL for a specific file from the Jamf Content Distribution Server
     * @description Retrieve a download URL for a specific file from the Jamf Content Distribution Server.
     */
    get: {
      parameters: {
        path: {
          /** @description Name of the file stored in the Jamf Content Distribution Server. */
          fileName: string;
        };
      };
      responses: {
        /** @description The URL to download the file from was retrieved. */
        200: {
          content: {
            "application/json": components["schemas"]["DownloadUrl"];
          };
        };
      };
    };
    /**
     * Delete a file from the Jamf Content Distribution Server
     * @description Delete a file by filename from the Jamf Content Distribution Server.
     */
    delete: {
      parameters: {
        path: {
          /** @description Name of the file that will be deleted from the Jamf Content Distribution Server. */
          fileName: string;
        };
      };
      responses: {
        /** @description File was deleted */
        204: {
          content: never;
        };
      };
    };
  };
  "/v1/jcds/renew-credentials": {
    /**
     * Renew credentials for an upload to the Jamf Content Distribution Server
     * @description Renews the credentials needed for uploading the file to the Jamf Content Distribution Server.
     */
    post: {
      responses: {
        /** @description Credentials were renewed for an upload to the Jamf Content Distribution Server. */
        200: {
          content: {
            "application/json": components["schemas"]["Credentials"];
          };
        };
      };
    };
  };
  "/v1/ldap-keystore/verify": {
    /**
     * Validate keystore for Cloud Identity Provider secure connection
     * @description Validate keystore for Cloud Identity Provider secure connection
     */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["CloudLdapKeystoreFile"];
        };
      };
      responses: {
        /** @description Keystore verified. */
        200: {
          content: {
            "application/json": components["schemas"]["CloudLdapKeystore"];
          };
        };
        /** @description One or more invalid parameters */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/ldap/groups": {
    /**
     * Retrieve the configured access groups that contain the text in the search param
     *
     * @description Retrieves the configured access groups that contain the text in the searchParam.
     */
    get: {
      parameters: {
        query?: {
          /** @description Will perform a "contains" search on the names of access groups */
          q?: string;
        };
      };
      responses: {
        /** @description Successful search. */
        200: {
          content: {
            "application/json": components["schemas"]["LdapGroupSearchResults"];
          };
        };
      };
    };
  };
  "/v1/ldap/ldap-servers": {
    /**
     * Retrieve all LDAP Servers.
     *
     * @description Retrieves all not migrated, LDAP Servers.
     */
    get: {
      responses: {
        /** @description Successfully completed. */
        200: {
          content: {
            "application/json": components["schemas"]["LdapServer"][];
          };
        };
      };
    };
  };
  "/v1/ldap/servers": {
    /**
     * Retrieve all Servers including LDAP and Cloud Identity Providers.
     *
     * @description Retrieve all active Servers including LDAP and Cloud Identity Providers.
     */
    get: {
      responses: {
        /** @description Successfully completed. */
        200: {
          content: {
            "application/json": components["schemas"]["LdapServer"][];
          };
        };
      };
    };
  };
  "/v1/local-admin-password/settings": {
    /**
     * Get the current LAPS settings.
     * @deprecated
     * @description Return information about the current LAPS settings.
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["LapsSettingsResponse"];
          };
        };
        /** @description Failure, unable to complete lookup. */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update settings for LAPS.
     * @deprecated
     * @description Update settings for LAPS.
     */
    put: {
      /** @description LAPS settings to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["LapsSettingsRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["LapsSettingsResponse"];
          };
        };
        /** @description Failure, unable to complete lookup. */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/local-admin-password/{clientManagementId}/account/{username}/audit": {
    /**
     * Get LAPS password viewed history.
     * @deprecated
     * @description Get the full history of all local admin passwords for a specific username on a target device. History will include password, who viewed the password and when it was viewed. Get audit history by using the client management id and username as the path parameters.
     */
    get: {
      parameters: {
        path: {
          /** @description client management id of target device. */
          clientManagementId: string;
          /** @description user name to view audit information for */
          username: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["LapsPasswordAuditsResults"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Failure, unable to complete lookup. */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/local-admin-password/{clientManagementId}/account/{username}/password": {
    /**
     * Get current LAPS password for specified username on a client.
     * @deprecated
     * @description Get current LAPS password for specified client by using the client management id and username as the path parameters. Once the password is viewed it will be rotated out with a new password based on the rotation time settings.
     */
    get: {
      parameters: {
        path: {
          /** @description client management id of target device. */
          clientManagementId: string;
          /** @description user name for the account */
          username: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["LapsPasswordResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Failure, unable to complete lookup. */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/local-admin-password/{clientManagementId}/accounts": {
    /**
     * Get the LAPS capable admin accounts for a device.
     * @deprecated
     * @description Get a full list of admin accounts that are LAPS capable. Capable accounts are returned in the AutoSetupAdminAccounts from QueryResponses.
     */
    get: {
      parameters: {
        path: {
          /** @description client management id of target device. */
          clientManagementId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["LapsUserResults"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Failure, unable to complete lookup. */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/local-admin-password/{clientManagementId}/set-password": {
    /**
     * Set the LAPS password for a device.
     * @deprecated
     * @description Set the LAPS password for a device. This will set the password for all LAPS capable accounts.
     */
    put: {
      parameters: {
        path: {
          /** @description client management id of target device. */
          clientManagementId: string;
        };
      };
      /** @description LAPS password to set */
      requestBody: {
        content: {
          "application/json": components["schemas"]["LapsUserPasswordRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["LapsUserPasswordResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Failure, unable to update passwords */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/locales": {
    /**
     * Return locales that can be used in other features
     *
     * @description Returns locales that can be used in other features.
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["Locale"][];
          };
        };
      };
    };
  };
  "/v1/macos-managed-software-updates/available-updates": {
    /**
     * Retrieve available MacOs Managed Software Updates
     * @deprecated
     * @description Retrieves available MacOs Managed Software Updates
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["AvailableUpdates"];
          };
        };
      };
    };
  };
  "/v1/macos-managed-software-updates/send-updates": {
    /**
     * Send MacOs Managed Software Updates
     * @deprecated
     * @description Sends MacOs Managed Software Updates
     */
    post: {
      /** @description MacOs Managed Software Update to send */
      requestBody: {
        content: {
          "application/json": components["schemas"]["MacOsManagedSoftwareUpdate"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["MacOsManagedSoftwareUpdateResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/managed-software-updates/available-updates": {
    /**
     * Retrieve available macOS and iOS Managed Software Updates
     * @description ## BETA
     *
     * These endpoints are available for use in your workflows. It is extremely important to exercise caution when implementing these endpoints, because elements such as the URL or the response could change while this feature is in Beta. If this is the case, we will communicate that upcoming change but there will be no deprecation timeline. Any breaking changes to the API that occur *after* the Beta phase __will be__ held to the standard year-long deprecation timeline.
     *
     * Retrieves available macOS and iOS Managed Software Updates
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["AvailableOsUpdates"];
          };
        };
      };
    };
  };
  "/v1/managed-software-updates/plans": {
    /**
     * Retrieve Managed Software Update Plans
     * @description ## BETA
     *
     * These endpoints are available for use in your workflows. It is extremely important to exercise caution when implementing these endpoints, because elements such as the URL or the response could change while this feature is in Beta. If this is the case, we will communicate that upcoming change but there will be no deprecation timeline. Any breaking changes to the API that occur *after* the Beta phase __will be__ held to the standard year-long deprecation timeline.
     *
     * Retrieve Managed Software Update Plans
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is planUuid:asc. Multiple sort criteria are supported and must be separated with a comma. */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter Managed Software Updates collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: planUuid, device.deviceId, device.objectType, updateAction, versionType, specificVersion, maxDeferrals, forceInstallLocalDateTime, state. */
          filter?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["ManagedSoftwareUpdatePlans"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Create a Managed Software Update Plan
     * @description ## BETA
     *
     * These endpoints are available for use in your workflows. It is extremely important to exercise caution when implementing these endpoints, because elements such as the URL or the response could change while this feature is in Beta. If this is the case, we will communicate that upcoming change but there will be no deprecation timeline. Any breaking changes to the API that occur *after* the Beta phase __will be__ held to the standard year-long deprecation timeline.
     *
     * Creates a Managed Software Update Plan.
     */
    post: {
      /** @description Managed Software Update Plan to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ManagedSoftwareUpdatePlanPost"];
        };
      };
      responses: {
        /** @description Managed Software Update Plan was created */
        201: {
          content: {
            "application/json": components["schemas"]["ManagedSoftwareUpdatePlanPostResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Rate limit exceeded */
        429: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/managed-software-updates/plans/feature-toggle": {
    /**
     * Retrieve Status of the Feature Toggle
     * @description ## BETA
     *
     * These endpoints are available for use in your workflows. It is extremely important to exercise caution when implementing these endpoints, because elements such as the URL or the response could change while this feature is in Beta. If this is the case, we will communicate that upcoming change but there will be no deprecation timeline. Any breaking changes to the API that occur *after* the Beta phase __will be__ held to the standard year-long deprecation timeline.
     *
     * Retrieves Status of the Feature Toggle
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["ManagedSoftwareUpdatePlanToggle"];
          };
        };
      };
    };
    /**
     * Updates Feature Toggle Value
     * @description ## BETA
     *
     * These endpoints are available for use in your workflows. It is extremely important to exercise caution when implementing these endpoints, because elements such as the URL or the response could change while this feature is in Beta. If this is the case, we will communicate that upcoming change but there will be no deprecation timeline. Any breaking changes to the API that occur *after* the Beta phase __will be__ held to the standard year-long deprecation timeline.
     *
     * Updates the value of the Feature Toggle
     */
    put: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["ManagedSoftwareUpdatePlanToggle"];
        };
      };
      responses: {
        /** @description Managed Software Update Plan Feature Toggle was updated */
        200: {
          content: {
            "application/json": components["schemas"]["ManagedSoftwareUpdatePlanToggle"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/managed-software-updates/plans/group": {
    /**
     * Create Managed Software Update Plans for a Group
     * @description ## BETA
     *
     * These endpoints are available for use in your workflows. It is extremely important to exercise caution when implementing these endpoints, because elements such as the URL or the response could change while this feature is in Beta. If this is the case, we will communicate that upcoming change but there will be no deprecation timeline. Any breaking changes to the API that occur *after* the Beta phase __will be__ held to the standard year-long deprecation timeline.
     *
     * Creates Managed Software Update Plans for a Group
     */
    post: {
      /** @description Managed Software Update Plan to create for Group */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ManagedSoftwareUpdatePlanGroupPost"];
        };
      };
      responses: {
        /** @description Managed Software Update Plan was created */
        201: {
          content: {
            "application/json": components["schemas"]["ManagedSoftwareUpdatePlanPostResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description A group with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Rate limit exceeded */
        429: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/managed-software-updates/plans/group/{id}": {
    /**
     * Retrieve Managed Software Update Plans for a Group
     * @description ## BETA
     *
     * These endpoints are available for use in your workflows. It is extremely important to exercise caution when implementing these endpoints, because elements such as the URL or the response could change while this feature is in Beta. If this is the case, we will communicate that upcoming change but there will be no deprecation timeline. Any breaking changes to the API that occur *after* the Beta phase __will be__ held to the standard year-long deprecation timeline.
     *
     * Retrieves Managed Software Update Plans for a Group
     */
    get: {
      parameters: {
        query: {
          /**
           * @description Managed Software Update Group Type, Available options are "COMPUTER_GROUP" or "MOBILE_DEVICE_GROUP"
           * @example COMPUTER_GROUP
           */
          "group-type": "COMPUTER_GROUP" | "MOBILE_DEVICE_GROUP";
        };
        path: {
          /** @description Managed Software Update Group Id */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["ManagedSoftwareUpdatePlans"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Group with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/managed-software-updates/plans/{id}": {
    /**
     * Retrieve a Managed Software Update Plan
     * @description ## BETA
     *
     * These endpoints are available for use in your workflows. It is extremely important to exercise caution when implementing these endpoints, because elements such as the URL or the response could change while this feature is in Beta. If this is the case, we will communicate that upcoming change but there will be no deprecation timeline. Any breaking changes to the API that occur *after* the Beta phase __will be__ held to the standard year-long deprecation timeline.
     *
     * Retrieves a Managed Software Update Plan
     */
    get: {
      parameters: {
        path: {
          /** @description Managed Software Update Plan Uuid */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["ManagedSoftwareUpdatePlan"];
          };
        };
        /** @description Managed Software Update Plan with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/managed-software-updates/update-statuses": {
    /**
     * Retrieve Managed Software Update Statuses
     * @description ## BETA
     *
     * These endpoints are available for use in your workflows. It is extremely important to exercise caution when implementing these endpoints, because elements such as the URL or the response could change while this feature is in Beta. If this is the case, we will communicate that upcoming change but there will be no deprecation timeline. Any breaking changes to the API that occur *after* the Beta phase __will be__ held to the standard year-long deprecation timeline.
     *
     * Retrieve Managed Software Update Statuses
     */
    get: {
      parameters: {
        query?: {
          /** @description Query in the RSQL format, allowing to filter Managed Software Updates collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: osUpdatesStatusId, device.deviceId, device.objectType, downloaded, downloadPercentComplete, productKey, status, deferralsRemaining, maxDeferrals, nextScheduledInstall, created and updated. */
          filter?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["ManagedSoftwareUpdateStatuses"];
          };
        };
      };
    };
  };
  "/v1/managed-software-updates/update-statuses/computer-groups/{id}": {
    /**
     * Retrieve Managed Software Update Statuses for Computer Groups
     * @description ## BETA
     *
     * These endpoints are available for use in your workflows. It is extremely important to exercise caution when implementing these endpoints, because elements such as the URL or the response could change while this feature is in Beta. If this is the case, we will communicate that upcoming change but there will be no deprecation timeline. Any breaking changes to the API that occur *after* the Beta phase __will be__ held to the standard year-long deprecation timeline.
     *
     * Retrieve Managed Software Update Statuses for Computer Groups
     */
    get: {
      parameters: {
        path: {
          /** @description Computer Group identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["ManagedSoftwareUpdateStatuses"];
          };
        };
      };
    };
  };
  "/v1/managed-software-updates/update-statuses/computers/{id}": {
    /**
     * Retrieve Managed Software Update Statuses for Computers
     * @description ## BETA
     *
     * These endpoints are available for use in your workflows. It is extremely important to exercise caution when implementing these endpoints, because elements such as the URL or the response could change while this feature is in Beta. If this is the case, we will communicate that upcoming change but there will be no deprecation timeline. Any breaking changes to the API that occur *after* the Beta phase __will be__ held to the standard year-long deprecation timeline.
     *
     * Retrieve Managed Software Update Statuses for Computers
     */
    get: {
      parameters: {
        path: {
          /** @description Computer identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["ManagedSoftwareUpdateStatuses"];
          };
        };
      };
    };
  };
  "/v1/managed-software-updates/update-statuses/mobile-device-groups/{id}": {
    /**
     * Retrieve Managed Software Update Statuses for Mobile Device Groups
     * @description ## BETA
     *
     * These endpoints are available for use in your workflows. It is extremely important to exercise caution when implementing these endpoints, because elements such as the URL or the response could change while this feature is in Beta. If this is the case, we will communicate that upcoming change but there will be no deprecation timeline. Any breaking changes to the API that occur *after* the Beta phase __will be__ held to the standard year-long deprecation timeline.
     *
     * Retrieve Managed Software Update Statuses for Mobile Device Groups
     */
    get: {
      parameters: {
        path: {
          /** @description Mobile Device Group identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["ManagedSoftwareUpdateStatuses"];
          };
        };
      };
    };
  };
  "/v1/managed-software-updates/update-statuses/mobile-devices/{id}": {
    /**
     * Retrieve Managed Software Update Statuses for Mobile Devices
     * @description ## BETA
     *
     * These endpoints are available for use in your workflows. It is extremely important to exercise caution when implementing these endpoints, because elements such as the URL or the response could change while this feature is in Beta. If this is the case, we will communicate that upcoming change but there will be no deprecation timeline. Any breaking changes to the API that occur *after* the Beta phase __will be__ held to the standard year-long deprecation timeline.
     *
     * Retrieve Managed Software Update Statuses for Mobile Devices
     */
    get: {
      parameters: {
        path: {
          /** @description Mobile Device identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["ManagedSoftwareUpdateStatuses"];
          };
        };
      };
    };
  };
  "/v1/mdm/commands": {
    /**
     * Get information about mdm commands made by Jamf Pro.
     * @deprecated
     * @description Get information about mdm commands made by Jamf Pro.
     */
    get: {
      parameters: {
        query?: {
          /** @description A list of the UUIDs of the commands being searched for.  Limited to 40 UUIDs in length. Choose one of two parameters, but not both. */
          uuids?: string[];
          /** @description The client management id used to search for a list of commands. Choose one of two parameters, but not both. */
          "client-management-id"?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["MdmCommand"][];
          };
        };
        /** @description Too many UUIDs were provided in the path. The limit is set at a strict 40 UUIDs. */
        414: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Failure, unable to complete lookup. */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/mdm/renew-profile": {
    /**
     * Renew MDM Profile
     *
     * @description Renews the device's MDM Profile, including the device identity certificate within the MDM Profile.
     */
    post: {
      /** @description List of devices' UDIDs to perform MDM profile renewal */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Udids"];
        };
      };
      responses: {
        /** @description The Renew MDM Profile action was queued with APNs for submitted devices. Any device udids returned were unknown and not submitted. */
        202: {
          content: {
            "application/json": components["schemas"]["RenewMdmProfileResponse"];
          };
        };
        /** @description Insufficient privileges to perform this action or Renew MDM Profile is not enabled. */
        403: {
          content: never;
        };
      };
    };
  };
  "/v1/mobile-device-apps/reinstall-app-config": {
    /**
     * Reinstall App Config for Managed iOS Apps
     *
     * @description Redeploys the managed app configuration for a specific app on a specific device using the $APP_CONFIG_REINSTALL_CODE generated during deployment.
     * This endpoint does not require authorization, only the re-install code. The code does not contain any user authentication information.
     * For example usage, see the following Teacher app documentation: [Teacher App Manged App Configuration](https://learn.jamf.com/bundle/jamf-teacher-configuration-guide/page/Jamf_Teacher_Integration_with_Jamf_Pro.html)
     */
    post: {
      /** @description The $APP_CONFIG_REINSTALL_CODE variable for the specific device and app supplied by the managed iOS app's current App Config. */
      requestBody: {
        content: {
          "application/json": components["schemas"]["AppConfigReinstallCode"];
        };
      };
      responses: {
        /** @description Install App Config command successfully issued */
        204: {
          content: never;
        };
        /** @description Supplied re-install code was either invalid or not supplied */
        400: {
          content: never;
        };
      };
    };
  };
  "/v1/mobile-device-enrollment-profile/{id}/download-profile": {
    /**
     * Retrieve the MDM Enrollment Profile
     *
     * @description Retrieve the MDM Enrollment Profile
     */
    get: {
      parameters: {
        path: {
          /** @description MDM Enrollment Profile identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/x-apple-aspen-config": string;
          };
        };
        /** @description Not Found */
        404: {
          content: never;
        };
      };
    };
  };
  "/v1/mobile-device-groups": {
    /**
     * Return the list of all Mobile Device Groups
     *
     * @description Returns the list of all mobile device groups.
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["MobileDeviceGroup"][];
          };
        };
      };
    };
  };
  "/v1/mobile-device-groups/static-group-membership/{id}": {
    /**
     * Get Static Group Membership by Id
     *
     * @description Get Static Group Membership by Id
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /**
           * @description Sorting criteria in the format: property:asc/desc. Default sort
           * is mobileDeviceId:asc. Multiple sort criteria are supported and must be separated with
           * a comma.
           *
           * Fields allowed in the sort: `airPlayPassword`, `appAnalyticsEnabled`, `assetTag`, `availableSpaceMb`,
           * `batteryLevel`, `bluetoothLowEnergyCapable`, `bluetoothMacAddress`, `capacityMb`,
           * `lostModeEnabledDate`, `declarativeDeviceManagementEnabled`, `deviceId`, `deviceLocatorServiceEnabled`,
           * `devicePhoneNumber`, `diagnosticAndUsageReportingEnabled`, `displayName`, `doNotDisturbEnabled`,
           * `enrollmentSessionTokenValid`, `exchangeDeviceId`, `cloudBackupEnabled`, `osBuild`,
           * `osRapidSecurityResponse`, `osSupplementalBuildVersion`, `osVersion`, `ipAddress`, `itunesStoreAccountActive`,
           * `mobileDeviceId`, `languages`, `lastBackupDate`, `lastEnrolledDate`, `lastCloudBackupDate`,
           * `lastInventoryUpdateDate`, `locales`, `locationServicesForSelfServiceMobileEnabled`, `lostModeEnabled`,
           * `managed`, `mdmProfileExpirationDate`, `model`, `modelIdentifier`,
           * `modelNumber`, `modemFirmwareVersion`, `quotaSize`, `residentUsers`,
           * `serialNumber`, `sharedIpad`, `supervised`, `tethered`,
           * `timeZone`, `udid`, `usedSpacePercentage`, `wifiMacAddress`,
           * `deviceOwnershipType`, `building`, `department`, `emailAddress`,
           * `fullName`, `userPhoneNumber`, `position`, `room`,
           * `username`, `appleCareId`, `leaseExpirationDate`,`lifeExpectancyYears`,
           * `poDate`, `poNumber`, `purchasePrice`, `purchasedOrLeased`,
           * `purchasingAccount`, `purchasingContact`, `vendor`, `warrantyExpirationDate`,
           * `activationLockEnabled`, `blockEncryptionCapable`, `dataProtection`, `fileEncryptionCapable`,
           * `hardwareEncryptionSupported`, `jailbreakStatus`, `passcodeCompliant`, `passcodeCompliantWithProfile`,
           * `passcodeLockGracePeriodEnforcedSeconds`, `passcodePresent`, `personalDeviceProfileCurrent`, `carrierSettingsVersion`,
           * `cellularTechnology`, `currentCarrierNetwork`, `currentMobileCountryCode`, `currentMobileNetworkCode`,
           * `dataRoamingEnabled`, `eid`, `network`, `homeMobileCountryCode`,
           * `homeMobileNetworkCode`, `iccid`, `imei`, `imei2`,
           * `meid`, `personalHotspotEnabled`, `voiceRoamingEnabled`, `roaming`
           *
           * Example: `sort=displayName:desc,username:asc`
           */
          sort?: string[];
          /**
           * @description Query in the RSQL format, allowing to filter mobile device collection.
           * Default filter is empty query - returning all results for the requested page.
           *
           * Fields allowed in the query: `airPlayPassword`, `appAnalyticsEnabled`, `assetTag`, `availableSpaceMb`,
           * `batteryLevel`, `bluetoothLowEnergyCapable`, `bluetoothMacAddress`, `capacityMb`,
           * `declarativeDeviceManagementEnabled`, `deviceId`, `deviceLocatorServiceEnabled`, `devicePhoneNumber`,
           * `diagnosticAndUsageReportingEnabled`, `displayName`, `doNotDisturbEnabled`, `exchangeDeviceId`,
           * `cloudBackupEnabled`, `osBuild`, `osSupplementalBuildVersion`, `osVersion`, `osRapidSecurityResponse`, `ipAddress`,
           * `itunesStoreAccountActive`, `mobileDeviceId`, `languages`, `locales`,
           * `locationServicesForSelfServiceMobileEnabled`, `lostModeEnabled`, `managed`, `model`,
           * `modelIdentifier`, `modelNumber`, `modemFirmwareVersion`, `quotaSize`,
           * `residentUsers`, `serialNumber`, `sharedIpad`, `supervised`,
           * `tethered`, `timeZone`, `udid`, `usedSpacePercentage`,
           * `wifiMacAddress`, `building`, `department`, `emailAddress`,
           * `fullName`, `userPhoneNumber`, `position`, `room`,
           * `username`, `appleCareId`, `lifeExpectancyYears`, `poNumber`,
           * `purchasePrice`, `purchasedOrLeased`, `purchasingAccount`, `purchasingContact`,
           * `vendor`, `activationLockEnabled`, `blockEncryptionCapable`, `dataProtection`,
           * `fileEncryptionCapable`, `passcodeCompliant`, `passcodeCompliantWithProfile`, `passcodeLockGracePeriodEnforcedSeconds`,
           * `passcodePresent`, `personalDeviceProfileCurrent`, `carrierSettingsVersion`, `currentCarrierNetwork`,
           * `currentMobileCountryCode`, `currentMobileNetworkCode`, `dataRoamingEnabled`, `eid`,
           * `network`, `homeMobileCountryCode`, `homeMobileNetworkCode`, `iccid`,
           * `imei`, `imei2`, `meid`, `personalHotspotEnabled`,
           * `roaming`
           *
           * This param can be combined with paging and sorting.
           * Example: `filter=displayName=="iPad"`
           */
          filter?: string;
        };
        path: {
          /** @description instance id of static-group */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["InventoryListMobileDeviceSearchResults"];
          };
        };
        /** @description No static group found with the given id. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/mobile-device-groups/static-groups": {
    /**
     * Get Static Groups
     *
     * @description Get Static Groups
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Available criteria to sort on: groupId, groupName, siteId. */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter department collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: groupId, groupName, siteId. The siteId field can only be filtered by admins with full access. Any sited admin will have siteId filtered automatically. This param can be combined with paging and sorting. Example: groupName=="staticGroup1" */
          filter?: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["StaticGroupSearchResults"];
          };
        };
      };
    };
    /**
     * Create membership of a static group.
     *
     * @description Create membership of a static group.
     */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["StaticGroupAssignment"];
        };
      };
      responses: {
        /** @description Static mobile device group created successfully */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Could not save mobile device group. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/mobile-device-groups/static-groups/{id}": {
    /**
     * Get Static Group by Id
     *
     * @description Get Static Group by Id
     */
    get: {
      parameters: {
        path: {
          /** @description instance id of static-group */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["StaticGroup"];
          };
        };
        /** @description No static group found with the given id. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Remove Static Group by Id
     *
     * @description Remove Static Group by Id
     */
    delete: {
      parameters: {
        path: {
          /** @description instance id of static-group */
          id: string;
        };
      };
      responses: {
        /** @description Static Group successfully removed */
        204: {
          content: never;
        };
      };
    };
    /**
     * Update membership of a static group.
     *
     * @description Update membership of a static group.
     */
    patch: {
      parameters: {
        path: {
          /** @description instance id of a static group */
          id: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["StaticGroupAssignment"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["StaticGroupAssignment"];
          };
        };
        /** @description No static group found with the given id. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/mobile-device-prestages": {
    /**
     * Search for sorted and paged Mobile Device Prestages
     *
     * @deprecated
     * @description Search for sorted and paged mobile device prestages
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          size?: components["parameters"]["size"];
          pagesize?: components["parameters"]["pagesize"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["MobileDevicePrestageSearchResults"];
          };
        };
      };
    };
    /**
     * Create a Mobile Device Prestage
     *
     * @deprecated
     * @description Create a mobile device prestage
     */
    post: {
      /** @description Mobile Device Prestage to create. ids defined in this body will be ignored */
      requestBody: {
        content: {
          "application/json": components["schemas"]["MobileDevicePrestage"];
        };
      };
      responses: {
        /** @description Mobile Device Prestage was created */
        201: {
          content: {
            "application/json": components["schemas"]["GetMobileDevicePrestage"];
          };
        };
      };
    };
  };
  "/v1/mobile-device-prestages/scope": {
    /**
     * Get all Device Scope for all Mobile Device Prestages
     *
     * @deprecated
     * @description Get all device scope for all mobile device prestages
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageScope"];
          };
        };
      };
    };
  };
  "/v1/mobile-device-prestages/sync": {
    /**
     * Get all Prestage sync States for all prestages
     *
     * @deprecated
     * @description Get all prestage sync states for all prestages
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageSyncStatus"][];
          };
        };
      };
    };
  };
  "/v1/mobile-device-prestages/sync/{id}": {
    /**
     * Get all prestage sync states for a single prestage
     *
     * @deprecated
     * @description Get all prestage sync states for a single prestage
     */
    get: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: number;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageSyncStatus"][];
          };
        };
      };
    };
  };
  "/v1/mobile-device-prestages/sync/{id}/latest": {
    /**
     * Get the latest Sync State for a single Prestage
     *
     * @deprecated
     * @description Get the latest sync state for a single prestage
     */
    get: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: number;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageSyncStatus"];
          };
        };
      };
    };
  };
  "/v1/mobile-device-prestages/{id}": {
    /**
     * Retrieve a Mobile Device Prestage with the supplied id
     *
     * @deprecated
     * @description Retrieves a Mobile Device Prestage with the supplied id
     */
    get: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GetMobileDevicePrestage"];
          };
        };
        /** @description Mobile Device Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update a Mobile Device Prestage
     *
     * @deprecated
     * @description Updates a Mobile Device Prestage
     */
    put: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: number;
        };
      };
      /** @description Mobile Device Prestage to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PutMobileDevicePrestage"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GetMobileDevicePrestage"];
          };
        };
        /** @description Mobile Device Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description The Mobile Device Prestage was modified by another process. Read the Mobile Device Prestage again for updated changes. */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete a Mobile Device Prestage with the supplied id
     *
     * @deprecated
     * @description Deletes a Mobile Device Prestage with the supplied id
     */
    delete: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: number;
        };
      };
      responses: {
        /** @description Success */
        204: {
          content: never;
        };
      };
    };
  };
  "/v1/mobile-device-prestages/{id}/attachments": {
    /**
     * Get attachments for a Mobile Device Prestage
     *
     * @deprecated
     * @description Get attachments for a Mobile Device Prestage
     */
    get: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["FileAttachment"][];
          };
        };
        /** @description Mobile Device Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Add an attachment to a Mobile Device Prestage
     *
     * @deprecated
     * @description Add an attachment to a Mobile Device prestage
     */
    post: {
      parameters: {
        path: {
          /** @description Identifier of the Mobile Device Prestage the attachment should be assigned to */
          id: number;
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            /**
             * Format: binary
             * @description The file to upload
             */
            file: string;
          };
        };
      };
      responses: {
        /** @description Success */
        201: {
          content: {
            "application/json": components["schemas"]["PrestageFileAttachment"];
          };
        };
        /** @description Mobile Device Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Payload Too Large */
        413: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Remove an attachment for a Mobile Device Prestage
     *
     * @deprecated
     * @description Remove an attachment for a Mobile Device Prestage
     */
    delete: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["FileAttachmentDelete"];
        };
      };
      responses: {
        /** @description Success */
        204: {
          content: never;
        };
      };
    };
  };
  "/v1/mobile-device-prestages/{id}/history": {
    /**
     * Get sorted and paged Mobile Device Prestage history objects
     *
     * @deprecated
     * @description Gets sorted and paged mobile device prestage history objects
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          size?: components["parameters"]["size"];
          pagesize?: components["parameters"]["pagesize"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc */
          sort?: string[];
        };
        path: {
          /** @description Mobile Device Prestage identifier */
          id: number;
        };
      };
      responses: {
        /** @description Details of mobile device prestage history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
    /**
     * Add Mobile Device Prestage history object notes
     *
     * @deprecated
     * @description Adds mobile device prestage history object notes
     */
    post: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: number;
        };
      };
      /** @description History notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of mobile deivce prestage history were added */
        201: {
          content: {
            "application/json": components["schemas"]["ObjectHistory"];
          };
        };
        /** @description Mobile device prestage history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/mobile-device-prestages/{id}/scope": {
    /**
     * Get Device Scope for a specific Mobile Device Prestage
     *
     * @deprecated
     * @description Get device scope for a specific mobile device prestage
     */
    get: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: number;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageScopeResponse"];
          };
        };
        /** @description Mobile Device Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Replace Device Scope for a specific Mobile Device Prestage
     *
     * @deprecated
     * @description Replace device scope for a specific mobile device prestage
     */
    put: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: number;
        };
      };
      /** @description Serial Numbers to scope */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PrestageScopeUpdate"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageScopeResponse"];
          };
        };
        /** @description One or more serial numbers are not valid */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Mobile Device Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Optimistic Lock Error - The prestage you are trying to update has been updated by another process */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Add Device Scope for a specific Mobile Device Prestage
     *
     * @deprecated
     * @description Add device scope for a specific mobile device prestage
     */
    post: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: number;
        };
      };
      /** @description Serial Numbers to scope */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PrestageScopeUpdate"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageScopeResponse"];
          };
        };
        /** @description One or more serial numbers are not valid */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Mobile Device Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Optimistic Lock Error - The prestage you are trying to update has been updated by another process */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Remove Device Scope for a specific Mobile Device Prestage
     *
     * @deprecated
     * @description Remove device scope for a specific mobile device prestage
     */
    delete: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: number;
        };
      };
      /** @description Serial Numbers to remove from scope */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PrestageScopeUpdate"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageScopeResponse"];
          };
        };
        /** @description One or more serial numbers are not valid */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Mobile Device Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Optimistic Lock Error - The prestage you are trying to update has been updated by another process */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/mobile-devices": {
    /**
     * Get Mobile Device objects
     *
     * @deprecated
     * @description Gets Mobile Device objects.
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["MobileDevice"][];
          };
        };
      };
    };
  };
  "/v1/mobile-devices/{id}": {
    /**
     * Get Mobile Device
     *
     * @deprecated
     * @description Get MobileDevice
     */
    get: {
      parameters: {
        path: {
          /** @description instance id of mobile device record */
          id: number;
        };
      };
      responses: {
        /** @description Succesful response */
        200: {
          content: {
            "application/json": components["schemas"]["MobileDevice"];
          };
        };
      };
    };
    /**
     * Update fields on a mobile device that are allowed to be modified by users
     *
     * @deprecated
     * @description Updates fields on a mobile device that are allowed to be modified by users.
     */
    patch: {
      parameters: {
        path: {
          /** @description instance id of mobile device record */
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["UpdateMobileDevice"];
        };
      };
      responses: {
        /** @description Succesful response */
        200: {
          content: {
            "application/json": components["schemas"]["MobileDeviceDetails"];
          };
        };
      };
    };
  };
  "/v1/mobile-devices/{id}/detail": {
    /**
     * Get Mobile Device
     *
     * @deprecated
     * @description Get MobileDevice
     */
    get: {
      parameters: {
        path: {
          /** @description instance id of mobile device record */
          id: number;
        };
      };
      responses: {
        /** @description Succesful response */
        200: {
          content: {
            "application/json": components["schemas"]["MobileDeviceDetails"];
          };
        };
      };
    };
  };
  "/v1/mobile-devices/{id}/recalculate-smart-groups": {
    /**
     * Recalculate all smart groups for the given device id and then return count of smart groups that device fall into
     *
     * @description Recalculates all smart groups for the given device id and then
     * returns the count of smart groups the device falls into
     */
    post: {
      parameters: {
        path: {
          /** @description id of mobile device */
          id: number;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["RecalculationResults"];
          };
        };
        /** @description smart group not found */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/notifications": {
    /**
     * Get Notifications for user and site
     *
     * @description Gets notifications for user and site
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["NotificationV1"][];
          };
        };
      };
    };
  };
  "/v1/notifications/{type}/{id}": {
    /**
     * Delete Notifications
     *
     * @description Deletes notifications with given type and id.
     */
    delete: {
      parameters: {
        path: {
          /** @description instance ID of the notification */
          id: string;
          /** @description type of the notification */
          type: components["schemas"]["NotificationType"];
        };
      };
      responses: {
        /** @description Sucessful deletion */
        204: {
          content: never;
        };
      };
    };
  };
  "/v1/onboarding": {
    /**
     * Get the current onboarding settings configuration.
     * @description Get the current onboarding settings configuration.
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["OnboardingConfiguration"];
          };
        };
      };
    };
    /**
     * Update the onboarding configuration.
     * @description Update the onboarding configuration.
     */
    put: {
      /** @description Onboarding settings to save. */
      requestBody: {
        content: {
          "application/json": components["schemas"]["OnboardingConfiguration"];
        };
      };
      responses: {
        /** @description Successfully updated */
        200: {
          content: {
            "application/json": components["schemas"]["OnboardingConfiguration"];
          };
        };
        /** @description Unable to add invalid or ineligible items to the onboarding configuration. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/onboarding/eligible-apps": {
    /**
     * Retrieves a list of applications that are eligible to be used in an onboarding configuration
     * @description Retrieves a list of applications that are eligible to be used in an onboarding configuration
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["OnboardingEligibleItemsSearchResult"];
          };
        };
      };
    };
  };
  "/v1/onboarding/eligible-configuration-profiles": {
    /**
     * Retrieves a list of configuration profiles that are eligible to be used in an onboarding configuration
     * @description Retrieves a list of configuration profiles that are eligible to be used in an onboarding configuration
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["OnboardingEligibleItemsSearchResult"];
          };
        };
      };
    };
  };
  "/v1/onboarding/eligible-policies": {
    /**
     * Retrieves a list of policies that are eligible to be used in an onboarding configuration
     * @description Retrieves a list of policies that are eligible to be used in an onboarding configuration
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["OnboardingEligibleItemsSearchResult"];
          };
        };
      };
    };
  };
  "/v1/onboarding/history": {
    /**
     * Get Onboarding history object
     *
     * @description Gets Onboarding history object
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and date<2019-12-15 */
          filter?: string;
        };
      };
      responses: {
        /** @description Details of onboarding history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
    /**
     * Add Onboarding history object notes
     *
     * @description Adds Onboarding history object notes
     */
    post: {
      /** @description history notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of onboarding history were added */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Onboarding history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/onboarding/history/export": {
    /**
     * Export history object collection in specified format for Onboarding
     *
     * @description Export history object collection in specified format for Onboarding
     */
    post: {
      parameters: {
        query?: {
          "export-fields"?: components["parameters"]["export-fields"];
          "export-labels"?: components["parameters"]["export-labels"];
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and date<2019-12-15 */
          filter?: string;
        };
      };
      /** @description Optional. Override query parameters since they can make URI exceed 2,000 character limit. */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ExportParameters"];
        };
      };
      responses: {
        /** @description Export successful */
        200: {
          content: {
            "text/csv": unknown;
          };
        };
        /** @description Export fields specified incorrectly - non-existing column or duplicate on the list. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Export currently unavailable, all export-related resources are in use. Try again later. */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/parent-app": {
    /**
     * Get the current Jamf Parent app settings
     *
     * @description Get the current Jamf Parent app settings
     */
    get: {
      responses: {
        /** @description Details of the current Jamf Parent app settings. */
        200: {
          content: {
            "application/json": components["schemas"]["ParentApp"];
          };
        };
      };
    };
    /**
     * Update Jamf Parent app settings
     *
     * @description Update Jamf Parent app settings
     */
    put: {
      /** @description Jamf Parent app settings to save. */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ParentApp"];
        };
      };
      responses: {
        /** @description Jamf Parent app settings updated */
        200: {
          content: {
            "application/json": components["schemas"]["ParentApp"];
          };
        };
        /** @description Bad Request, could not parse input. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/parent-app/history": {
    /**
     * Get Jamf Parent app settings history
     *
     * @description Gets Jamf Parent app settings history
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          filter?: components["parameters"]["filter"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string;
        };
      };
      responses: {
        /** @description Details of Jamf Parent app settings history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
    /**
     * Add Jamf Parent app settings history notes
     *
     * @description Adds Jamf Parent app settings history notes
     */
    post: {
      /** @description history notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes to Jamf Parent app settings history were added */
        201: {
          content: {
            "application/json": components["schemas"]["ObjectHistory"];
          };
        };
        /** @description Jamf Parent app history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/pki/certificate-authority/active": {
    /**
     * Returns X.509 details of the active Certificate Authority (CA)
     * @description Returns X.509 details of the active Certificate Authority (CA)
     */
    get: {
      responses: {
        /** @description Successful response displays the details of the active Certificate Authority (CA) */
        200: {
          content: {
            "application/json": components["schemas"]["CertificateRecord"];
          };
        };
      };
    };
  };
  "/v1/pki/certificate-authority/active/der": {
    /**
     * Returns X.509 of active Certificate Authority (CA) in DER format
     * @description Returns X.509 of active Certificate Authority (CA) in DER format
     */
    get: {
      responses: {
        /** @description Successful response returns certificate in DER format */
        200: {
          content: {
            "application/pkix-cert": string;
          };
        };
      };
    };
  };
  "/v1/pki/certificate-authority/active/pem": {
    /**
     * Returns active Certificate Authority (CA) in PEM format
     * @description Returns active Certificate Authority (CA) in PEM format
     */
    get: {
      responses: {
        /** @description Successful response returns certificate in PEM format. */
        200: {
          content: {
            "application/pem-certificate-chain": string;
          };
        };
      };
    };
  };
  "/v1/pki/certificate-authority/{id}": {
    /**
     * Returns X.509 details of Certificate Authority (CA) with provided ID
     * @description Returns X.509 details of Certificate Authority (CA) with provided ID
     */
    get: {
      parameters: {
        path: {
          /** @description UUID of the Certificate Authority (CA) */
          id: string;
        };
      };
      responses: {
        /** @description Successful response displays the details of the Certificate Authority (CA) with provided ID */
        200: {
          content: {
            "application/json": components["schemas"]["CertificateRecord"];
          };
        };
        /** @description Invalid ID parameter */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Certificate with that ID does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/pki/certificate-authority/{id}/der": {
    /**
     * Returns X.509 current Certificate Authority (CA) with provided ID in DER format
     * @description Returns X.509 current Certificate Authority (CA) with provided ID in DER format
     */
    get: {
      parameters: {
        path: {
          /** @description UUID of the Certificate Authority (CA) */
          id: string;
        };
      };
      responses: {
        /** @description Successful response returns certificate in DER format */
        200: {
          content: {
            "application/pkix-cert": string;
          };
        };
        /** @description Invalid ID parameter */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Certificate with that ID does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/pki/certificate-authority/{id}/pem": {
    /**
     * Returns current Certificate Authority (CA) with provided ID in PEM format
     * @description Returns current Certificate Authority (CA) with provided ID in PEM format
     */
    get: {
      parameters: {
        path: {
          /** @description UUID of the Certificate Authority (CA) */
          id: string;
        };
      };
      responses: {
        /** @description Successful response returns certificate in PEM format */
        200: {
          content: {
            "application/pem-certificate-chain": string;
          };
        };
        /** @description Invalid ID parameter */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Certificate with that ID does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/pki/venafi": {
    /**
     * Create a PKI configuration in Jamf Pro for Venafi
     *
     * @description Creates a Venafi PKI configuration in Jamf Pro, which can be used to issue certificates
     */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["VenafiCaRecord"];
        };
      };
      responses: {
        /** @description Successful response creates a Venafi PKI configuration */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Invalid attributes for Certificate Authority configuration */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/pki/venafi/{id}": {
    /**
     * Retrieve a Venafi PKI configuration from Jamf Pro
     *
     * @description Retrieve a Venafi PKI configuration from Jamf Pro
     */
    get: {
      parameters: {
        path: {
          /** @description ID of the Venafi configuration */
          id: string;
        };
      };
      responses: {
        /** @description Successful response returns a Venafi PKI configuration */
        200: {
          content: {
            "application/json": components["schemas"]["VenafiCaRecord"];
          };
        };
        /** @description Certificate Authority not found for Id */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete a Venafi PKI configuration from Jamf Pro
     *
     * @description Delete a Venafi PKI configuration from Jamf Pro
     */
    delete: {
      parameters: {
        path: {
          /** @description ID of the Venafi configuration */
          id: string;
        };
      };
      responses: {
        /** @description Successful response deletes Venafi PKI configuration from Jamf Pro */
        204: {
          content: never;
        };
        /** @description Certificate Authority not found for Id */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Conflict deleting target, Venafi PKI configuration still in use on Configuration Profile */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update a Venafi PKI configuration in Jamf Pro
     *
     * @description Update a Venafi PKI configuration in Jamf Pro
     */
    patch: {
      parameters: {
        path: {
          /** @description ID of the Venafi configuration */
          id: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["VenafiCaRecord"];
        };
      };
      responses: {
        /** @description Successful response returns a Venafi PKI configuration */
        200: {
          content: {
            "application/json": components["schemas"]["VenafiCaRecord"];
          };
        };
        /** @description Invalid attributes for Certificate Authority configuration */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Certificate Authority not found for Id */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/pki/venafi/{id}/connection-status": {
    /**
     * Tests the communication between Jamf Pro and a Jamf Pro PKI Proxy Server
     *
     * @description Tests the communication between Jamf Pro and a Jamf Pro PKI Proxy Server
     */
    get: {
      parameters: {
        path: {
          /** @description ID of the Venafi configuration */
          id: string;
        };
      };
      responses: {
        /** @description Successfully connected to Venafi */
        200: {
          content: {
            "application/json": components["schemas"]["VenafiServiceStatus"];
          };
        };
        /** @description Why we failed to connect */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/pki/venafi/{id}/dependent-profiles": {
    /**
     * Get configuration profile data using specified Venafi CA object
     *
     * @description Get configuration profile data using specified Venafi CA object
     */
    get: {
      parameters: {
        path: {
          /** @description ID of the Venafi configuration */
          id: string;
        };
      };
      responses: {
        /** @description Successfully returns a list of configuration profile data connected to the Venafi CA */
        200: {
          content: {
            "application/json": components["schemas"]["VenafiPkiPayloadRecordSearchResults"];
          };
        };
      };
    };
  };
  "/v1/pki/venafi/{id}/history": {
    /**
     * Get specified Venafi CA history object
     *
     * @description Get specified Venafi CA history object
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15 */
          filter?: string;
        };
        path: {
          /** @description ID of the Venafi configuration */
          id: string;
        };
      };
      responses: {
        /** @description Details of Venafi CA history was found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
        /** @description Specified Venafi CA object does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Add specified Venafi CA Object Note
     *
     * @description Adds specified Venafi CA Object Note
     */
    post: {
      parameters: {
        path: {
          /** @description instance id of Venafi CA history record */
          id: string;
        };
      };
      /** @description venafi ca history notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of Venafi CA history were added */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Specified Venafi CA object does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Venafi CA history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/pki/venafi/{id}/jamf-public-key": {
    /**
     * Downloads a certificate used to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server
     *
     * @description Downloads a certificate for an existing Venafi configuration that can be used to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server
     */
    get: {
      parameters: {
        path: {
          /** @description ID of the Venafi configuration */
          id: string;
        };
      };
      responses: {
        /** @description Successful response downloads the certificate */
        200: {
          content: {
            "application/pem-certificate-chain": string;
          };
        };
        /** @description Keystore not found for Certificate Authority */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Certificate not found for Id */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/pki/venafi/{id}/jamf-public-key/regenerate": {
    /**
     * Regenerates a certificate used to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server
     *
     * @description Regenerates a certificate for an existing Venafi configuration that can be used to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server
     */
    post: {
      parameters: {
        path: {
          /** @description ID of the Venafi configuration */
          id: string;
        };
      };
      responses: {
        /** @description Successful response regenerates the certificate */
        204: {
          content: never;
        };
        /** @description Certificate Authority not found for Id */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/pki/venafi/{id}/proxy-trust-store": {
    /**
     * Downloads the PKI Proxy Server public key to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server
     *
     * @description Downloads the uploaded PKI Proxy Server public key to do basic TLS certificate validation between Jamf Pro and a Jamf Pro PKI Proxy Server
     */
    get: {
      parameters: {
        path: {
          /** @description ID of the Venafi configuration */
          id: string;
        };
      };
      responses: {
        /** @description Successful response downloads the certificate */
        200: {
          content: {
            "application/pem-certificate-chain": string;
          };
        };
        /** @description Keystore not found for Certificate Authority */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Certificate not found for Certificate Authority */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Uploads the PKI Proxy Server public key to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server
     *
     * @description Uploads the PKI Proxy Server public key to do basic TLS certificate validation between Jamf Pro and a Jamf Pro PKI Proxy Server
     */
    post: {
      parameters: {
        path: {
          /** @description ID of the Venafi configuration */
          id: string;
        };
      };
      requestBody: {
        content: {
          "application/pem-certificate-chain": string;
        };
      };
      responses: {
        /** @description Successful response replaces or removes public key */
        204: {
          content: never;
        };
        /** @description Keystore not found for Certificate Authority */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Certificate not found for Certificate Authority */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Removes the PKI Proxy Server public key used to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server
     *
     * @description Removes the uploaded PKI Proxy Server public key to do basic TLS certificate validation between Jamf Pro and a Jamf Pro PKI Proxy Server
     */
    delete: {
      parameters: {
        path: {
          /** @description ID of the Venafi configuration */
          id: string;
        };
      };
      responses: {
        /** @description Successful removes public key */
        204: {
          content: never;
        };
        /** @description Certificate Authority not found for Id */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/policy-properties": {
    /**
     * Get Policy Properties object
     *
     * @description Gets `Policy Properties` object.
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PolicyPropertiesV1"];
          };
        };
      };
    };
    /**
     * Update Policy Properties object
     *
     * @description Update Policy Properties object
     */
    put: {
      /** @description Policy Properties object to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PolicyPropertiesV1"];
        };
      };
      responses: {
        /** @description Policy Properties was updated */
        200: {
          content: {
            "application/json": components["schemas"]["PolicyPropertiesV1"];
          };
        };
      };
    };
  };
  "/v1/reenrollment": {
    /**
     * Get Re-enrollment object
     *
     * @description Gets Re-enrollment object
     */
    get: {
      responses: {
        /** @description Details of Re-enrollment object were found */
        200: {
          content: {
            "application/json": components["schemas"]["Reenrollment"];
          };
        };
        /** @description Re-enrollment object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update the Re-enrollment object
     *
     * @description Update the Re-enrollment object
     */
    put: {
      /** @description Re-enrollment object to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Reenrollment"];
        };
      };
      responses: {
        /** @description Re-enrollment record was updated */
        201: {
          content: {
            "application/json": components["schemas"]["Reenrollment"];
          };
        };
      };
    };
  };
  "/v1/reenrollment/history": {
    /**
     * Get Re-enrollment history object
     *
     * @description Gets Re-enrollment history object
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          size?: components["parameters"]["size"];
          pagesize?: components["parameters"]["pagesize"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string;
        };
      };
      responses: {
        /** @description Details of re-enrollment history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
    /**
     * Add specified Re-enrollment history object notes
     *
     * @description Adds specified Re-enrollment history object notes
     */
    post: {
      /** @description history notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of re-enrollment history were added */
        201: {
          content: {
            "application/json": components["schemas"]["ObjectHistory"];
          };
        };
        /** @description Re-enrollment history can not be saved. */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/reenrollment/history/export": {
    /**
     * Export reenrollment history collection
     *
     * @description Export reenrollment history collection
     */
    post: {
      parameters: {
        query?: {
          "export-fields"?: components["parameters"]["export-fields"];
          "export-labels"?: components["parameters"]["export-labels"];
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=id:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. This param can be combined with paging and sorting. Example: name=="*script*" */
          filter?: string;
        };
      };
      /** @description Optional. Override query parameters since they can make URI exceed 2,000 character limit. */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ExportParameters"];
        };
      };
      responses: {
        /** @description Export successful */
        200: {
          content: {
            "text/csv,application/json": unknown;
          };
        };
        /**
         * @description Export fields specified incorrectly - non-existing column or duplicate in the list.
         * Supported columns: id,name,categoryName,categoryId,priority.
         */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Export currently unavailable, all export-related resources are in use. Try again later. */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/scheduler/jobs": {
    /**
     * Retrieve all Jamf Pro Scheduler jobs
     * @description Retrieves the names of all Jamf Pro Scheduler jobs
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["SchedulerJobs"];
          };
        };
      };
    };
  };
  "/v1/scheduler/jobs/{jobKey}/triggers": {
    /**
     * Retrieve all triggers for a Jamf Pro Scheduler job
     * @description Retrieves all triggers for a Jamf Pro Scheduler job
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorts results by one or more criteria, following the format property:asc/desc. Default sort is nextFireTime:asc. If using multiple criteria, separate with commas. */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter the Jamf Pro Scheduler triggers collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: triggerKey, previousFireTime, nextFireTime. */
          filter?: string;
        };
        path: {
          /** @description Jamf Pro Scheduler Job Key */
          jobKey: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["SchedulerJob"];
          };
        };
      };
    };
  };
  "/v1/scheduler/summary": {
    /**
     * Retrieve a summary of the Jamf Pro Scheduler
     * @description Retrieves a summary of the Jamf Pro Scheduler
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["SchedulerSummary"];
          };
        };
      };
    };
  };
  "/v1/scripts": {
    /**
     * Search for sorted and paged Scripts
     *
     * @description Search for sorted and paged scripts
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Fields allowed in the query: `id`, `name`, `info`, `notes`, `priority`, `categoryId`, `categoryName`, `parameter4` up to `parameter11`, `osRequirements`, `scriptContents`. Example: sort=date:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter scripts collection. Default search is empty query - returning all results for the requested page. Fields allowed in the query: `id`, `name`, `info`, `notes`, `priority`, `categoryId`, `categoryName`, `parameter4` up to `parameter11`, `osRequirements`, `scriptContents`. This param can be combined with paging and sorting. Example: filter=categoryName=="Category" and name=="*script name*" */
          filter?: string;
        };
      };
      responses: {
        /** @description Found scripts matching search params. */
        200: {
          content: {
            "application/json": components["schemas"]["ScriptsSearchResults"];
          };
        };
      };
    };
    /**
     * Create a Script
     *
     * @description Creates a script
     */
    post: {
      /** @description new script to create. ids defined in this body will be ignored */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Script"];
        };
      };
      responses: {
        /** @description Script created successfully */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
      };
    };
  };
  "/v1/scripts/{id}": {
    /**
     * Retrieve a full script object
     *
     * @description Retrieves a full script object
     */
    get: {
      parameters: {
        path: {
          /** @description Script object identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["Script"];
          };
        };
        /** @description Script with that ID does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Replace the script at the id with the supplied information
     *
     * @description Replaces the script at the id with the supplied information
     */
    put: {
      parameters: {
        path: {
          /** @description Script object identifier */
          id: string;
        };
      };
      /** @description new script to upload to existing id. ids defined in this body will be ignored */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Script"];
        };
      };
      responses: {
        /** @description Script at id was updated */
        200: {
          content: {
            "application/json": components["schemas"]["Script"];
          };
        };
        /** @description Script with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete a Script at the specified id
     *
     * @description Deletes a script at the specified id
     */
    delete: {
      parameters: {
        path: {
          /** @description Script object identifier */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        204: {
          content: never;
        };
      };
    };
  };
  "/v1/scripts/{id}/download": {
    /**
     * Download a text file of the Script contents
     *
     * @description Download a text file of the script contents
     */
    get: {
      parameters: {
        path: {
          /** @description id of the script to be downloaded */
          id: string;
        };
      };
      responses: {
        /** @description The script of the specified id */
        200: {
          content: {
            "text/plain": string;
          };
        };
        /** @description Not found */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/scripts/{id}/history": {
    /**
     * Get specified Script history object
     *
     * @description Gets specified Script history object
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15 */
          filter?: string;
        };
        path: {
          /** @description id of script history record */
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
        /** @description Specified script does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Add specified Script history object notes
     *
     * @description Adds specified Script history object notes
     */
    post: {
      parameters: {
        path: {
          /** @description instance id of script history record */
          id: string;
        };
      };
      /** @description history notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of script history were added */
        201: {
          content: {
            "application/json": components["schemas"]["ObjectHistory"];
          };
        };
        /** @description Specified script does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Script history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/search-mobile-devices": {
    /**
     * Search Mobile Devices
     *
     * @deprecated
     * @description Search Mobile Devices
     */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["MobileDeviceSearchParams"];
        };
      };
      responses: {
        /** @description Found buildings matching search params. */
        200: {
          content: {
            "application/json": components["schemas"]["MobileDeviceSearchResults"];
          };
        };
      };
    };
  };
  "/v1/self-service/branding/ios": {
    /**
     * Search for sorted and paged iOS branding configurations
     *
     * @description Search for sorted and paged iOS branding configurations
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=id:desc,brandingName:asc */
          sort?: string[];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["IosBrandingSearchResults"];
          };
        };
      };
    };
    /**
     * Create a Self Service iOS branding configuration with the supplied
     *
     * @description Create a Self Service iOS branding configuration with the supplied details
     */
    post: {
      /** @description The iOS branding configuration to create */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["IosBrandingConfiguration"];
        };
      };
      responses: {
        /** @description Successful response */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
      };
    };
  };
  "/v1/self-service/branding/ios/{id}": {
    /**
     * Read a single Self Service iOS branding configuration indicated by the provided id
     *
     * @description Read a single Self Service iOS branding configuration indicated by the provided id.
     */
    get: {
      parameters: {
        path: {
          /** @description id of iOS branding configuration */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["IosBrandingConfiguration"];
          };
        };
      };
    };
    /**
     * Update a Self Service iOS branding configuration with the supplied details
     *
     * @description Update a Self Service iOS branding configuration with the supplied details
     */
    put: {
      parameters: {
        path: {
          /** @description id of iOS branding configuration */
          id: string;
        };
      };
      /** @description The iOS branding configuration values to update */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["IosBrandingConfiguration"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["IosBrandingConfiguration"];
          };
        };
        /** @description Invalid id */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete the Self Service iOS branding configuration indicated by the provided id
     *
     * @description Delete the Self Service iOS branding configuration indicated by the provided id.
     */
    delete: {
      parameters: {
        path: {
          /** @description id of iOS branding configuration */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        204: {
          content: never;
        };
        /** @description Invalid id */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/self-service/branding/macos": {
    /**
     * Search for sorted and paged macOS branding configurations
     *
     * @description Search for sorted and paged macOS branding configurations
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=id:desc,brandingName:asc */
          sort?: string[];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["MacOsBrandingSearchResults"];
          };
        };
      };
    };
    /**
     * Create a Self Service macOS branding configuration with the supplied
     *
     * @description Create a Self Service macOS branding configuration with the supplied details
     */
    post: {
      /** @description The macOS branding configuration to create */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["MacOsBrandingConfiguration"];
        };
      };
      responses: {
        /** @description Successful response */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
      };
    };
  };
  "/v1/self-service/branding/macos/{id}": {
    /**
     * Read a single Self Service macOS branding configuration indicated by the provided id
     *
     * @description Read a single Self Service macOS branding configuration indicated by the provided id.
     */
    get: {
      parameters: {
        path: {
          /** @description id of macOS branding configuration */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["MacOsBrandingConfiguration"];
          };
        };
      };
    };
    /**
     * Update a Self Service macOS branding configuration with the supplied details
     *
     * @description Update a Self Service macOS branding configuration with the supplied details
     */
    put: {
      parameters: {
        path: {
          /** @description id of macOS branding configuration */
          id: string;
        };
      };
      /** @description The macOS branding configuration values to update */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["MacOsBrandingConfiguration"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["MacOsBrandingConfiguration"];
          };
        };
        /** @description Invalid id */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete the Self Service macOS branding configuration indicated by the provided id
     *
     * @description Delete the Self Service macOS branding configuration indicated by the provided id.
     */
    delete: {
      parameters: {
        path: {
          /** @description id of macOS branding configuration */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        204: {
          content: never;
        };
        /** @description Invalid id */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/self-service/settings": {
    /**
     * Get an object representation of Self Service settings
     *
     * @description gets an object representation of Self Service settings
     */
    get: {
      responses: {
        /** @description successful GET */
        200: {
          content: {
            "application/json": components["schemas"]["SelfServiceSettings"];
          };
        };
      };
    };
    /**
     * Put an object representation of Self Service settings
     *
     * @description puts an object representation of Self Service settings
     */
    put: {
      /** @description object that contains all editable global fields to alter Self Service settings */
      requestBody: {
        content: {
          "application/json": components["schemas"]["SelfServiceSettings"];
        };
      };
      responses: {
        /** @description successful PUT */
        200: {
          content: {
            "application/json": components["schemas"]["SelfServiceSettings"];
          };
        };
      };
    };
  };
  "/v1/sites": {
    /**
     * Find all sites
     *
     * @description Find all sites
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["V1Site"][];
          };
        };
      };
    };
  };
  "/v1/sites/{id}/objects": {
    /**
     * Find and filter site objects for a site ID
     *
     * @description Find site objects for Site ID, with the ability to filter out different object types and object IDs for the site ID
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /**
           * @description Sorting criteria in the format: `property:asc/desc`. Default sort
           * is `objectType:asc`. Multiple sort criteria are supported and must be separated
           * with a comma.
           *
           * Example: `sort=objectId:asc,objectType:desc`.
           */
          sort?: string[];
          /**
           * @description Query in the RSQL format, allowing filter of site object information.
           * Default filter returns all objects for the site ID.
           *
           * Fields allowed in the query: `objectType`, `objectId`
           *
           * Example: `filter=objectType=="User"`
           *
           * List of `objectType` options (case-insensitive) ["Computer", "Peripheral", "Licensed Software", "Licensed Software Template", "Policy", "macOS Configuration Profile", "Restricted Software", "Managed Preference Profile", "Computer Group", "Mobile Device", "Apple TV", "Android Device", "User Group", "iOS Configuration Profile", "Mobile Device App", "E-book", "Mobile Device Group", "Classroom", "Advanced Computer Search", "Advanced Mobile Search", "Advanced User Search", "Advanced User Content Search", "Computer Invitation", "Mobile Device Invitation", "Mobile Device Enrollment Profile", "Device Enrollment Program Instance", "Mobile Device Prestage", "Computer DEP Prestage", "Enrollment Customization", "VPP Location", "VPP Subscription", "VPP Invitation", "VPP Assignment", "User", "Network Integration", "Mac App", "App Installer", "BYO Profile", "Self Service Plugin", "Software Title", "Patch Software Title Summary", "Patch Policy", "Patch Software Title Configuration", "Change Password", "Mobile Device Inventory", "Computer Inventory", "Change Management", "Licensed Software License"]
           */
          filter?: string;
        };
        path: {
          /** @description Site ID to get objects for */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["SiteObject"][];
          };
        };
      };
    };
  };
  "/v1/smart-computer-groups/{id}/recalculate": {
    /**
     * Recalculate the smart group for the given id
     *
     * @description Recalculates the smart group for the given id and then
     * returns the ids for the computers in the smart group
     */
    post: {
      parameters: {
        path: {
          /** @description instance id of smart group */
          id: number;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["RecalculationResults"];
          };
        };
        /** @description smart group not found */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/smart-mobile-device-groups/{id}/recalculate": {
    /**
     * Recalculate a smart group for the given id then return the ids for the devices in the smart group
     *
     * @description recalculates a smart group for the given id and then
     * returns the ids for the devices in the smart group
     */
    post: {
      parameters: {
        path: {
          /** @description instance id of smart group */
          id: number;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["RecalculationResults"];
          };
        };
        /** @description smart group not found */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/smart-user-groups/{id}/recalculate": {
    /**
     * Recalculate the smart group for the given id and then return the ids for the users in the smart group
     *
     * @description Recalculates the smart group for the given id and then
     * returns the ids for the users in the smart group
     */
    post: {
      parameters: {
        path: {
          /** @description instance id of smart group */
          id: number;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["RecalculationResults"];
          };
        };
        /** @description smart group not found */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/smtp-server": {
    /**
     * Finds the Jamf Pro SMTP Server information
     *
     * @description Finds the Jamf Pro STMP Server information
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["SmtpServer"];
          };
        };
      };
    };
    /**
     * Updates Jamf Pro SMTP Server information
     *
     * @description Updates Jamf Pro SMTP Server information. If requiresAuthentication is set to true, a username and password must be provided
     */
    put: {
      /** @description SMTP Server to update */
      requestBody: {
        content: {
          "application/merge-patch+json": components["schemas"]["SmtpServer"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["SmtpServer"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description There was an error applying the put */
        422: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/smtp-server/history": {
    /**
     * Get specified SMTP Server history object
     *
     * @description Get specified SMTP Server history object
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,username:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15 */
          filter?: string;
        };
      };
      responses: {
        /** @description Details of SMTP Server history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResultsV1"];
          };
        };
        /** @description Specified SMTP Server history object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Add SMTP Server history object notes
     *
     * @description Adds SMTP Server history object notes
     */
    post: {
      /** @description History notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of SMTP Server history were added */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description SMTP Server history cannot be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/smtp-server/test": {
    /**
     * Test functionality of an SMTP Server
     * @description Test functionality of an SMTP Server
     */
    post: {
      /** @description Recipient email to test SMTP Server */
      requestBody: {
        content: {
          "application/json": components["schemas"]["SmtpServerTest"];
        };
      };
      responses: {
        /** @description Success */
        202: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/sso": {
    /**
     * Retrieve the current Single Sign On configuration settings
     *
     * @deprecated
     * @description Retrieves the current Single Sign On configuration settings
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["SsoSettingsV1"];
          };
        };
      };
    };
    /**
     * Updates the current Single Sign On configuration settings
     *
     * @deprecated
     * @description Updates the current Single Sign On configuration settings
     */
    put: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["SsoSettingsV1"];
        };
      };
      responses: {
        /** @description The update was successful and the newly updated object is returned. */
        200: {
          content: {
            "application/json": components["schemas"]["SsoSettingsV1"];
          };
        };
        /** @description Bad Request. Either required fields are missing or there was a validation exception. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/sso/cert": {
    /**
     * Retrieve the certificate currently configured for use with SSO
     *
     * @deprecated
     * @description Retrieves the certificate currently configured for use with SSO.
     */
    get: {
      responses: {
        /** @description Successful operation. */
        200: {
          content: {
            "application/json": components["schemas"]["SsoKeystoreWithDetails"];
          };
        };
      };
    };
    /**
     * Update the certificate used by Jamf Pro to sign SSO requests to the identify provider
     *
     * @deprecated
     * @description Update the certificate used by Jamf Pro to sign SSO requests to the identify provider.
     */
    put: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["SsoKeystore"];
        };
      };
      responses: {
        /** @description Successfully changed the keystore. */
        200: {
          content: {
            "application/json": components["schemas"]["SsoKeystoreWithDetails"];
          };
        };
        /** @description One or more parameters were invalid. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Jamf Pro will generate a new certificate and use it to sign SSO
     *
     * @deprecated
     * @description Jamf Pro will generate a new certificate and use it to sign SSO requests to the identity provider.
     */
    post: {
      responses: {
        /** @description Newly generated will be set and returned. */
        200: {
          content: {
            "application/json": components["schemas"]["SsoKeystoreWithDetails"];
          };
        };
      };
    };
    /**
     * Delete the currently configured certificate used by SSO
     *
     * @deprecated
     * @description Deletes the currently configured certificate used by SSO.
     */
    delete: {
      responses: {
        /** @description Operation successful. */
        204: {
          content: never;
        };
      };
    };
  };
  "/v1/sso/cert/download": {
    /**
     * Download the certificate currently configured for use with Jamf Pro's SSO configuration
     *
     * @deprecated
     * @description Downloads the certificate currently configured for use with Jamf Pro's SSO configuration
     */
    get: {
      responses: {
        /** @description Request successful */
        200: {
          content: {
            "text/plain": string;
          };
        };
      };
    };
  };
  "/v1/sso/cert/parse": {
    /**
     * Parse the certificate to get details about certificate type and keys needed to upload certificate file
     *
     * @deprecated
     * @description Parse the certificate to get details about certificate type and keys needed to upload certificate file.
     */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["SsoKeystoreParse"];
        };
      };
      responses: {
        /** @description Successfully parsed the certificate. */
        200: {
          content: {
            "application/json": components["schemas"]["SsoKeystoreCertParseResponse"];
          };
        };
        /** @description One or more parameters were invalid. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/sso/dependencies": {
    /**
     * Retrieve the list of Enrollment Customizations using SSO
     *
     * @deprecated
     * @description Retrieves the list of Enrollment Customizations using SSO
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["EnrollmentCustomizationDependencies"];
          };
        };
      };
    };
  };
  "/v1/sso/disable": {
    /**
     * Disable SSO
     *
     * @deprecated
     * @description Disable SSO
     */
    post: {
      responses: {
        /** @description SSO has been disabled */
        202: {
          content: never;
        };
        /** @description SSO object don't exist or is already disabled */
        400: {
          content: never;
        };
      };
    };
  };
  "/v1/sso/failover": {
    /**
     * Retrieve the current failover settings
     * @description Retrieve the current failover settings
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["SsoFailoverData"];
          };
        };
        /** @description Failover url not generated */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/sso/failover/generate": {
    /**
     * Regenerates failover url
     * @description Regenerates failover url, by changing failover key to new one, and returns new failover settings
     */
    post: {
      responses: {
        /** @description The generation was successful and generated failover settings are returned. */
        200: {
          content: {
            "application/json": components["schemas"]["SsoFailoverData"];
          };
        };
      };
    };
  };
  "/v1/sso/history": {
    /**
     * Get SSO history object
     *
     * @deprecated
     * @description Gets SSO history object
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15 */
          filter?: string;
        };
      };
      responses: {
        /** @description Details of SSO history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
    /**
     * Add SSO history object notes
     *
     * @deprecated
     * @description Adds SSO history object notes
     */
    post: {
      /** @description history notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of SSO history were added */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description SSO object history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/sso/metadata/download": {
    /**
     * Download the Jamf Pro SAML metadata file
     *
     * @deprecated
     * @description Download the Jamf Pro SAML metadata file
     */
    get: {
      responses: {
        /** @description Successful resposne */
        200: {
          content: {
            "text/plain": string;
          };
        };
      };
    };
  };
  "/v1/sso/validate": {
    /**
     * Endpoint for validation of a saml metadata url
     *
     * @deprecated
     * @description Validation of a content available under provided metadata URL.
     */
    post: {
      /** @description url to validate */
      requestBody: {
        content: {
          "application/json": components["schemas"]["SsoMetadataUrl"];
        };
      };
      responses: {
        /** @description valid metadata url */
        202: {
          content: never;
        };
        /** @description provided metadata URL is not valid */
        400: {
          content: never;
        };
      };
    };
  };
  "/v1/static-user-groups": {
    /**
     * Return a list of all Static User Groups
     *
     * @description Returns a list of all static user groups.
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["StaticUserGroup"][];
          };
        };
      };
    };
  };
  "/v1/static-user-groups/{id}": {
    /**
     * Return a specific Static User Group by id
     *
     * @description Returns a specific static user group by id.
     */
    get: {
      parameters: {
        path: {
          /** @description Instance id of static user group record */
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["StaticUserGroup"];
          };
        };
        /** @description Specified static user group object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/supervision-identities": {
    /**
     * Search for sorted and paged Supervision Identities
     *
     * @description Search for sorted and paged supervision identities
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          size?: components["parameters"]["size"];
          pagesize?: components["parameters"]["pagesize"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["SupervisionIdentitySearchResults"];
          };
        };
      };
    };
    /**
     * Create a Supervision Identity for the supplied information
     *
     * @description Creates a Supervision Identity for the supplied information
     */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["SupervisionIdentityCreate"];
        };
      };
      responses: {
        /** @description Success */
        201: {
          content: {
            "application/json": components["schemas"]["SupervisionIdentity"];
          };
        };
        /** @description Something went wrong */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/supervision-identities/upload": {
    /**
     * Upload the Supervision Identity .p12 file
     *
     * @description Uploads the Supervision Identity .p12 file
     */
    post: {
      /** @description The base 64 encoded .p12 file alone with other needed information */
      requestBody: {
        content: {
          "application/json": components["schemas"]["SupervisionIdentityCertificateUpload"];
        };
      };
      responses: {
        /** @description Success */
        201: {
          content: {
            "application/json": components["schemas"]["SupervisionIdentity"];
          };
        };
        /** @description Something went wrong */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/supervision-identities/{id}": {
    /**
     * Retrieve a Supervision Identity with the supplied id
     *
     * @description Retrieves a Supervision Identity with the supplied id
     */
    get: {
      parameters: {
        path: {
          /** @description Supervision Identity identifier */
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["SupervisionIdentity"];
          };
        };
        /** @description Supervision Identity with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update a Supervision Identity with the supplied information
     *
     * @description Updates a Supervision Identity with the supplied information
     */
    put: {
      parameters: {
        path: {
          /** @description Supervision Identity identifier */
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SupervisionIdentityUpdate"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["SupervisionIdentity"];
          };
        };
        /** @description Supervision Identity with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Something went wrong */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete a Supervision Identity with the supplied id
     *
     * @description Deletes a Supervision Identity with the supplied id
     */
    delete: {
      parameters: {
        path: {
          /** @description Supervision Identity identifier */
          id: number;
        };
      };
      responses: {
        /** @description Success */
        204: {
          content: never;
        };
        /** @description Supervision Identity with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/supervision-identities/{id}/download": {
    /**
     * Download the Supervision Identity .p12 file
     *
     * @description Download the Supervision Identity .p12 file
     */
    get: {
      parameters: {
        path: {
          /** @description Supervision Identity identifier */
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/octet-stream": string;
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/system/initialize": {
    /**
     * Set up fresh installed Jamf Pro Server
     *
     * @description Set up fresh installed Jamf Pro Server
     */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["InitializeV1"];
        };
      };
      responses: {
        /** @description Jamf Pro Server has been initialized */
        202: {
          content: never;
        };
        /**
         * @description The following are codes returned by this call:
         * INVALID_ACTIVATION_CODE - activation code provided is not valid or is expired
         * INVALID_STATE - The system is in an invalid state to be initialized.
         * FIELD_REQUIRED - A required field was not provided.  The field name will be provided on the response.
         */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/system/initialize-database-connection": {
    /**
     * Provide Database Password during startup
     *
     * @description Provide database password during startup. Endpoint is accessible when database password was not configured and Jamf Pro server has not been initialized yet.
     */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["DatabasePassword"];
        };
      };
      responses: {
        /** @description OK */
        202: {
          content: never;
        };
        /** @description Incorrect database password. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Limit of requests per second was exceeded */
        429: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/teacher-app": {
    /**
     * Get the Jamf Teacher settings that you have access to see
     *
     * @description Get the Jamf Teacher settings that you have access to see.
     */
    get: {
      responses: {
        /** @description List of Jamf Teacher settings */
        200: {
          content: {
            "application/json": components["schemas"]["TeacherSettingsResponse"];
          };
        };
      };
    };
    /**
     * Update a Jamf Teacher settings object
     *
     * @description Update a Jamf Teacher settings object.
     */
    put: {
      /** @description Teacher settings to create. */
      requestBody: {
        content: {
          "application/json": components["schemas"]["TeacherSettingsRequest"];
        };
      };
      responses: {
        /** @description Updated Jamf Teacher settings. */
        200: {
          content: {
            "application/json": components["schemas"]["TeacherSettingsResponse"];
          };
        };
        /** @description Update Failed. */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/teacher-app/history": {
    /**
     * Get Jamf Teacher app settings history
     *
     * @description Gets Jamf Teacher app settings history
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          sort?: components["parameters"]["sort"];
          filter?: components["parameters"]["filter"];
        };
      };
      responses: {
        /** @description Details of Jamf Teacher app settings history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
    /**
     * Add Jamf Teacher app settings history notes
     *
     * @description Adds Jamf Teacher app settings history notes
     */
    post: {
      /** @description history notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes to Jamf Teacher app settings history were added */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Jamf Teacher app history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/time-zones": {
    /**
     * Return information about the currently supported Time Zones
     *
     * @description Returns information about the currently supported time zones
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["TimeZone"][];
          };
        };
      };
    };
  };
  "/v1/user/change-password": {
    /**
     * Changes the user account password.
     *
     * @description Changes the account password for a currently authenticated user.
     */
    post: {
      /** @description Current account password and new password. */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ChangePassword"];
        };
      };
      responses: {
        /** @description Password for user successfully changed. */
        202: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/user/preferences/settings/{keyId}": {
    /**
     * Get the user preferences for the authenticated user and key.
     *
     * @description Gets the user preferences for the authenticated user and key.
     */
    get: {
      parameters: {
        path: {
          /** @description user setting to be retrieved */
          keyId: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["UserPreferencesSettings"];
          };
        };
      };
    };
  };
  "/v1/user/preferences/{keyId}": {
    /**
     * Get the user setting for the authenticated user and key
     *
     * @description Gets the user setting for the authenticated user and key.
     */
    get: {
      parameters: {
        path: {
          /** @description user setting to be retrieved */
          keyId: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["UserPreferencesJson"];
          };
        };
      };
    };
    /**
     * Persist the user setting
     *
     * @description Persists the user setting
     */
    put: {
      parameters: {
        path: {
          /** @description unique key of user setting to be persisted */
          keyId: string;
        };
      };
      /** @description user setting value to be persisted */
      requestBody?: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      responses: {
        /** @description setting successfully updated */
        200: {
          content: {
            "application/json": components["schemas"]["UserPreferencesJson"];
          };
        };
      };
    };
    /**
     * Remove specified setting for authenticated user
     *
     * @description Remove specified setting for authenticated user
     */
    delete: {
      parameters: {
        path: {
          /** @description unique key of user setting to be persisted */
          keyId: string;
        };
      };
      responses: {
        /** @description setting was deleted */
        204: {
          content: never;
        };
      };
    };
  };
  "/v1/users/{id}/recalculate-smart-groups": {
    /**
     * Recalculate a smart group for the given user id and then return the count of smart groups the user falls into
     *
     * @description Recalculates a smart group for the given user id and then
     * returns the count of smart groups the user falls into
     */
    post: {
      parameters: {
        path: {
          /** @description id of user */
          id: number;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["RecalculationResults"];
          };
        };
        /** @description smart group not found */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/volume-purchasing-locations": {
    /**
     * Retrieve Volume Purchasing Locations
     * @description Retrieves Volume Purchasing Locations
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter Volume Purchasing Location collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name, appleId, organizationName, tokenExpiration, countryCode, locationName, automaticallyPopulatePurchasedContent, and sendNotificationWhenNoLongerAssigned. This param can be combined with paging and sorting. */
          filter?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["VolumePurchasingLocations"];
          };
        };
      };
    };
    /**
     * Create a Volume Purchasing Location
     * @description Creates a Volume Purchasing Location using an sToken
     */
    post: {
      /** @description Volume Purchasing Location to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["VolumePurchasingLocationPost"];
        };
      };
      responses: {
        /** @description Volume Purchasing Location was created */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/volume-purchasing-locations/{id}": {
    /**
     * Retrieve a Volume Purchasing Location with the supplied id
     * @description Retrieves a Volume Purchasing Location with the supplied id
     */
    get: {
      parameters: {
        path: {
          /** @description Volume Purchasing Location identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["VolumePurchasingLocation"];
          };
        };
        /** @description Volume Purchasing Location with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete a Volume Purchasing Location with the supplied id
     * @description Deletes a Volume Purchasing Location with the supplied id
     */
    delete: {
      parameters: {
        path: {
          /** @description Volume Purchasing Location identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        204: {
          content: never;
        };
        /** @description Specified Volume Purchasing Location object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update a Volume Purchasing Location
     * @description Updates a Volume Purchasing Location
     */
    patch: {
      parameters: {
        path: {
          /** @description Volume Purchasing Location identifier */
          id: string;
        };
      };
      /** @description Volume Purchasing Location to update */
      requestBody: {
        content: {
          "application/merge-patch+json": components["schemas"]["VolumePurchasingLocationPatch"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["VolumePurchasingLocation"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Volume Purchasing Location with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description There was an error applying the patch */
        422: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/volume-purchasing-locations/{id}/content": {
    /**
     * Retrieve the Volume Purchasing Content for the Volume Purchasing Location with the supplied id
     * @description Retrieves the Volume Purchasing Content for the Volume Purchasing Location with the supplied id
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter Volume Purchasing Content collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: name, licenseCountTotal, licenseCountInUse, licenseCountReported, contentType, and pricingParam. This param can be combined with paging and sorting. */
          filter?: string;
        };
        path: {
          /** @description Volume Purchasing Location identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["VolumePurchasingContentList"];
          };
        };
        /** @description Volume Purchasing Location with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/volume-purchasing-locations/{id}/history": {
    /**
     * Get specified Volume Purchasing Location history object
     *
     * @description Gets specified Volume Purchasing Location history object
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15 */
          filter?: string;
        };
        path: {
          /** @description instance id of Volume Purchasing Location history record */
          id: string;
        };
      };
      responses: {
        /** @description Details of Volume Purchasing Location history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
        /** @description Specified Volume Purchasing Location object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Add specified Volume Purchasing Location history object notes
     *
     * @description Adds specified Volume Purchasing Location history object notes
     */
    post: {
      parameters: {
        path: {
          /** @description instance id of Volume Purchasing Location history record */
          id: string;
        };
      };
      /** @description history note to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of Volume Purchase Location history were added */
        201: {
          content: {
            "application/json": components["schemas"]["ObjectHistory"];
          };
        };
        /** @description Specified Volume Purchase Location object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Volume Purchase Location history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/volume-purchasing-locations/{id}/reclaim": {
    /**
     * Reclaim a Volume Purchasing Location with the supplied id
     * @description Reclaims a Volume Purchasing Location with the supplied id
     */
    post: {
      parameters: {
        path: {
          /** @description Volume Purchasing Location identifier */
          id: string;
        };
      };
      responses: {
        /** @description Request accepted */
        202: {
          content: never;
        };
      };
    };
  };
  "/v1/volume-purchasing-locations/{id}/revoke-licenses": {
    /**
     * Revoke licenses for a Volume Purchasing Location with the supplied id
     * @description Revokes licenses for a Volume Purchasing Location with the supplied id. The licenses must be revokable - any asset whose licenses are irrevocable will not be revoked.
     */
    post: {
      parameters: {
        path: {
          /** @description Volume Purchasing Location identifier */
          id: string;
        };
      };
      responses: {
        /** @description Request accepted */
        202: {
          content: never;
        };
        /** @description Volume Purchasing Location with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/volume-purchasing-subscriptions": {
    /**
     * Retrieve Volume Purchasing Subscriptions
     * @description Retrieves Volume Purchasing Subscriptions
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Allowable properties are id, name, and enabled. */
          sort?: string[];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["VolumePurchasingSubscriptions"];
          };
        };
      };
    };
    /**
     * Create a Volume Purchasing Subscription
     * @description Creates a Volume Purchasing Subscription
     */
    post: {
      /** @description Volume Purchasing Subscription to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["VolumePurchasingSubscriptionBase"];
        };
      };
      responses: {
        /** @description Volume Purchasing Subscription was created */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Failed to create volume purchasing subscription */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/volume-purchasing-subscriptions/{id}": {
    /**
     * Retrieve a Volume Purchasing Subscription with the supplied id
     * @description Retrieves a Volume Purchasing Subscription with the supplied id
     */
    get: {
      parameters: {
        path: {
          /** @description Volume Purchasing Subscription identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["VolumePurchasingSubscription"];
          };
        };
        /** @description Volume Purchasing Subscription with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update a Volume Purchasing Subscription
     * @description Updates a Volume Purchasing Subscription
     */
    put: {
      parameters: {
        path: {
          /** @description Volume Purchasing Subscription identifier */
          id: string;
        };
      };
      /** @description Volume Purchasing Subscription to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["VolumePurchasingSubscriptionBase"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["VolumePurchasingSubscription"];
          };
        };
        /** @description Volume Purchasing Subscription with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Failed to update volume purchasing subscription */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete a Volume Purchasing Subscription with the supplied id
     * @description Deletes a Volume Purchasing Subscription with the supplied id
     */
    delete: {
      parameters: {
        path: {
          /** @description Volume Purchasing Subscription identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        204: {
          content: never;
        };
        /** @description VPP Subscription with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v1/volume-purchasing-subscriptions/{id}/history": {
    /**
     * Get specified Volume Purchasing Subscription history object
     *
     * @description Gets specified Volume Purchasing Subscription history object
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15 */
          filter?: string;
        };
        path: {
          /** @description Volume Purchasing Subscription Id */
          id: string;
        };
      };
      responses: {
        /** @description Details of Volume Purchasing Subscription history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
        /** @description Specified Volume Purchasing Subscription object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Add Volume Purchasing Subscription history object notes
     *
     * @description Adds Volume Purchasing Subscription history object notes
     */
    post: {
      parameters: {
        path: {
          /** @description Volume Purchasing Subscription Id */
          id: string;
        };
      };
      /** @description History notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of Volume Purchasing Subscription history were added */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Invalid Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Volume Purchasing Subscription with that Id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Volume Purchasing Subscription history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/account-preferences": {
    /**
     * Get Jamf Pro account preferences
     *
     * @description Get Jamf Pro account preferences
     */
    get: {
      parameters: {
        header?: {
          /** @description Locale to be used. */
          "Accept-Language"?: string;
        };
      };
      responses: {
        /** @description Successful response - Jamf Pro Account Preferences retrieved */
        200: {
          content: {
            "application/json": components["schemas"]["AccountPreferencesV5"];
          };
        };
      };
    };
    /**
     * Update Jamf Pro account preferences
     *
     * @description Update Jamf Pro account preferences
     */
    patch: {
      parameters: {
        header?: {
          /** @description Locale to be used, when user has not defined preferred language. */
          "Accept-Language"?: string;
        };
        cookie?: {
          /** @description Session cookie, that's used to determine user session where account preferences should be refreshed */
          JSESSIONID?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AccountPreferencesV5"];
        };
      };
      responses: {
        /** @description Successful response - Jamf Pro Account Preferences updated */
        200: {
          content: {
            "application/json": components["schemas"]["AccountPreferencesV5"];
          };
        };
        /** @description Jamf Pro account preferences not valid */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/cloud-ldaps": {
    /**
     * Create Cloud Identity Provider configuration
     * @description Create new Cloud Identity Provider configuration with unique display name. If mappings not provided, then defaults will be generated instead.
     */
    post: {
      /** @description Cloud Identity Provider configuration to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["LdapConfigurationRequest"];
        };
      };
      responses: {
        /** @description Cloud Identity Provider configuration created */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Cloud Identity Provider configuration cannot be saved. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/cloud-ldaps/defaults/{provider}/mappings": {
    /**
     * Get default mappings
     * @description Get default mappings for Cloud Identity Provider Provider.
     */
    get: {
      parameters: {
        path: {
          /**
           * @description Cloud Identity Provider name
           * @example google
           */
          provider: string;
        };
      };
      responses: {
        /** @description Default mappings returned. */
        200: {
          content: {
            "application/json": components["schemas"]["CloudLdapMappingsResponse"];
          };
        };
        /** @description Files cannot be loaded. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description The provider name in the URL is invalid or not supported. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/cloud-ldaps/defaults/{provider}/server-configuration": {
    /**
     * Get default server configuration
     * @description Get default server configuration for Cloud Identity Provider Identity Provider.
     */
    get: {
      parameters: {
        path: {
          /**
           * @description Cloud Identity Provider name
           * @example google
           */
          provider: string;
        };
      };
      responses: {
        /** @description Default server configuration returned. */
        200: {
          content: {
            "application/json": components["schemas"]["CloudLdapServerResponse"];
          };
        };
        /** @description Default server configuration cannot be loaded. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description The provider name in the URL is invalid or not supported. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/cloud-ldaps/{id}": {
    /**
     * Get Cloud Identity Provider configuration with given id.
     * @description Get Cloud Identity Provider configuration with given id.
     */
    get: {
      parameters: {
        path: {
          /** @description Cloud Identity Provider identifier */
          id: string;
        };
      };
      responses: {
        /** @description Cloud Identity Provider configuration returned. */
        200: {
          content: {
            "application/json": components["schemas"]["LdapConfigurationResponse"];
          };
        };
        /** @description Id can only be a number. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Specified Cloud Identity Provider configuration does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update Cloud Identity Provider configuration
     * @description Update Cloud Identity Provider configuration. Cannot be used for partial updates, all content body must be sent.
     */
    put: {
      parameters: {
        path: {
          /** @description Cloud Identity Provider identifier */
          id: string;
        };
      };
      /** @description Cloud Identity Provider configuration to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["LdapConfigurationUpdate"];
        };
      };
      responses: {
        /** @description Cloud Identity Provider configuration updated */
        200: {
          content: {
            "application/json": components["schemas"]["LdapConfigurationResponse"];
          };
        };
        /** @description One or more parameters were invalid. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Cloud Identity Provider configuration does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description The request URL configuration id value does not match the id value in the request body. */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete Cloud Identity Provider configuration.
     * @description Delete Cloud Identity Provider configuration.
     */
    delete: {
      parameters: {
        path: {
          /** @description Cloud Identity Provider identifier */
          id: string;
        };
      };
      responses: {
        /** @description Cloud Identity Provider configuration deleted. */
        204: {
          content: never;
        };
        /** @description Id can only be a number. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Cloud Identity Provider configuration does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/cloud-ldaps/{id}/connection/bind": {
    /**
     * Get bind connection pool statistics
     * @description Get all search connection pool for chosen Cloud Identity Provider.
     * numConnectionsClosedDefunct - The number of connections that have been closed as defunct.
     * numConnectionsClosedExpired - The number of connections that have been closed because they were expired.
     * numConnectionsClosedUnneeded - The number of connections that have been closed because they were no longer needed.
     * numFailedCheckouts - The number of failed attempts to check out a connection from the pool.
     * numFailedConnectionAttempts - The number of failed attempts to create a connection for use in the pool.
     * numReleasedValid - The number of valid connections released back to the pool.
     * numSuccessfulCheckouts - The number of successful attempts to check out a connection from the pool.
     * numSuccessfulCheckoutsNewConnection - The number of successful checkout attempts that had to create a new connection because none were available.
     * numSuccessfulConnectionAttempts - The number successful attempts to create a connection for use in the pool.
     * maximumAvailableConnections - The maximum number of connections that may be available in the pool at any time.
     * numSuccessfulCheckoutsWithoutWait - The number of successful checkout attempts that were able to take an existing connection without waiting.
     * numSuccessfulCheckoutsAfterWait - The number of successful checkout attempts that retrieved a connection from the pool after waiting for it to become available.
     * numAvailableConnections - The number of connections currently available for use in the pool.
     */
    get: {
      parameters: {
        path: {
          /** @description Cloud Identity Provider identifier */
          id: string;
        };
      };
      responses: {
        /** @description Cloud Identity Provider bind connection pool statistics returned. */
        200: {
          content: {
            "application/json": components["schemas"]["CloudLdapConnectionPoolStatistics"];
          };
        };
        /** @description Bind connection pool statistics data is not available. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Cloud Identity Provider bind connection pool statistics does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/cloud-ldaps/{id}/connection/search": {
    /**
     * Get search connection pool statistics
     * @description Get all search connection pool for chosen Cloud Identity Provider.
     * numConnectionsClosedDefunct - The number of connections that have been closed as defunct.
     * numConnectionsClosedExpired - The number of connections that have been closed because they were expired.
     * numConnectionsClosedUnneeded - The number of connections that have been closed because they were no longer needed.
     * numFailedCheckouts - The number of failed attempts to check out a connection from the pool.
     * numFailedConnectionAttempts - The number of failed attempts to create a connection for use in the pool.
     * numReleasedValid - The number of valid connections released back to the pool.
     * numSuccessfulCheckouts - The number of successful attempts to check out a connection from the pool.
     * numSuccessfulCheckoutsNewConnection - The number of successful checkout attempts that had to create a new connection because none were available.
     * numSuccessfulConnectionAttempts - The number successful attempts to create a connection for use in the pool.
     * maximumAvailableConnections - The maximum number of connections that may be available in the pool at any time.
     * numSuccessfulCheckoutsWithoutWait - The number of successful checkout attempts that were able to take an existing connection without waiting.
     * numSuccessfulCheckoutsAfterWait - The number of successful checkout attempts that retrieved a connection from the pool after waiting for it to become available.
     * numAvailableConnections - The number of connections currently available for use in the pool.
     */
    get: {
      parameters: {
        path: {
          /** @description Cloud Identity Provider identifier */
          id: string;
        };
      };
      responses: {
        /** @description Cloud Identity Provider search connection pool statistics returned. */
        200: {
          content: {
            "application/json": components["schemas"]["CloudLdapConnectionPoolStatistics"];
          };
        };
        /** @description Search connection pool statistics data is not available. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Cloud Identity Provider search connection pool statistics does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/cloud-ldaps/{id}/connection/status": {
    /**
     * Tests the communication with the specified cloud connection
     *
     * @description Tests the communication with the specified cloud connection
     */
    get: {
      parameters: {
        path: {
          /** @description Cloud Identity Provider identifier */
          id: string;
        };
      };
      responses: {
        /** @description Successfully connected to the specified cloud connection */
        200: {
          content: {
            "application/json": components["schemas"]["CloudLdapConnectionStatus"];
          };
        };
        /** @description One or more parameters were invalid. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Cloud Identity Provider does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/cloud-ldaps/{id}/mappings": {
    /**
     * Get mappings configurations for Cloud Identity Providers server configuration.
     * @description Get all mappings configurations for Cloud Identity Providers server configuration.
     */
    get: {
      parameters: {
        path: {
          /** @description Cloud Identity Provider identifier */
          id: string;
        };
      };
      responses: {
        /** @description Cloud Identity Provider mappings configuration returned. */
        200: {
          content: {
            "application/json": components["schemas"]["CloudLdapMappingsResponse"];
          };
        };
        /** @description Id can only be a number. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Specified mappings settings for Cloud Identity Provider configuration do not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update Cloud Identity Provider mappings configuration.
     * @description Update Cloud Identity Provider mappings configuration. Cannot be used for partial updates, all content body must be sent.
     */
    put: {
      parameters: {
        path: {
          /** @description Cloud Identity Provider identifier */
          id: string;
        };
      };
      /** @description Cloud Identity Provider mappings to update. */
      requestBody: {
        content: {
          "application/json": components["schemas"]["CloudLdapMappingsRequest"];
        };
      };
      responses: {
        /** @description Cloud Identity Provider mappings configuration updated. */
        200: {
          content: {
            "application/json": components["schemas"]["CloudLdapMappingsResponse"];
          };
        };
        /** @description One or more parameters were invalid. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Specified Cloud Identity Provider configuration does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Cloud Identity Provider id from request path do not match id in request body. */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/computer-prestages": {
    /**
     * Get sorted and paged Computer Prestages
     *
     * @deprecated
     * @description Gets sorted and paged computer prestages
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["ComputerPrestageSearchResultsV2"];
          };
        };
      };
    };
    /**
     * Create a Computer Prestage
     *
     * @deprecated
     * @description Create a computer prestage
     */
    post: {
      /** @description Computer Prestage to create. ids defined in this body will be ignored */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PostComputerPrestageV2"];
        };
      };
      responses: {
        /** @description Computer Prestage was created */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/computer-prestages/scope": {
    /**
     * Get all device Scope for all Computer Prestages
     *
     * @description Get all device scope for all computer prestages
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageScopeV2"];
          };
        };
      };
    };
  };
  "/v2/computer-prestages/{id}": {
    /**
     * Retrieve a Computer Prestage with the supplied id
     *
     * @deprecated
     * @description Retrieves a Computer Prestage with the supplied id
     */
    get: {
      parameters: {
        path: {
          /** @description Computer Prestage identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GetComputerPrestageV2"];
          };
        };
        /** @description Computer Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update a Computer Prestage
     *
     * @deprecated
     * @description Updates a Computer Prestage
     */
    put: {
      parameters: {
        path: {
          /** @description Computer Prestage identifier */
          id: string;
        };
      };
      /** @description Computer Prestage to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PutComputerPrestageV2"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GetComputerPrestageV2"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Computer Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description The Computer Prestage was modified by another process. Read the Computer Prestage again for updated changes. */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete a Computer Prestage with the supplied id
     *
     * @deprecated
     * @description Deletes a Computer Prestage with the supplied id
     */
    delete: {
      parameters: {
        path: {
          /** @description Computer Prestage identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        204: {
          content: never;
        };
      };
    };
  };
  "/v2/computer-prestages/{id}/scope": {
    /**
     * Get device Scope for a specific Computer Prestage
     *
     * @description Get device scope for a specific computer prestage
     */
    get: {
      parameters: {
        path: {
          /** @description Computer Prestage identifier */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageScopeResponseV2"];
          };
        };
        /** @description Computer Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Replace device Scope for a specific Computer Prestage
     *
     * @description Replace device scope for a specific computer prestage
     */
    put: {
      parameters: {
        path: {
          /** @description Computer Prestage identifier */
          id: string;
        };
      };
      /** @description Serial Numbers to scope */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PrestageScopeUpdate"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageScopeResponseV2"];
          };
        };
        /** @description One or more serial numbers are not valid */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Computer Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Optimistic Lock Error - The prestage you are trying to update has been updated by another process */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Add device Scope for a specific Computer Prestage
     *
     * @description Add device scope for a specific computer prestage
     */
    post: {
      parameters: {
        path: {
          /** @description Computer Prestage identifier */
          id: string;
        };
      };
      /** @description Serial Numbers to scope */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PrestageScopeUpdate"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageScopeResponseV2"];
          };
        };
        /** @description One or more serial numbers are not valid */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Computer Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Optimistic Lock Error - The prestage you are trying to update has been updated by another process */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/computer-prestages/{id}/scope/delete-multiple": {
    /**
     * Remove device Scope for a specific Computer Prestage
     *
     * @description Remove device scope for a specific computer prestage
     */
    post: {
      parameters: {
        path: {
          /** @description Computer Prestage identifier */
          id: string;
        };
      };
      /** @description Serial Numbers to remove from scope */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PrestageScopeUpdate"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageScopeResponseV2"];
          };
        };
        /** @description One or more serial numbers are not valid */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Computer Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Optimistic Lock Error - The prestage you are trying to update has been updated by another process */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/engage": {
    /**
     * Get Engage settings
     *
     * @description Get Engage settings
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["Engage"];
          };
        };
      };
    };
    /**
     * Update Engage settings
     *
     * @description Update Engage settings
     */
    put: {
      /** @description Engage settings object */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Engage"];
        };
      };
      responses: {
        /** @description Engage settings updated */
        200: {
          content: {
            "application/json": components["schemas"]["Engage"];
          };
        };
      };
    };
  };
  "/v2/engage/history": {
    /**
     * Get Engage settings history
     *
     * @description Gets Engage settings history
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15 */
          filter?: string;
        };
      };
      responses: {
        /** @description Details of Engage settings history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
    /**
     * Add Engage settings history notes
     *
     * @description Adds Engage settings history notes
     */
    post: {
      /** @description history notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes to Engage settings history were added */
        201: {
          content: {
            "application/json": components["schemas"]["ObjectHistory"];
          };
        };
        /** @description Engage history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/enrollment": {
    /**
     * Get Enrollment object and Re-enrollment settings
     *
     * @deprecated
     * @description Gets Enrollment object and re-enrollment settings. The settings can be altered without providing the existing management password by providing the following value for `managementPassword`:
     * `\uffff\uffff\uffff\uffff\uffff\uffff\uffff\uffff\uffff\uffff\uffff\uffff\uffff\uffff\uffff`.
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["EnrollmentSettingsV2"];
          };
        };
      };
    };
    /**
     * Update Enrollment object
     *
     * @deprecated
     * @description Update enrollment object. Regarding the `developerCertificateIdentity`,
     * if this object is omitted, the certificate will not be deleted from Jamf Pro.
     * The `identityKeystore` is the entire cert file as a base64 encoded string. The
     * `md5Sum` field is not required in the PUT request, but is calculated and returned
     * in the response.
     */
    put: {
      /** @description Update enrollment */
      requestBody: {
        content: {
          "application/json": components["schemas"]["EnrollmentSettingsV2"];
        };
      };
      responses: {
        /** @description Successfully updated enrollment object */
        200: {
          content: {
            "application/json": components["schemas"]["EnrollmentSettingsV2"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/enrollment-customizations": {
    /**
     * Retrieve sorted and paged Enrollment Customizations
     *
     * @description Retrieves sorted and paged Enrollment Customizations
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["EnrollmentCustomizationSearchResultsV2"];
          };
        };
      };
    };
    /**
     * Create an Enrollment Customization
     *
     * @description Create an enrollment customization
     */
    post: {
      /** @description Enrollment customization to create. */
      requestBody: {
        content: {
          "application/json": components["schemas"]["EnrollmentCustomizationV2"];
        };
      };
      responses: {
        /** @description Enrollment customization was created */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
      };
    };
  };
  "/v2/enrollment-customizations/images": {
    /**
     * Upload an image
     * @description Uploads an image
     */
    post: {
      requestBody: {
        content: {
          "multipart/form-data": {
            /**
             * Format: binary
             * @description The file to upload
             */
            file: string;
          };
        };
      };
      responses: {
        /** @description Image successfully uploaded */
        201: {
          content: {
            "application/json": components["schemas"]["BrandingImageUrl"];
          };
        };
      };
    };
  };
  "/v2/enrollment-customizations/images/{id}": {
    /**
     * Download an enrollment customization image
     *
     * @description Download an enrollment customization image
     */
    get: {
      parameters: {
        path: {
          /** @description id of the enrollment customization image */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "image/*": string;
          };
        };
      };
    };
  };
  "/v2/enrollment-customizations/{id}": {
    /**
     * Retrieve an Enrollment Customization with the supplied id
     *
     * @description Retrieves an Enrollment Customization with the supplied id
     */
    get: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["EnrollmentCustomizationV2"];
          };
        };
        /** @description Enrollment Customization with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update an Enrollment Customization
     *
     * @description Updates an Enrollment Customization
     */
    put: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: string;
        };
      };
      /** @description Enrollment Customization to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["EnrollmentCustomizationV2"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["EnrollmentCustomizationV2"];
          };
        };
        /** @description Enrollment Customization with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete an Enrollment Customization with the supplied id
     *
     * @description Deletes an Enrollment Customization with the supplied id
     */
    delete: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        204: {
          content: never;
        };
      };
    };
  };
  "/v2/enrollment-customizations/{id}/history": {
    /**
     * Get sorted and paged Enrollment Customization history objects
     *
     * @description Gets sorted and paged enrollment customization history objects
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc */
          sort?: string[];
        };
        path: {
          /** @description Enrollment Customization identifier */
          id: string;
        };
      };
      responses: {
        /** @description Details of enrollment customization history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
    /**
     * Add Enrollment Customization history object notes
     *
     * @description Adds enrollment customization history object notes
     */
    post: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: string;
        };
      };
      /** @description History notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of enrollment customization history were added */
        201: {
          content: {
            "application/json": components["schemas"]["ObjectHistory"];
          };
        };
        /** @description Enrollment customization history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/enrollment-customizations/{id}/prestages": {
    /**
     * Retrieve the list of Prestages using this Enrollment Customization
     *
     * @description Retrieves the list of Prestages using this Enrollment Customization
     */
    get: {
      parameters: {
        path: {
          /** @description Enrollment Customization identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageDependencies"];
          };
        };
        /** @description Enrollment Customization with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/enrollment/access-groups": {
    /**
     * Retrieve the configured LDAP groups configured for User-Initiated Enrollment
     *
     * @deprecated
     * @description Retrieves the configured LDAP groups configured for User-Initiated Enrollment.
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /**
           * @description Sorting criteria in the format: `property:asc/desc`. Default sort
           * is `name:asc`. Multiple sort criteria are supported and must be separated
           * with a comma. Example: `sort=date:desc,name:asc`.
           */
          sort?: string[];
          /** @description Return "All LDAP Users" option on the first position if it is present in the current page */
          "all-users-option-first"?: boolean;
        };
      };
      responses: {
        /** @description Found access groups matching search params. */
        200: {
          content: {
            "application/json": components["schemas"]["AccessGroupsV2SearchResults"];
          };
        };
      };
    };
    /**
     * Add the configured LDAP group for User-Initiated Enrollment.
     *
     * @deprecated
     * @description Add the configured LDAP group for User-Initiated Enrollment.
     */
    post: {
      /** @description Configured LDAP group to create. */
      requestBody: {
        content: {
          "application/json": components["schemas"]["EnrollmentAccessGroupV2"];
        };
      };
      responses: {
        /** @description Configured LDAP group record was created. */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description A record with given ldapServerId and name already exists. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/enrollment/access-groups/{serverId}/{groupId}": {
    /**
     * Retrieve the configured LDAP groups configured for User-Initiated Enrollment
     *
     * @deprecated
     * @description Retrieves the configured LDAP groups configured for User-Initiated Enrollment.
     */
    get: {
      parameters: {
        path: {
          /** @description LDAP server id. */
          serverId: string;
          /** @description LDAP group id. */
          groupId: string;
        };
      };
      responses: {
        /** @description Successful query */
        200: {
          content: {
            "application/json": components["schemas"]["EnrollmentAccessGroupV2"];
          };
        };
        /** @description Group not found */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Modify the configured LDAP groups configured for User-Initiated Enrollment
     *
     * @deprecated
     * @description Modifies the configured LDAP groups configured for User-Initiated Enrollment.
     */
    put: {
      parameters: {
        path: {
          /** @description LDAP server id. */
          serverId: string;
          /** @description LDAP group id. */
          groupId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EnrollmentAccessGroupV2"];
        };
      };
      responses: {
        /** @description Successful query */
        200: {
          content: {
            "application/json": components["schemas"]["EnrollmentAccessGroupV2"];
          };
        };
        /** @description Bad request. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete an LDAP group's access to user initiated Enrollment
     *
     * @deprecated
     * @description Deletes an LDAP group's access to user initiated enrollment. The group "All LDAP Users" cannot be deleted, but it can be modified to disallow User-Initiated Enrollment.
     */
    delete: {
      parameters: {
        path: {
          /** @description LDAP server id */
          serverId: string;
          /** @description LDAP group id. */
          groupId: string;
        };
      };
      responses: {
        /** @description Successful deletion */
        204: {
          content: never;
        };
        /** @description Group not found */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/enrollment/filtered-language-codes": {
    /**
     * Retrieve the list of languages and corresponding ISO 639-1 Codes but only those not already added to Enrollment
     *
     * @deprecated
     * @description Retrieves the list of languages and corresponding ISO 639-1 Codes, but only those not already added to Enrollment.
     */
    get: {
      responses: {
        /** @description Retrieves the list of languages and corresponding ISO 639-1 Codes, but only those not already added to Enrollment. */
        200: {
          content: {
            "application/json": components["schemas"]["LanguageCode"][];
          };
        };
      };
    };
  };
  "/v2/enrollment/history": {
    /**
     * Get sorted and paged Enrollment history object
     *
     * @description Gets sorted and paged Enrollment history object
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /**
           * @description Sorting criteria in the format: `property:asc/desc`. Default sort
           * is `date:desc`. Multiple sort criteria are supported and must be separated
           * with a comma. Example: `sort=date:desc,name:asc`.
           */
          sort?: string[];
        };
      };
      responses: {
        /** @description Details of enrollment history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
    /**
     * Add Enrollment history object notes
     *
     * @description Adds Enrollment history object notes
     */
    post: {
      /** @description history notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of enrollment history were added */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Enrollment history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/enrollment/history/export": {
    /**
     * Export enrollment history collection
     *
     * @description Export enrollment history collection
     */
    post: {
      parameters: {
        query?: {
          "export-fields"?: components["parameters"]["export-fields"];
          "export-labels"?: components["parameters"]["export-labels"];
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=id:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. This param can be combined with paging and sorting. Example: name=="*script*" */
          filter?: string;
        };
      };
      /** @description Optional. Override query parameters since they can make URI exceed 2,000 character limit. */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ExportParameters"];
        };
      };
      responses: {
        /** @description Export successful */
        200: {
          content: {
            "text/csv,application/json": unknown;
          };
        };
        /**
         * @description Export fields specified incorrectly - non-existing column or duplicate in the list.
         * Supported columns: id,name,categoryName,categoryId,priority.
         */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Export currently unavailable, all export-related resources are in use. Try again later. */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/enrollment/language-codes": {
    /**
     * Retrieve the list of languages and corresponding ISO 639-1 Codes
     *
     * @deprecated
     * @description Retrieves the list of languages and corresponding ISO 639-1 Codes.
     */
    get: {
      responses: {
        /** @description List of languages and corresponding ISO 639-1 Codes. */
        200: {
          content: {
            "application/json": components["schemas"]["LanguageCode"][];
          };
        };
      };
    };
  };
  "/v2/enrollment/languages": {
    /**
     * Get an array of the language codes that have Enrollment messaging
     *
     * @deprecated
     * @description Returns an array of the language codes that have enrollment messaging currently configured.
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /**
           * @description Sorting criteria in the format: property:asc/desc. Default sort
           * is `languageCode:asc`. Multiple sort criteria are supported and must be separated
           * with a comma. Example: `sort=date:desc,name:asc`.
           */
          sort?: string[];
        };
      };
      responses: {
        /** @description Found languages matching search params. */
        200: {
          content: {
            "application/json": components["schemas"]["ProcessTextsSearchResults"];
          };
        };
      };
    };
  };
  "/v2/enrollment/languages/delete-multiple": {
    /**
     * Delete multiple configured languages from User-Initiated Enrollment settings
     *
     * @deprecated
     * @description Delete multiple configured languages from User-Initiated Enrollment settings
     */
    post: {
      /** @description ids of each language to delete */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Ids"];
        };
      };
      responses: {
        /** @description All languages ids passed in request sucessfully deleted. */
        204: {
          content: never;
        };
        /** @description Request processed.  Returns ids and error codes of any language unable to be deleted.  Expected error codes: INVALID_ID - id does not exist SYSTEM_EXCEPTION - a system exception occurred trying to delete the language. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/enrollment/languages/{languageId}": {
    /**
     * Retrieve the Enrollment messaging for a language
     *
     * @deprecated
     * @description Retrieves the enrollment messaging for a language.
     */
    get: {
      parameters: {
        path: {
          /** @description Two letter ISO 639-1 Language Code */
          languageId: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["EnrollmentProcessTextObject"];
          };
        };
        /** @description Language not found */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Edit Enrollment messaging for a language
     *
     * @deprecated
     * @description Edit enrollment messaging for a language.
     */
    put: {
      parameters: {
        path: {
          /** @description Two letter ISO 639-1 Language Code */
          languageId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EnrollmentProcessTextObject"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["EnrollmentProcessTextObject"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete the Enrollment messaging for a language
     *
     * @deprecated
     * @description Delete the enrollment messaging for a language.
     */
    delete: {
      parameters: {
        path: {
          /** @description Two letter ISO 639-1 Language Code */
          languageId: string;
        };
      };
      responses: {
        /** @description Successful deletetion */
        204: {
          content: never;
        };
        /** @description Language not found */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/inventory-preload/csv": {
    /**
     * Download all Inventory Preload records
     * @description Returns all Inventory Preload records as a CSV file.
     */
    get: {
      responses: {
        /** @description OK */
        200: {
          headers: {
            /** @description A header field named `Content-Disposition` is returned with the file name contained in its value, which is always `inventory-preload-all.csv`. */
            "Content-Disposition"?: string;
          };
          content: {
            "text/csv": string;
          };
        };
      };
    };
    /**
     * Create one or more new Inventory Preload records using CSV
     *
     * @description Create one or more new Inventory Preload records using CSV.
     * A CSV template can be downloaded from /v2/inventory-preload/csv-template.
     * Serial number and device type are required. All other fields are optional.
     * When a matching serial number exists in the Inventory Preload data, the record will be overwritten with the CSV data.
     * If the CSV file contains a new username and an email address is provided, the new user is created in Jamf Pro.
     * If the CSV file contains an existing username, the following user-related fields are updated in Jamf Pro.
     * Full Name,
     * Email Address,
     * Phone Number,
     * Position.
     * This endpoint does not do full validation of each record in the CSV data.
     * To do full validation, use the `/v2/inventory-preload/csv-validate` endpoint first.
     */
    post: {
      requestBody: {
        content: {
          "multipart/form-data": {
            /**
             * @description The CSV file to upload
             * @example serial number,device type,full name
             * serial123,Computer,Test Name
             */
            file: string;
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"][];
          };
        };
        /** @description Validation Failed */
        400: {
          content: {
            "application/json": components["schemas"]["InventoryPreloadCsvValidationError"];
          };
        };
      };
    };
  };
  "/v2/inventory-preload/csv-template": {
    /**
     * Download the Inventory Preload CSV template
     * @description Retrieves the Inventory Preload CSV file template.
     */
    get: {
      responses: {
        /** @description OK */
        200: {
          headers: {
            /** @description A header field named `Content-Disposition` is returned with the file name contained in its value, which is always `inventory-preload-template.csv`. */
            "Content-Disposition"?: string;
          };
          content: {
            "text/csv": string;
          };
        };
      };
    };
  };
  "/v2/inventory-preload/csv-validate": {
    /**
     * Validate a given CSV file
     *
     * @description Validate a given CSV file.
     * Serial number and device type are required. All other fields are optional.
     * A CSV template can be downloaded from `/v2/inventory-preload/csv-template`.
     */
    post: {
      /**
       * @description Inventory Preload records to be validated. A CSV template can
       * be downloaded from `/v2/inventory-preload/csv-template`.
       */
      requestBody: {
        content: {
          "multipart/form-data": {
            /**
             * @description The CSV file to upload
             * @example serial number,device type,full name
             * serial123,Computer,Test Name
             */
            file: string;
          };
        };
      };
      responses: {
        /** @description Ok */
        200: {
          content: {
            "application/json": components["schemas"]["InventoryPreloadCsvValidationSuccess"];
          };
        };
        /** @description Precondition Failed */
        400: {
          content: {
            "application/json": components["schemas"]["InventoryPreloadCsvValidationError"];
          };
        };
      };
    };
  };
  "/v2/inventory-preload/ea-columns": {
    /**
     * Retrieve a list of extension attribute columns
     *
     * @description Retrieve a list of extension attribute columns currently associated
     * with inventory preload records
     */
    get: {
      responses: {
        /** @description Ok */
        200: {
          content: {
            "application/json": components["schemas"]["InventoryPreloadExtensionAttributeColumnResult"];
          };
        };
      };
    };
  };
  "/v2/inventory-preload/export": {
    /**
     * Export a collection of inventory preload records
     *
     * @description Export a collection of inventory preload records
     */
    post: {
      parameters: {
        query?: {
          "export-fields"?: components["parameters"]["export-fields"];
          "export-labels"?: components["parameters"]["export-labels"];
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /**
           * @description Sorting criteria in the format: `property:asc/desc`. Default sort
           * is `id:asc`. Multiple sort criteria are supported and must be separated with
           * a comma. All inventory preload fields are supported, however fields added by
           * extension attributes are not supported. If sorting by deviceType, use `0` for
           * Computer and `1` for Mobile Device.
           *
           * Example: `sort=date:desc,name:asc`.
           */
          sort?: string[];
          /**
           * @description Allowing to filter inventory preload records.
           * Default search is empty query - returning all results for the requested page.
           * All inventory preload fields are supported, however fields added by extension
           * attributes are not supported. If filtering by deviceType, use `0` for Computer
           * and `1` for Mobile Device.
           *
           * Query in the RSQL format, allowing `==`, `!=`, `>`, `<`, and `=in=`.
           *
           * Example: `filter=categoryName=="Category"`
           */
          filter?: string;
        };
      };
      /** @description Optional. Override query parameters since they can make URI exceed 2,000 character limit. */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ExportParameters"];
        };
      };
      responses: {
        /** @description Export successful */
        200: {
          content: {
            "text/csv": unknown;
          };
        };
        /** @description Unable to perform export operation. */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/inventory-preload/history": {
    /**
     * Get Inventory Preload history entries
     *
     * @description Gets Inventory Preload history entries.
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /**
           * @description Sorting criteria in the format: `property:asc/desc`. Default sort
           * is `date:desc`. Multiple sort criteria are supported and must be separated
           * with a comma.
           *
           * Example: `sort=date:desc,name:asc`.
           */
          sort?: string[];
          /**
           * @description Allows filtering inventory preload history records.
           * Default search is empty query - returning all results for the requested page.
           * All inventory preload history fields are supported.
           *
           * Query in the RSQL format, allowing `==`, `!=`, `>`, `<`, and `=in=`.
           *
           * Example: `filter=username=="admin"`
           */
          filter?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
    /**
     * Add Inventory Preload history object notes
     * @description Adds Inventory Preload history object notes.
     */
    post: {
      /** @description History notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of Inventory Preload history were added */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Inventory Preload history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/inventory-preload/records": {
    /**
     * Return all Inventory Preload records
     * @description Returns all Inventory Preload records.
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /**
           * @description Sorting criteria in the format: `property:asc/desc`. Default sort
           * is `id:asc`. Multiple sort criteria are supported and must be separated with
           * a comma. All inventory preload fields are supported, however fields added by
           * extension attributes are not supported. If sorting by deviceType, use `0` for
           * Computer and `1` for Mobile Device.
           *
           * Example: `sort=date:desc,name:asc`.
           */
          sort?: string[];
          /**
           * @description Allowing to filter inventory preload records.
           * Default search is empty query - returning all results for the requested page.
           * All inventory preload fields are supported, however fields added by extension
           * attributes are not supported. If filtering by deviceType, use `0` for Computer
           * and `1` for Mobile Device.
           *
           * Query in the RSQL format, allowing `==`, `!=`, `>`, `<`, and `=in=`.
           *
           * Example: `filter=categoryName=="Category"`
           */
          filter?: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InventoryPreloadRecordSearchResultsV2"];
          };
        };
      };
    };
    /**
     * Create a new Inventory Preload record using JSON
     * @description Create a new Inventory Preload record using JSON.
     */
    post: {
      /** @description Inventory Preload record to be created. */
      requestBody: {
        content: {
          "application/json": components["schemas"]["InventoryPreloadRecordV2"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/inventory-preload/records/delete-all": {
    /**
     * Delete all Inventory Preload records
     *
     * @description Deletes all Inventory Preload records.
     */
    post: {
      responses: {
        /** @description OK */
        204: {
          content: never;
        };
      };
    };
  };
  "/v2/inventory-preload/records/{id}": {
    /**
     * Get an Inventory Preload record
     * @description Retrieves an Inventory Preload record.
     */
    get: {
      parameters: {
        path: {
          /** @description Inventory Preload identifier */
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InventoryPreloadRecordV2"];
          };
        };
        /** @description Inventory Preload record with specified id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update an Inventory Preload record
     * @description Updates an Inventory Preload record.
     */
    put: {
      parameters: {
        path: {
          /** @description Inventory Preload identifier */
          id: string;
        };
      };
      /** @description Inventory Preload record to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["InventoryPreloadRecordV2"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["InventoryPreloadRecordV2"];
          };
        };
        /** @description Inventory Preload record with specified id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete an Inventory Preload record
     *
     * @description Deletes an Inventory Preload record.
     */
    delete: {
      parameters: {
        path: {
          /** @description Inventory Preload identifier */
          id: string;
        };
      };
      responses: {
        /** @description OK */
        204: {
          content: never;
        };
        /** @description Inventory Preload record with specified id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/jamf-package": {
    /**
     * Get the packages for a given Jamf application
     *
     * @description Get the packages for a given Jamf application.
     */
    get: {
      parameters: {
        query: {
          /**
           * @description The Jamf Application key. The only supported values are protect and connect.
           * @example protect
           */
          application: string;
        };
      };
      responses: {
        /** @description Properties for the given application. */
        200: {
          content: {
            "application/json": components["schemas"]["JamfApplicationResponse"];
          };
        };
        /** @description Invalid Content. It is possible that there is no application with the given application id. Or Cloud Services Connection has not been established. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/jamf-pro-information": {
    /**
     * Get basic information about the Jamf Pro Server
     *
     * @description Get basic information about the Jamf Pro Server
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["JamfProInformationV2"];
          };
        };
      };
    };
  };
  "/v2/local-admin-password/pending-rotations": {
    /**
     * Get a list of the current devices and usernames with pending LAPS rotations
     * @description Return information about all devices and usernames currently in the state of a pending LAPS rotation
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["LapsPendingRotationResponse"];
          };
        };
        /** @description Failure, unable to complete lookup. */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/local-admin-password/settings": {
    /**
     * Get the current LAPS settings.
     * @description Return information about the current LAPS settings.
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["LapsSettingsResponseV2"];
          };
        };
        /** @description Failure, unable to complete lookup. */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update settings for LAPS.
     * @description Update settings for LAPS.
     */
    put: {
      /** @description LAPS settings to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["LapsSettingsRequestV2"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["LapsSettingsResponseV2"];
          };
        };
        /** @description Failure, unable to complete lookup. */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/local-admin-password/{clientManagementId}/account/{username}/audit": {
    /**
     * Get LAPS password viewed history.
     * @description Get the full history of all local admin passwords for a specific username on a target device. History will include password, who viewed the password and when it was viewed. Get audit history by using the client management id and username as the path parameters.
     */
    get: {
      parameters: {
        path: {
          /** @description client management id of target device. */
          clientManagementId: string;
          /** @description user name to view audit information for */
          username: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["LapsPasswordAuditsResultsV2"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Failure, unable to complete lookup. */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/local-admin-password/{clientManagementId}/account/{username}/history": {
    /**
     * Get LAPS historical records for target device and username.
     * @description Get the full history of all for a specific username on a target device. History will include date created, date last seen, expiration time, and rotational status. Get audit history by using the client management id and username as the path parameters.
     */
    get: {
      parameters: {
        path: {
          /** @description client management id of target device. */
          clientManagementId: string;
          /** @description user name to view history for */
          username: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["LapsHistoryResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Failure, unable to complete lookup. */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/local-admin-password/{clientManagementId}/account/{username}/password": {
    /**
     * Get current LAPS password for specified username on a client.
     * @description Get current LAPS password for specified client by using the client management id and username as the path parameters. Once the password is viewed it will be rotated out with a new password based on the rotation time settings.
     */
    get: {
      parameters: {
        path: {
          /** @description client management id of target device. */
          clientManagementId: string;
          /** @description user name for the account */
          username: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["LapsPasswordResponseV2"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Failure, unable to complete lookup. */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/local-admin-password/{clientManagementId}/accounts": {
    /**
     * Get the LAPS capable admin accounts for a device.
     * @description Get a full list of admin accounts that are LAPS capable. Capable accounts are returned in the AutoSetupAdminAccounts from QueryResponses.
     */
    get: {
      parameters: {
        path: {
          /** @description client management id of target device. */
          clientManagementId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["LapsUserResultsV2"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Failure, unable to complete lookup. */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/local-admin-password/{clientManagementId}/history": {
    /**
     * Get LAPS password viewed history, and rotation history.
     * @description Get the full history of all local admin passwords for all accounts for a specific management ID. History will include password, who viewed the password and when it was viewed. This will include rotation history as well.
     */
    get: {
      parameters: {
        path: {
          /** @description client management id of target device. */
          clientManagementId: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["LapsAccountManagementHistoryResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Failure, unable to complete lookup. */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/local-admin-password/{clientManagementId}/set-password": {
    /**
     * Set the LAPS password for a device.
     * @description Set the LAPS password for a device. This will set the password for all LAPS capable accounts.
     */
    put: {
      parameters: {
        path: {
          /** @description client management id of target device. */
          clientManagementId: string;
        };
      };
      /** @description LAPS password to set */
      requestBody: {
        content: {
          "application/json": components["schemas"]["LapsUserPasswordRequestV2"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["LapsUserPasswordResponseV2"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Failure, unable to update passwords */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/mdm/commands": {
    /**
     * Get information about mdm commands made by Jamf Pro.
     *
     * @description Get information about mdm commands made by Jamf Pro.
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Default sort is dateSent:asc. Multiple sort criteria are supported and must be separated with a comma. */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter, for a list of commands. All url must contain minimum one filter field. Fields allowed in the query: uuid, clientManagementId, command, status, clientType, dateSent, validAfter, dateCompleted, profileIdentifier, and active. This param can be combined with paging. Please note that any date filters must be used with gt, lt, ge, le Example: clientManagementId==fb511aae-c557-474f-a9c1-5dc845b90d0f;status==Pending;command==INSTALL_PROFILE;uuid==9e18f849-e689-4f2d-b616-a99d3da7db42;clientType==COMPUTER_USER;profileIdentifier==18cc61c2-01fc-11ed-b939-0242ac120002;dateCompleted=ge=2021-08-04T14:25:18.26Z;dateCompleted=le=2021-08-04T14:25:18.26Z;validAfter=ge=2021-08-05T14:25:18.26Z;active==true */
          filter?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["MdmCommandResults"];
          };
        };
        /** @description Failure, unable to complete lookup. */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Post a command for creation and queuing
     *
     * @description Provided an MDM command type and appropriate information, will create and then queue said command.
     */
    post: {
      /** @description The mdm command object to create and queue */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["MdmCommandRequest"];
        };
      };
      responses: {
        /** @description Success */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"][];
          };
        };
        /** @description Failure, unable to queue command. */
        500: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/mobile-device-prestages": {
    /**
     * Get sorted and paged Mobile Device Prestages
     *
     * @description Gets sorted and paged mobile device prestages
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["MobileDevicePrestageSearchResultsV2"];
          };
        };
      };
    };
    /**
     * Create a Mobile Device Prestage
     *
     * @description Create a mobile device prestage
     */
    post: {
      /** @description Mobile Device Prestage to create. ids defined in this body will be ignored */
      requestBody: {
        content: {
          "application/json": components["schemas"]["MobileDevicePrestageV2"];
        };
      };
      responses: {
        /** @description Mobile Device Prestage was created */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
      };
    };
  };
  "/v2/mobile-device-prestages/scope": {
    /**
     * Get all Device Scope for all Mobile Device Prestages
     *
     * @description Get all device scope for all mobile device prestages
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageScopeV2"];
          };
        };
      };
    };
  };
  "/v2/mobile-device-prestages/syncs": {
    /**
     * Get all Prestage sync States for all prestages
     *
     * @description Get all prestage sync states for all prestages
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageSyncStatusV2"][];
          };
        };
      };
    };
  };
  "/v2/mobile-device-prestages/{id}": {
    /**
     * Retrieve a Mobile Device Prestage with the supplied id
     *
     * @description Retrieves a Mobile Device Prestage with the supplied id
     */
    get: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GetMobileDevicePrestageV2"];
          };
        };
        /** @description Mobile Device Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update a Mobile Device Prestage
     *
     * @description Updates a Mobile Device Prestage
     */
    put: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: string;
        };
      };
      /** @description Mobile Device Prestage to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PutMobileDevicePrestageV2"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GetMobileDevicePrestageV2"];
          };
        };
        /** @description Mobile Device Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description The Mobile Device Prestage was modified by another process. Read the Mobile Device Prestage again for updated changes. */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete a Mobile Device Prestage with the supplied id
     *
     * @description Deletes a Mobile Device Prestage with the supplied id
     */
    delete: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        204: {
          content: never;
        };
      };
    };
  };
  "/v2/mobile-device-prestages/{id}/attachments": {
    /**
     * Get attachments for a Mobile Device Prestage
     *
     * @description Get attachments for a Mobile Device Prestage
     */
    get: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["FileAttachmentV2"][];
          };
        };
        /** @description Mobile Device Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Add an attachment to a Mobile Device Prestage
     *
     * @description Add an attachment to a Mobile Device prestage
     */
    post: {
      parameters: {
        path: {
          /** @description Identifier of the Mobile Device Prestage the attachment should be assigned to */
          id: string;
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            /**
             * Format: binary
             * @description The file to upload
             */
            file: string;
          };
        };
      };
      responses: {
        /** @description Success */
        201: {
          content: {
            "application/json": components["schemas"]["PrestageFileAttachmentV2"];
          };
        };
        /** @description Mobile Device Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Payload Too Large */
        413: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/mobile-device-prestages/{id}/attachments/delete-multiple": {
    /**
     * Remove an attachment for a Mobile Device Prestage
     *
     * @description Remove an attachment for a Mobile Device Prestage
     */
    post: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Ids"];
        };
      };
      responses: {
        /** @description Success */
        204: {
          content: never;
        };
      };
    };
  };
  "/v2/mobile-device-prestages/{id}/history": {
    /**
     * Get sorted and paged Mobile Device Prestage history objects
     *
     * @description Gets sorted and paged mobile device prestage history objects
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc */
          sort?: string[];
        };
        path: {
          /** @description Mobile Device Prestage identifier */
          id: string;
        };
      };
      responses: {
        /** @description Details of mobile device prestage history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
    /**
     * Add Mobile Device Prestage history object notes
     *
     * @description Adds mobile device prestage history object notes
     */
    post: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: string;
        };
      };
      /** @description History notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of mobile deivce prestage history were added */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Mobile device prestage history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/mobile-device-prestages/{id}/scope": {
    /**
     * Get Device Scope for a specific Mobile Device Prestage
     *
     * @description Get device scope for a specific mobile device prestage
     */
    get: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageScopeResponseV2"];
          };
        };
        /** @description Mobile Device Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Replace Device Scope for a specific Mobile Device Prestage
     *
     * @description Replace device scope for a specific mobile device prestage
     */
    put: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: string;
        };
      };
      /** @description Serial Numbers to scope */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PrestageScopeUpdate"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageScopeResponseV2"];
          };
        };
        /** @description One or more serial numbers are not valid */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Mobile Device Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Optimistic Lock Error - The prestage you are trying to update has been updated by another process */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Add Device Scope for a specific Mobile Device Prestage
     *
     * @description Add device scope for a specific mobile device prestage
     */
    post: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: string;
        };
      };
      /** @description Serial Numbers to scope */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PrestageScopeUpdate"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageScopeResponseV2"];
          };
        };
        /** @description One or more serial numbers are not valid */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Mobile Device Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Optimistic Lock Error - The prestage you are trying to update has been updated by another process */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/mobile-device-prestages/{id}/scope/delete-multiple": {
    /**
     * Remove Device Scope for a specific Mobile Device Prestage
     *
     * @description Remove device scope for a specific mobile device prestage
     */
    post: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: string;
        };
      };
      /** @description Serial Numbers to remove from scope */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PrestageScopeUpdate"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageScopeResponseV2"];
          };
        };
        /** @description One or more serial numbers are not valid */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Mobile Device Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Optimistic Lock Error - The prestage you are trying to update has been updated by another process */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/mobile-device-prestages/{id}/syncs": {
    /**
     * Get all prestage sync states for a single prestage
     *
     * @description Get all prestage sync states for a single prestage
     */
    get: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageSyncStatusV2"][];
          };
        };
      };
    };
  };
  "/v2/mobile-device-prestages/{id}/syncs/latest": {
    /**
     * Get the latest Sync State for a single Prestage
     *
     * @description Get the latest sync state for a single prestage
     */
    get: {
      parameters: {
        path: {
          /** @description Mobile Device Prestage identifier */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["PrestageSyncStatusV2"];
          };
        };
      };
    };
  };
  "/v2/mobile-devices": {
    /**
     * Get Mobile Device objects
     *
     * @description Gets Mobile Device objects.
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["MobileDeviceSearchResultsV2"];
          };
        };
      };
    };
  };
  "/v2/mobile-devices/detail": {
    /**
     * Return paginated Mobile Device Inventory records
     * @description Return paginated Mobile Device Inventory records
     */
    get: {
      parameters: {
        query?: {
          /** @description section of mobile device details, if not specified, General section data is returned. Multiple section parameters are supported, e.g. section=GENERAL&section=HARDWARE */
          section?: components["schemas"]["MobileDeviceSection"][];
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /**
           * @description Sorting criteria in the format: property:asc/desc. Default sort
           * is displayName:asc. Multiple sort criteria are supported and must be separated with
           * a comma.
           *
           * Fields allowed in the sort: `airPlayPassword`, `appAnalyticsEnabled`, `assetTag`, `availableSpaceMb`,
           * `batteryLevel`, `bluetoothLowEnergyCapable`, `bluetoothMacAddress`, `capacityMb`,
           * `lostModeEnabledDate`, `declarativeDeviceManagementEnabled`, `deviceId`, `deviceLocatorServiceEnabled`,
           * `devicePhoneNumber`, `diagnosticAndUsageReportingEnabled`, `displayName`, `doNotDisturbEnabled`,
           * `enrollmentSessionTokenValid`, `exchangeDeviceId`, `cloudBackupEnabled`, `osBuild`,
           * `osSupplementalBuildVersion`, `osVersion`, `osRapidSecurityResponse`, `ipAddress`, `itunesStoreAccountActive`,
           * `mobileDeviceId`, `languages`, `lastBackupDate`, `lastEnrolledDate`, `lastCloudBackupDate`,
           * `lastInventoryUpdateDate`, `locales`, `locationServicesForSelfServiceMobileEnabled`, `lostModeEnabled`,
           * `managed`, `mdmProfileExpirationDate`, `model`, `modelIdentifier`,
           * `modelNumber`, `modemFirmwareVersion`, `quotaSize`, `residentUsers`,
           * `serialNumber`, `sharedIpad`, `supervised`, `tethered`,
           * `timeZone`, `udid`, `usedSpacePercentage`, `wifiMacAddress`,
           * `deviceOwnershipType`, `building`, `department`, `emailAddress`,
           * `fullName`, `userPhoneNumber`, `position`, `room`,
           * `username`, `appleCareId`, `leaseExpirationDate`,`lifeExpectancyYears`,
           * `poDate`, `poNumber`, `purchasePrice`, `purchasedOrLeased`,
           * `purchasingAccount`, `purchasingContact`, `vendor`, `warrantyExpirationDate`,
           * `activationLockEnabled`, `blockEncryptionCapable`, `dataProtection`, `fileEncryptionCapable`,
           * `hardwareEncryptionSupported`, `jailbreakStatus`, `passcodeCompliant`, `passcodeCompliantWithProfile`,
           * `passcodeLockGracePeriodEnforcedSeconds`, `passcodePresent`, `personalDeviceProfileCurrent`, `carrierSettingsVersion`,
           * `cellularTechnology`, `currentCarrierNetwork`, `currentMobileCountryCode`, `currentMobileNetworkCode`,
           * `dataRoamingEnabled`, `eid`, `network`, `homeMobileCountryCode`,
           * `homeMobileNetworkCode`, `iccid`, `imei`, `imei2`,
           * `meid`, `personalHotspotEnabled`, `voiceRoamingEnabled`, `roaming`
           *
           * Example: `sort=displayName:desc,username:asc`
           */
          sort?: string[];
          /**
           * @description Query in the RSQL format, allowing to filter mobile device collection.
           * Default filter is empty query - returning all results for the requested page.
           *
           * Fields allowed in the query: `airPlayPassword`, `appAnalyticsEnabled`, `assetTag`, `availableSpaceMb`,
           * `batteryLevel`, `bluetoothLowEnergyCapable`, `bluetoothMacAddress`, `capacityMb`,
           * `declarativeDeviceManagementEnabled`, `deviceId`, `deviceLocatorServiceEnabled`, `devicePhoneNumber`,
           * `diagnosticAndUsageReportingEnabled`, `displayName`, `doNotDisturbEnabled`, `exchangeDeviceId`,
           * `cloudBackupEnabled`, `osBuild`, `osSupplementalBuildVersion`, `osVersion`, `osRapidSecurityResponse`,
           * `ipAddress`, `itunesStoreAccountActive`, `mobileDeviceId`, `languages`, `locales`,
           * `locationServicesForSelfServiceMobileEnabled`, `lostModeEnabled`, `managed`, `model`,
           * `modelIdentifier`, `modelNumber`, `modemFirmwareVersion`, `quotaSize`,
           * `residentUsers`, `serialNumber`, `sharedIpad`, `supervised`,
           * `tethered`, `timeZone`, `udid`, `usedSpacePercentage`,
           * `wifiMacAddress`, `building`, `department`, `emailAddress`,
           * `fullName`, `userPhoneNumber`, `position`, `room`,
           * `username`, `appleCareId`, `lifeExpectancyYears`, `poNumber`,
           * `purchasePrice`, `purchasedOrLeased`, `purchasingAccount`, `purchasingContact`,
           * `vendor`, `activationLockEnabled`, `blockEncryptionCapable`, `dataProtection`,
           * `fileEncryptionCapable`, `passcodeCompliant`, `passcodeCompliantWithProfile`, `passcodeLockGracePeriodEnforcedSeconds`,
           * `passcodePresent`, `personalDeviceProfileCurrent`, `carrierSettingsVersion`, `currentCarrierNetwork`,
           * `currentMobileCountryCode`, `currentMobileNetworkCode`, `dataRoamingEnabled`, `eid`,
           * `network`, `homeMobileCountryCode`, `homeMobileNetworkCode`, `iccid`,
           * `imei`, `imei2`, `meid`, `personalHotspotEnabled`,
           * `roaming`
           *
           * This param can be combined with paging and sorting.
           * Example: `filter=displayName=="iPad"`
           */
          filter?: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["MobileDeviceInventorySearchResults"];
          };
        };
      };
    };
  };
  "/v2/mobile-devices/{id}": {
    /**
     * Get Mobile Device
     *
     * @description Get MobileDevice
     */
    get: {
      parameters: {
        path: {
          /** @description instance id of mobile device record */
          id: string;
        };
      };
      responses: {
        /** @description Succesful response */
        200: {
          content: {
            "application/json": components["schemas"]["MobileDeviceV2"];
          };
        };
        /** @description Specified mobile device object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update fields on a mobile device that are allowed to be modified by users
     *
     * @description Updates fields on a mobile device that are allowed to be modified by users.
     */
    patch: {
      parameters: {
        path: {
          /** @description instance id of mobile device record */
          id: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["UpdateMobileDeviceV2"];
        };
      };
      responses: {
        /** @description Succesful response */
        200: {
          content: {
            "application/json": components["schemas"]["MobileDeviceDetailsV2"];
          };
        };
        /** @description Account not allowed to modify device */
        403: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Specified mobile device object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/mobile-devices/{id}/detail": {
    /**
     * Get Mobile Device
     *
     * @description Get MobileDevice
     */
    get: {
      parameters: {
        path: {
          /** @description instance id of mobile device record */
          id: string;
        };
      };
      responses: {
        /** @description Succesful response */
        200: {
          content: {
            "application/json": components["schemas"]["MobileDeviceDetailsGetV2"];
          };
        };
        /** @description Specified mobile device object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/patch-management-accept-disclaimer": {
    /**
     * Accept Patch Management disclaimer
     *
     * @description Accept Patch Management disclaimer
     */
    post: {
      responses: {
        /** @description Accepted */
        202: {
          content: never;
        };
      };
    };
  };
  "/v2/patch-policies": {
    /**
     * Retrieve Patch Policies
     * @description Retrieves a list of patch policies.
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter Patch Policy collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, policyName, policyEnabled, policyTargetVersion, policyDeploymentMethod, softwareTitle, softwareTitleConfigurationId, pending, completed, deferred, and failed. This param can be combined with paging and sorting. */
          filter?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["PatchPolicies"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/patch-policies/policy-details": {
    /**
     * Retrieve Patch Policies
     * @description Retrieves a list of patch policies.
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter Patch Policy collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name, enabled, targetPatchVersion, deploymentMethod, softwareTitleId, softwareTitleConfigurationId, killAppsDelayMinutes, killAppsMessage, isDowngrade, isPatchUnknownVersion, notificationHeader, selfServiceEnforceDeadline, selfServiceDeadline, installButtonText, selfServiceDescription, iconId, reminderFrequency, reminderEnabled. This param can be combined with paging and sorting. */
          filter?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["PatchPolicyDetails"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/patch-policies/{id}/dashboard": {
    /**
     * Return whether or not the requested patch policy is on the dashboard
     *
     * @description Returns whether or not the requested patch policy is on the dashboard
     */
    get: {
      parameters: {
        path: {
          /** @description patch policy id */
          id: string;
        };
      };
      responses: {
        /** @description Whether the Patch Policy is on the Dashboard. */
        200: {
          content: {
            "application/json": components["schemas"]["PatchPolicyV2OnDashboard"];
          };
        };
        /** @description The requested Patch Policy does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Add a patch policy to the dashboard
     *
     * @description Adds a patch policy to the dashboard.
     */
    post: {
      parameters: {
        path: {
          /** @description patch policy id */
          id: string;
        };
      };
      responses: {
        /** @description OK */
        204: {
          content: never;
        };
      };
    };
    /**
     * Remove a patch policy from the dashboard
     *
     * @description Removes a patch policy from the dashboard.
     */
    delete: {
      parameters: {
        path: {
          /** @description patch policy id */
          id: string;
        };
      };
      responses: {
        /** @description OK */
        204: {
          content: never;
        };
      };
    };
  };
  "/v2/patch-policies/{id}/logs": {
    /**
     * Retrieve Patch Policy Logs
     *
     * @description Retrieves Patch Policy Logs
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is deviceName:asc. Multiple sort criteria are supported and must be separated with a comma. */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter Patch Policy Logs collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: deviceId, deviceName, statusCode, statusDate, attemptNumber, ignoredForPatchPolicyId. This param can be combined with paging and sorting. */
          filter?: string;
        };
        path: {
          /** @description patch policy id */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["PatchPolicyLogs"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Patch Policy Log with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/patch-policies/{id}/logs/eligible-retry-count": {
    /**
     * Return the count of the Patch Policy Logs for the patch policy id that are eligible for a retry attempt
     *
     * @description return the count of the patch policy logs for the patch policy id that  are eligible for a retry attempt
     */
    get: {
      parameters: {
        path: {
          /** @description patch policy id */
          id: string;
        };
      };
      responses: {
        /** @description Number of patch policy logs found */
        200: {
          content: {
            "application/json": components["schemas"]["PatchPolicyLogEligibleRetryCount"];
          };
        };
      };
    };
  };
  "/v2/patch-policies/{id}/logs/retry": {
    /**
     * Send retry attempts for specific devices
     * @description Send retry attempts for specific devices
     */
    post: {
      parameters: {
        path: {
          /** @description patch policy id */
          id: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["PatchPolicyLogRetry"];
        };
      };
      responses: {
        /** @description OK */
        204: {
          content: never;
        };
      };
    };
  };
  "/v2/patch-policies/{id}/logs/retry-all": {
    /**
     * Send retry attempts for all devices
     * @description Send retry attempts for all devices
     */
    post: {
      parameters: {
        path: {
          /** @description patch policy id */
          id: string;
        };
      };
      responses: {
        /** @description OK */
        202: {
          content: never;
        };
        /** @description OK */
        204: {
          content: never;
        };
      };
    };
  };
  "/v2/patch-policies/{id}/logs/{deviceId}": {
    /**
     * Retrieves a single Patch Policy Log
     *
     * @description Retrieves a single Patch Policy Log
     */
    get: {
      parameters: {
        path: {
          /** @description patch policy id */
          id: string;
          /** @description device id */
          deviceId: string;
        };
      };
      responses: {
        /** @description Patch Policy Log */
        200: {
          content: {
            "application/json": components["schemas"]["PatchPolicyLogV2"];
          };
        };
        /** @description Patch Policy Logs with those ids do not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/patch-policies/{id}/logs/{deviceId}/details": {
    /**
     * Return attempt details for a specific log
     * @description Return attempt details for a specific log
     */
    get: {
      parameters: {
        path: {
          /** @description patch policy id */
          id: string;
          /** @description device id */
          deviceId: string;
        };
      };
      responses: {
        /** @description Attempt details */
        200: {
          content: {
            "application/json": components["schemas"]["PatchPolicyLogDetail"][];
          };
        };
        /** @description Patch Policy Logs with those ids do not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/patch-software-title-configurations": {
    /**
     * Retrieve Patch Software Title Configurations
     * @description Retrieves patch software title configurations
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["PatchSoftwareTitleConfiguration"][];
          };
        };
      };
    };
    /**
     * Create Patch Software Title Configurations
     * @description Creates Patch Software Title Configurations using sToken
     */
    post: {
      /** @description Software title configurations to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PatchSoftwareTitleConfigurationBase"];
        };
      };
      responses: {
        /** @description Patch Software Title Configurations were created */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/patch-software-title-configurations/{id}": {
    /**
     * Retrieve Patch Software Title Configurations with the supplied id
     * @description Retrieves Patch Software Title Configurations with the supplied id
     */
    get: {
      parameters: {
        path: {
          /** @description Patch Software Title Configurations identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["PatchSoftwareTitleConfiguration"];
          };
        };
        /** @description Patch Software Title Configurations with that id do not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete Patch Software Title Configurations with the supplied id
     * @description Deletes Patch Software Title Configurations with the supplied id
     */
    delete: {
      parameters: {
        path: {
          /** @description Patch Software Title Configurations identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        204: {
          content: never;
        };
        /** @description Specified Patch Software Title Configurations object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update Patch Software Title Configurations
     * @description Updates Patch Software Title Configurations
     */
    patch: {
      parameters: {
        path: {
          /** @description Patch Software Title Configurations identifier */
          id: string;
        };
      };
      /** @description Patch Software Title Configurations to update */
      requestBody: {
        content: {
          "application/merge-patch+json": components["schemas"]["PatchSoftwareTitleConfigurationPatch"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["PatchSoftwareTitleConfiguration"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Software Title Configurations with that id do not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description There was an error applying the patch */
        422: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/patch-software-title-configurations/{id}/dashboard": {
    /**
     * Return whether or not the requested software title configuration is on the dashboard
     *
     * @description Returns whether or not the requested software title configuration is on the dashboard
     */
    get: {
      parameters: {
        path: {
          /** @description software title configuration id */
          id: string;
        };
      };
      responses: {
        /** @description Whether the software title configuration is on the Dashboard. */
        200: {
          content: {
            "application/json": components["schemas"]["SoftwareTitleConfigurationOnDashboard"];
          };
        };
        /** @description The requested software title configuration does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Add a software title configuration to the dashboard
     *
     * @description Adds asoftware title configuration to the dashboard.
     */
    post: {
      parameters: {
        path: {
          /** @description software title configuration id */
          id: string;
        };
      };
      responses: {
        /** @description OK */
        204: {
          content: never;
        };
      };
    };
    /**
     * Remove a software title configuration from the dashboard
     *
     * @description Removes a software title configuration from the dashboard.
     */
    delete: {
      parameters: {
        path: {
          /** @description software title configuration id */
          id: string;
        };
      };
      responses: {
        /** @description OK */
        204: {
          content: never;
        };
      };
    };
  };
  "/v2/patch-software-title-configurations/{id}/definitions": {
    /**
     * Retrieve Patch Software Title Definitions with the supplied id
     * @description Retrieves patch software title definitions with the supplied id
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is absoluteOrderId:asc. Multiple sort criteria are supported and must be separated with a comma. */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter Patch Software Title Definition collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, version, minimumOperatingSystem, releaseDate, reboot, standalone and absoluteOrderId. This param can be combined with paging and sorting. */
          filter?: string;
        };
        path: {
          /** @description Patch Software Title identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["PatchSoftwareTitleDefinitions"];
          };
        };
        /** @description Patch Software Title Definitions with that id do not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/patch-software-title-configurations/{id}/dependencies": {
    /**
     * Retrieve list of Patch Software Title Configuration Dependencies
     * @description Retrieve list of Patch Software Title Configuration Dependencies
     */
    get: {
      parameters: {
        path: {
          /** @description Patch Software Title Configuration Id */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["PatchSoftwareTitleConfigurationDependencies"];
          };
        };
      };
    };
  };
  "/v2/patch-software-title-configurations/{id}/export-report": {
    /**
     * Export Patch Reporting Data
     * @description Export Patch Reporting Data
     */
    get: {
      parameters: {
        query: {
          page?: components["parameters"]["page"];
          /** @description Leave blank for full export */
          "page-size"?: number;
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is computerName:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=id:desc,name:asc Supported fields: computerName, deviceId, username, operatingSystemVersion, lastContactTime, buildingName, departmentName, siteName, version */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter Patch Report collection on version equality only. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: version. Comparators allowed in the query: ==, != This param can be combined with paging and sorting. */
          filter?: string;
          /** @description List of column names to export */
          "columns-to-export": string[];
        };
        header?: {
          /** @description File */
          accept?: string;
        };
        path: {
          /** @description Patch Software Title Configurations identifier */
          id: string;
        };
      };
      responses: {
        /** @description Export successful */
        200: {
          content: {
            "text/csv": unknown;
            "text/tab": unknown;
          };
        };
        /** @description Invalid Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Patch Software Title Extension Attributes with that id do not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Incorrect media type specified. */
        415: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Export currently unavailable, all export-related resources are in use. Try again later. */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/patch-software-title-configurations/{id}/extension-attributes": {
    /**
     * Retrieve Software Title Extension Attributes with the supplied id
     * @description Retrieves software title extension attributes with the supplied id
     */
    get: {
      parameters: {
        path: {
          /** @description Patch Software Title identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["PatchSoftwareTitleExtensionAttributes"][];
          };
        };
        /** @description Patch Software Title Extension Attributes with that id do not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/patch-software-title-configurations/{id}/history": {
    /**
     * Get specified Patch Software Title Configuration history object
     *
     * @description Gets specified Patch Software Title Configuration history object
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15 */
          filter?: string;
        };
        path: {
          /** @description Patch Software Title Configuration Id */
          id: string;
        };
      };
      responses: {
        /** @description Details of Patch Software Title Configuration history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
        /** @description Specified Patch Software Title Configuration object does not exist. */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Add Patch Software Title Configuration history object notes
     *
     * @description Adds Patch Software Title Configuration history object notes
     */
    post: {
      parameters: {
        path: {
          /** @description Patch Software Title Configuration Id */
          id: string;
        };
      };
      /** @description History notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of Patch Software Title Configuration history were added */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Invalid Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Patch Software Title Configuration with that Id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Patch Software Title Configuration history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/patch-software-title-configurations/{id}/patch-report": {
    /**
     * Retrieve Patch Software Title Configuration Patch Report
     * @description Retrieve Patch Software Title Configuration Patch Report
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is computerName:asc. Multiple sort criteria are supported and must be separated with a comma. Supported fields: computerName, deviceId, username, operatingSystemVersion, lastContactTime, buildingName, departmentName, siteName, version */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter Patch Report collection on version equality only. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: version. Comparators allowed in the query: ==, != This param can be combined with paging and sorting. */
          filter?: string;
        };
        path: {
          /** @description Patch Software Title Configurations identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["PatchSoftwareTitleReportSearchResult"];
          };
        };
        /** @description Invalid Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Patch Software Title Configuration with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/patch-software-title-configurations/{id}/patch-summary": {
    /**
     * Return Active Patch Summary
     * @description Returns active patch summary.
     */
    get: {
      parameters: {
        path: {
          /** @description Patch id */
          id: string;
        };
      };
      responses: {
        /** @description Active Patch Summary */
        200: {
          content: {
            "application/json": components["schemas"]["PatchSummary"];
          };
        };
        /** @description Invalid Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Patch id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/patch-software-title-configurations/{id}/patch-summary/versions": {
    /**
     * Returns patch versions
     * @description Returns patch versions
     */
    get: {
      parameters: {
        path: {
          /** @description Patch id */
          id: string;
        };
      };
      responses: {
        /** @description Patch versions */
        200: {
          content: {
            "application/json": components["schemas"]["PatchSummaryVersion"][];
          };
        };
        /** @description Invalid Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Patch id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/sso": {
    /**
     * Retrieve the current Single Sign On configuration settings
     *
     * @description Retrieves the current Single Sign On configuration settings
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["SsoSettingsV2"];
          };
        };
      };
    };
    /**
     * Updates the current Single Sign On configuration settings
     *
     * @description Updates the current Single Sign On configuration settings
     */
    put: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["SsoSettingsV2"];
        };
      };
      responses: {
        /** @description The update was successful and the newly updated object is returned. */
        200: {
          content: {
            "application/json": components["schemas"]["SsoSettingsV2"];
          };
        };
        /** @description Bad Request. Either required fields are missing or there was a validation exception. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/sso/cert": {
    /**
     * Retrieve the certificate currently configured for use with SSO
     *
     * @description Retrieves the certificate currently configured for use with SSO.
     */
    get: {
      responses: {
        /** @description Successful operation. */
        200: {
          content: {
            "application/json": components["schemas"]["SsoKeystoreResponseWithDetails"];
          };
        };
      };
    };
    /**
     * Update the certificate used by Jamf Pro to sign SSO requests to the identify provider
     *
     * @description Update the certificate used by Jamf Pro to sign SSO requests to the identify provider.
     */
    put: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["SsoKeystore"];
        };
      };
      responses: {
        /** @description Successfully changed the keystore. */
        200: {
          content: {
            "application/json": components["schemas"]["SsoKeystoreResponseWithDetails"];
          };
        };
        /** @description One or more parameters were invalid. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Jamf Pro will generate a new certificate and use it to sign SSO
     *
     * @description Jamf Pro will generate a new certificate and use it to sign SSO requests to the identity provider.
     */
    post: {
      responses: {
        /** @description Newly generated will be set and returned. */
        200: {
          content: {
            "application/json": components["schemas"]["SsoKeystoreResponseWithDetails"];
          };
        };
      };
    };
    /**
     * Delete the currently configured certificate used by SSO
     *
     * @description Deletes the currently configured certificate used by SSO.
     */
    delete: {
      responses: {
        /** @description Operation successful. */
        204: {
          content: never;
        };
      };
    };
  };
  "/v2/sso/cert/download": {
    /**
     * Download the certificate currently configured for use with Jamf Pro's SSO configuration
     *
     * @description Downloads the certificate currently configured for use with Jamf Pro's SSO configuration
     */
    get: {
      responses: {
        /** @description Request successful */
        200: {
          content: {
            "text/plain": string;
          };
        };
      };
    };
  };
  "/v2/sso/cert/parse": {
    /**
     * Parse the certificate to get details about certificate type and keys needed to upload certificate file
     *
     * @description Parse the certificate to get details about certificate type and keys needed to upload certificate file.
     */
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["SsoKeystoreParse"];
        };
      };
      responses: {
        /** @description Successfully parsed the certificate. */
        200: {
          content: {
            "application/json": components["schemas"]["SsoKeystoreCertParseResponse"];
          };
        };
        /** @description One or more parameters were invalid. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/sso/dependencies": {
    /**
     * Retrieve the list of Enrollment Customizations using SSO
     *
     * @description Retrieves the list of Enrollment Customizations using SSO
     */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["EnrollmentCustomizationDependencies"];
          };
        };
      };
    };
  };
  "/v2/sso/disable": {
    /**
     * Disable SSO
     *
     * @description Disable SSO
     */
    post: {
      responses: {
        /** @description SSO has been disabled */
        202: {
          content: never;
        };
        /** @description SSO object don't exist or is already disabled */
        400: {
          content: never;
        };
      };
    };
  };
  "/v2/sso/history": {
    /**
     * Get SSO history object
     *
     * @description Gets SSO history object
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15 */
          filter?: string;
        };
      };
      responses: {
        /** @description Details of SSO history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResults"];
          };
        };
      };
    };
    /**
     * Add SSO history object notes
     *
     * @description Adds SSO history object notes
     */
    post: {
      /** @description history notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of SSO history were added */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description SSO object history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v2/sso/metadata/download": {
    /**
     * Download the Jamf Pro SAML metadata file
     *
     * @description Download the Jamf Pro SAML metadata file
     */
    get: {
      responses: {
        /** @description Successful resposne */
        200: {
          content: {
            "text/plain": string;
          };
        };
      };
    };
  };
  "/v2/sso/validate": {
    /**
     * Endpoint for validation of a saml metadata url
     *
     * @description Validation of a content available under provided metadata URL.
     */
    post: {
      /** @description url to validate */
      requestBody: {
        content: {
          "application/json": components["schemas"]["SsoMetadataUrl"];
        };
      };
      responses: {
        /** @description valid metadata url */
        202: {
          content: never;
        };
        /** @description provided metadata URL is not valid */
        400: {
          content: never;
        };
      };
    };
  };
  "/v3/check-in": {
    /**
     * Get Client Check-In settings
     *
     * @description Gets `Client Check-In` object.
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["ClientCheckInV3"];
          };
        };
      };
    };
    /**
     * Update Client Check-In object
     *
     * @description Update Client Check-In object
     */
    put: {
      /** @description Client Check-In object to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ClientCheckInV3"];
        };
      };
      responses: {
        /** @description Client Check-In was updated */
        200: {
          content: {
            "application/json": components["schemas"]["ClientCheckInV3"];
          };
        };
      };
    };
  };
  "/v3/check-in/history": {
    /**
     * Get Client Check-In history object
     *
     * @description Gets Client Check-In history object
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,username:asc */
          sort?: string[];
          /** @description Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15 */
          filter?: string;
        };
      };
      responses: {
        /** @description Details of Client Check-In history were found */
        200: {
          content: {
            "application/json": components["schemas"]["HistorySearchResultsV1"];
          };
        };
      };
    };
    /**
     * Add a Note to Client Check-In History
     *
     * @description Adds Client Check-In history object notes
     */
    post: {
      /** @description history notes to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["ObjectHistoryNote"];
        };
      };
      responses: {
        /** @description Notes of Client Check-In history were added */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Client Check-In history can not be saved */
        503: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v3/computer-prestages": {
    /**
     * Get sorted and paged Computer Prestages
     *
     * @description Gets sorted and paged computer prestages
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /** @description Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc */
          sort?: string[];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["ComputerPrestageSearchResultsV3"];
          };
        };
      };
    };
    /**
     * Create a Computer Prestage
     *
     * @description Create a computer prestage
     */
    post: {
      /** @description Computer Prestage to create. ids defined in this body will be ignored */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PostComputerPrestageV3"];
        };
      };
      responses: {
        /** @description Computer Prestage was created */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v3/computer-prestages/{id}": {
    /**
     * Retrieve a Computer Prestage with the supplied id
     *
     * @description Retrieves a Computer Prestage with the supplied id
     */
    get: {
      parameters: {
        path: {
          /** @description Computer Prestage identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GetComputerPrestageV3"];
          };
        };
        /** @description Computer Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Update a Computer Prestage
     *
     * @description Updates a Computer Prestage
     */
    put: {
      parameters: {
        path: {
          /** @description Computer Prestage identifier */
          id: string;
        };
      };
      /** @description Computer Prestage to update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["PutComputerPrestageV3"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GetComputerPrestageV3"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Computer Prestage with that id does not exist */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description The Computer Prestage was modified by another process. Read the Computer Prestage again for updated changes. */
        409: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete a Computer Prestage with the supplied id
     *
     * @description Deletes a Computer Prestage with the supplied id
     */
    delete: {
      parameters: {
        path: {
          /** @description Computer Prestage identifier */
          id: string;
        };
      };
      responses: {
        /** @description Success */
        204: {
          content: never;
        };
      };
    };
  };
  "/v3/enrollment": {
    /**
     * Get Enrollment object and Re-enrollment settings
     *
     * @description Gets Enrollment object and re-enrollment settings. The settings can be altered without providing the existing management password by providing the following value for `managementPassword`:
     * `\uffff\uffff\uffff\uffff\uffff\uffff\uffff\uffff\uffff\uffff\uffff\uffff\uffff\uffff\uffff`.
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["EnrollmentSettingsV3"];
          };
        };
      };
    };
    /**
     * Update Enrollment object
     *
     * @description Update enrollment object. Regarding the `developerCertificateIdentity`,
     * if this object is omitted, the certificate will not be deleted from Jamf Pro.
     * The `identityKeystore` is the entire cert file as a base64 encoded string. The
     * `md5Sum` field is not required in the PUT request, but is calculated and returned
     * in the response.
     */
    put: {
      /** @description Update enrollment */
      requestBody: {
        content: {
          "application/json": components["schemas"]["EnrollmentSettingsV3"];
        };
      };
      responses: {
        /** @description Successfully updated enrollment object */
        200: {
          content: {
            "application/json": components["schemas"]["EnrollmentSettingsV3"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v3/enrollment/access-groups": {
    /**
     * Retrieve the configured LDAP groups configured for User-Initiated Enrollment.
     *
     * @description Retrieves the configured LDAP groups configured for User-Initiated Enrollment.
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /**
           * @description Sorting criteria in the format: `property:asc/desc`. Default sort
           * is `name:asc`. Multiple sort criteria are supported and must be separated
           * with a comma. Example: `sort=date:desc,name:asc`.
           */
          sort?: string[];
          /** @description Return "All LDAP Users" option on the first position if it is present in the current page */
          "all-users-option-first"?: boolean;
        };
      };
      responses: {
        /** @description Found access groups matching search params. */
        200: {
          content: {
            "application/json": components["schemas"]["AccessGroupsPreviewSearchResults"];
          };
        };
      };
    };
    /**
     * Add the configured LDAP group for User-Initiated Enrollment.
     *
     * @description Add the configured LDAP group for User-Initiated Enrollment.
     */
    post: {
      /** @description Configured LDAP group to create. */
      requestBody: {
        content: {
          "application/json": components["schemas"]["EnrollmentAccessGroupPreview"];
        };
      };
      responses: {
        /** @description Configured LDAP group record was created. */
        201: {
          content: {
            "application/json": components["schemas"]["HrefResponse"];
          };
        };
        /** @description A record with given ldapServerId and name already exists. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v3/enrollment/access-groups/{id}": {
    /**
     * Retrieve the configured LDAP groups configured for User-Initiated Enrollment
     *
     * @description Retrieves the configured LDAP groups configured for User-Initiated Enrollment.
     */
    get: {
      parameters: {
        path: {
          /** @description Autogenerated Access Group ID. */
          id: string;
        };
      };
      responses: {
        /** @description Successful query */
        200: {
          content: {
            "application/json": components["schemas"]["EnrollmentAccessGroupPreview"];
          };
        };
        /** @description Group not found */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Modify the configured LDAP groups configured for User-Initiated Enrollment. Only exiting Access Groups can be updated.
     *
     * @description Modify the configured LDAP groups configured for User-Initiated Enrollment. Only exiting Access Groups can be updated.
     */
    put: {
      parameters: {
        path: {
          /** @description Autogenerated Access Group ID. */
          id: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["EnrollmentAccessGroupPreview"];
        };
      };
      responses: {
        /** @description Successful update */
        200: {
          content: {
            "application/json": components["schemas"]["EnrollmentAccessGroupPreview"];
          };
        };
        /** @description Bad request. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete an LDAP group's access to user initiated Enrollment.
     *
     * @description Deletes an LDAP group's access to user initiated enrollment. The group "All LDAP Users" cannot be deleted, but it can be modified to disallow User-Initiated Enrollment.
     */
    delete: {
      parameters: {
        path: {
          /** @description Autogenerated Access Group ID. */
          id: string;
        };
      };
      responses: {
        /** @description Successful deletion */
        204: {
          content: never;
        };
        /** @description "All LDAP Users" cannot be deleted. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
        /** @description Group not found */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v3/enrollment/filtered-language-codes": {
    /**
     * Retrieve the list of languages and corresponding ISO 639-1 Codes but only those not already added to Enrollment
     *
     * @description Retrieves the list of languages and corresponding ISO 639-1 Codes, but only those not already added to Enrollment.
     */
    get: {
      responses: {
        /** @description Retrieves the list of languages and corresponding ISO 639-1 Codes, but only those not already added to Enrollment. */
        200: {
          content: {
            "application/json": components["schemas"]["LanguageCode"][];
          };
        };
      };
    };
  };
  "/v3/enrollment/language-codes": {
    /**
     * Retrieve the list of languages and corresponding ISO 639-1 Codes
     *
     * @description Retrieves the list of languages and corresponding ISO 639-1 Codes.
     */
    get: {
      responses: {
        /** @description List of languages and corresponding ISO 639-1 Codes. */
        200: {
          content: {
            "application/json": components["schemas"]["LanguageCode"][];
          };
        };
      };
    };
  };
  "/v3/enrollment/languages": {
    /**
     * Get an array of the language codes that have Enrollment messaging
     *
     * @description Returns an array of the language codes that have enrollment messaging currently configured.
     */
    get: {
      parameters: {
        query?: {
          page?: components["parameters"]["page"];
          "page-size"?: components["parameters"]["page-size"];
          /**
           * @description Sorting criteria in the format: property:asc/desc. Default sort
           * is `languageCode:asc`. Multiple sort criteria are supported and must be separated
           * with a comma. Example: `sort=date:desc,name:asc`.
           */
          sort?: string[];
        };
      };
      responses: {
        /** @description Found languages matching search params. */
        200: {
          content: {
            "application/json": components["schemas"]["ProcessTextsSearchResults"];
          };
        };
      };
    };
  };
  "/v3/enrollment/languages/delete-multiple": {
    /**
     * Delete multiple configured languages from User-Initiated Enrollment settings
     *
     * @description Delete multiple configured languages from User-Initiated Enrollment settings
     */
    post: {
      /** @description ids of each language to delete */
      requestBody: {
        content: {
          "application/json": components["schemas"]["Ids"];
        };
      };
      responses: {
        /** @description All languages ids passed in request sucessfully deleted. */
        204: {
          content: never;
        };
        /** @description Request processed.  Returns ids and error codes of any language unable to be deleted.  Expected error codes: INVALID_ID - id does not exist SYSTEM_EXCEPTION - a system exception occurred trying to delete the language. */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/v3/enrollment/languages/{languageId}": {
    /**
     * Retrieve the Enrollment messaging for a language
     *
     * @description Retrieves the enrollment messaging for a language.
     */
    get: {
      parameters: {
        path: {
          /** @description Two letter ISO 639-1 Language Code */
          languageId: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["EnrollmentProcessTextObject"];
          };
        };
        /** @description Language not found */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Edit Enrollment messaging for a language
     *
     * @description Edit enrollment messaging for a language.
     */
    put: {
      parameters: {
        path: {
          /** @description Two letter ISO 639-1 Language Code */
          languageId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EnrollmentProcessTextObject"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["EnrollmentProcessTextObject"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
    /**
     * Delete the Enrollment messaging for a language
     *
     * @description Delete the enrollment messaging for a language.
     */
    delete: {
      parameters: {
        path: {
          /** @description Two letter ISO 639-1 Language Code */
          languageId: string;
        };
      };
      responses: {
        /** @description Successful deletetion */
        204: {
          content: never;
        };
        /** @description Language not found */
        404: {
          content: {
            "application/json": components["schemas"]["ApiError"];
          };
        };
      };
    };
  };
  "/vpp/admin-accounts": {
    /**
     * Found all VPP Admin Accounts
     *
     * @deprecated
     * @description Found all vpp admin accounts.
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["VppAdminAccount"][];
          };
        };
      };
    };
  };
  "/vpp/subscriptions": {
    /**
     * Found all VPP - subscriptions
     *
     * @deprecated
     * @description Found all vpp - subscriptions.
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          headers: {
            Deprecation?: string;
          };
          content: {
            "application/json": components["schemas"]["VppTokenSubscription"][];
          };
        };
      };
    };
  };
  "/vpp/subscriptions/{id}": {
    /**
     * Found VPP subscription by id
     *
     * @deprecated
     * @description Found vpp subscription by id.
     */
    get: {
      parameters: {
        path: {
          /** @description id of vpp subscription to be retrieved */
          id: number;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          headers: {
            Deprecation?: string;
          };
          content: {
            "application/json": components["schemas"]["VppTokenSubscription"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    AccessGroupsPreviewSearchResults: {
      /** @example 10 */
      totalCount?: number;
      results?: components["schemas"]["EnrollmentAccessGroupPreview"][];
    };
    AccessGroupsV2SearchResults: {
      /** @example 10 */
      totalCount?: number;
      results?: components["schemas"]["EnrollmentAccessGroupV2"][];
    };
    Account: {
      /** @example 1 */
      id?: number;
      /** @example admin */
      username?: string;
      /** @example IT Bob */
      realName?: string;
      /** @example ITBob@Jamf.com */
      email?: string;
      preferences?: components["schemas"]["AccountPreferences"];
      /** @example false */
      isMultiSiteAdmin?: boolean;
      /**
       * @example FullAccess
       * @enum {string}
       */
      accessLevel?: "FullAccess" | "SiteAccess" | "GroupBasedAccess";
      /**
       * @example CUSTOM
       * @enum {string}
       */
      privilegeSet?: "ADMINISTRATOR" | "AUDITOR" | "ENROLLMENT" | "CUSTOM";
      /**
       * @example {
       *   "1": [
       *     "Read SSO Settings",
       *     "Delete eBooks"
       *   ]
       * }
       */
      privilegesBySite?: {
        [key: string]: string[];
      };
      /**
       * @example [
       *   1,
       *   3
       * ]
       */
      groupIds?: number[];
      /** @example 1 */
      currentSiteId?: number;
    };
    /** @description Settings for Account Driven User Enrollment. Only 1 of expirationIntervalDays or expirationIntervalSeconds can be supplied. */
    AccountDrivenUserEnrollmentSessionTokenSettings: {
      /** @example false */
      enabled?: boolean;
      /** @example 1 */
      expirationIntervalDays?: number;
      /** @example 86400 */
      expirationIntervalSeconds?: number;
    };
    AccountGroup: {
      /**
       * @example FullAccess
       * @enum {string}
       */
      accessLevel?: "FullAccess" | "SiteAccess" | "GroupBasedAccess";
      /**
       * @example CUSTOM
       * @enum {string}
       */
      privilegeSet?: "ADMINISTRATOR" | "AUDITOR" | "ENROLLMENT" | "CUSTOM";
      /** @example 1 */
      siteId?: number;
      /** @example Read SSO Settings */
      privileges?: string[];
      /**
       * @example [
       *   1,
       *   3
       * ]
       */
      memberUserIds?: number[];
    };
    AccountPreferences: {
      /** @example en */
      language?: string;
      /** @example MM/dd/yyyy */
      dateFormat?: string;
      /** @example Europe */
      region?: string;
      /** @example Etc/GMT */
      timezone?: string;
      /** @example false */
      isDisableRelativeDates?: boolean;
    };
    /**
     * @example EXACT_MATCH
     * @enum {string}
     */
    AccountPreferencesSearchType: "EXACT_MATCH" | "STARTS_WITH" | "CONTAINS";
    /**
     * @example MATCH_SYSTEM
     * @enum {string}
     */
    AccountPreferencesUserInterfaceDisplayTheme: "MATCH_SYSTEM" | "LIGHT" | "DARK";
    AccountPreferencesV1: {
      /** @example en */
      language?: string;
      /** @example MM/dd/yyyy */
      dateFormat?: string;
      /** @example Europe */
      region?: string;
      /** @example Etc/GMT */
      timezone?: string;
      /** @example false */
      disableRelativeDates?: boolean;
    };
    AccountPreferencesV4: {
      /**
       * @description Language codes supported by Jamf Pro
       * @default en
       * @enum {string}
       */
      language: "en" | "de" | "fr" | "es" | "ja" | "zh-hant";
      /** @example MM/dd/yyyy */
      dateFormat: string;
      /** @example America/Chicago */
      timezone: string;
      /** @example false */
      disableRelativeDates: boolean;
      /** @example true */
      disablePageLeaveCheck: boolean;
      /** @example true */
      disableTablePagination: boolean;
      /** @example true */
      disableShortcutsTooltips: boolean;
      /** @example ALPHABETICALLY */
      configProfilesSortingMethod: string;
    };
    AccountPreferencesV5: {
      /**
       * @description Language codes supported by Jamf Pro
       * @default en
       * @enum {string}
       */
      language: "en" | "de" | "fr" | "es" | "ja" | "zh-hant";
      /** @example MM/dd/yyyy */
      dateFormat: string;
      /** @example America/Chicago */
      timezone: string;
      /**
       * @default 100
       * @example 50
       */
      resultsPerPage: number;
      userInterfaceDisplayTheme: components["schemas"]["AccountPreferencesUserInterfaceDisplayTheme"];
      /** @example false */
      disableRelativeDates: boolean;
      /** @example true */
      disablePageLeaveCheck: boolean;
      /** @example true */
      disableTablePagination: boolean;
      /** @example true */
      disableShortcutsTooltips: boolean;
      /** @example ALPHABETICALLY */
      configProfilesSortingMethod: string;
      computerSearchMethod: components["schemas"]["AccountPreferencesSearchType"];
      computerApplicationSearchMethod: components["schemas"]["AccountPreferencesSearchType"];
      computerApplicationUsageSearchMethod: components["schemas"]["AccountPreferencesSearchType"];
      computerFontSearchMethod?: components["schemas"]["AccountPreferencesSearchType"];
      computerPluginSearchMethod?: components["schemas"]["AccountPreferencesSearchType"];
      computerSoftwareUpdateSearchMethod?: components["schemas"]["AccountPreferencesSearchType"];
      computerLocalUserAccountSearchMethod: components["schemas"]["AccountPreferencesSearchType"];
      computerPackageReceiptSearchMethod: components["schemas"]["AccountPreferencesSearchType"];
      computerPrinterSearchMethod: components["schemas"]["AccountPreferencesSearchType"];
      computerPeripheralSearchMethod?: components["schemas"]["AccountPreferencesSearchType"];
      computerServiceSearchMethod: components["schemas"]["AccountPreferencesSearchType"];
      mobileDeviceSearchMethod: components["schemas"]["AccountPreferencesSearchType"];
      mobileDeviceAppSearchMethod: components["schemas"]["AccountPreferencesSearchType"];
      userSearchMethod: components["schemas"]["AccountPreferencesSearchType"];
      userAllContentSearchMethod: components["schemas"]["AccountPreferencesSearchType"];
      userMobileDeviceAppSearchMethod: components["schemas"]["AccountPreferencesSearchType"];
      userMacAppStoreAppSearchMethod: components["schemas"]["AccountPreferencesSearchType"];
      userEbookSearchMethod: components["schemas"]["AccountPreferencesSearchType"];
    };
    AccountSettingsRequest: {
      /**
       * @description id of Account Settings
       * @example 1
       */
      id?: string;
      /**
       * @default false
       * @example true
       */
      payloadConfigured?: boolean;
      /**
       * @default false
       * @example true
       */
      localAdminAccountEnabled?: boolean;
      /**
       * @default
       * @example admin
       */
      adminUsername?: string;
      /**
       * @default
       * @example password
       */
      adminPassword?: string;
      /**
       * @default false
       * @example false
       */
      hiddenAdminAccount?: boolean;
      /**
       * @default false
       * @example true
       */
      localUserManaged?: boolean;
      /**
       * @default STANDARD
       * @enum {string}
       */
      userAccountType?: "ADMINISTRATOR" | "STANDARD" | "SKIP";
      /**
       * @default 0
       * @example 4
       */
      versionLock?: number;
      /**
       * @default false
       * @example true
       */
      prefillPrimaryAccountInfoFeatureEnabled?: boolean;
      /**
       * @description Values accepted are only CUSTOM and DEVICE_OWNER
       * @default CUSTOM
       * @example DEVICE_OWNER
       */
      prefillType?: string;
      /**
       * @default
       * @example TestUser FullName
       */
      prefillAccountFullName?: string;
      /**
       * @default
       * @example UserName
       */
      prefillAccountUserName?: string;
      /**
       * @default false
       * @example false
       */
      preventPrefillInfoFromModification?: boolean;
    };
    AccountSettingsResponse: {
      /**
       * @description id of Account Settings
       * @example 1
       */
      id?: string;
      /**
       * @default false
       * @example true
       */
      payloadConfigured?: boolean;
      /**
       * @default false
       * @example true
       */
      localAdminAccountEnabled?: boolean;
      /**
       * @default
       * @example admin
       */
      adminUsername?: string;
      /**
       * @default false
       * @example false
       */
      hiddenAdminAccount?: boolean;
      /**
       * @default false
       * @example true
       */
      localUserManaged?: boolean;
      /**
       * @default STANDARD
       * @enum {string}
       */
      userAccountType?: "ADMINISTRATOR" | "STANDARD" | "SKIP";
      /**
       * @default 0
       * @example 4
       */
      versionLock?: number;
      /**
       * @default false
       * @example true
       */
      prefillPrimaryAccountInfoFeatureEnabled?: boolean;
      /**
       * @description Values accepted are only CUSTOM and DEVICE_OWNER
       * @default CUSTOM
       * @example DEVICE_OWNER
       */
      prefillType?: string;
      /**
       * @default
       * @example TestUser FullName
       */
      prefillAccountFullName?: string;
      /**
       * @default
       * @example UserName
       */
      prefillAccountUserName?: string;
      /**
       * @default false
       * @example false
       */
      preventPrefillInfoFromModification?: boolean;
    };
    AdminAccount: {
      /** @example 1 */
      id?: number;
    };
    AdvancedSearch: {
      /** @example 1 */
      id?: string;
      /** @example Andy's Search */
      name: string;
      criteria?: components["schemas"]["SmartSearchCriterion"][];
      /**
       * @example [
       *   "AirPlay Password",
       *   "App Analytics Enabled"
       * ]
       */
      displayFields?: string[];
      /** @example -1 */
      siteId?: string | null;
    };
    AdvancedSearchCriteriaChoices: {
      /**
       * @example [
       *   "Option 1",
       *   "Option 2"
       * ]
       */
      choices?: string[];
    };
    AdvancedSearchSearchResults: {
      /** @example 3 */
      totalCount?: number;
      results?: components["schemas"]["AdvancedSearch"][];
    };
    AdvancedUserContentSearch: {
      /** @example 1 */
      id?: string;
      /** @example Andy's Search */
      name: string;
      criteria?: components["schemas"]["SmartSearchCriterion"][];
      /**
       * @example [
       *   "Content Name",
       *   "Price"
       * ]
       */
      displayFields?: string[];
      /** @example -1 */
      siteId?: string | null;
    };
    AdvancedUserContentSearchSearchResults: {
      /** @example 3 */
      totalCount?: number;
      results?: components["schemas"]["AdvancedUserContentSearch"][];
    };
    /** @description will be populated if the type is android. */
    AndroidDetails: {
      /** @example Black Licorice */
      osName?: string;
      /** @example Google */
      manufacturer?: string;
      /** @example Pixel 2 */
      model?: string;
      /** @example 30000 */
      internalCapacityMb?: number;
      /** @example 20000 */
      internalAvailableMb?: number;
      /** @example 67 */
      internalPercentUsed?: number;
      /** @example 20000 */
      externalCapacityMb?: number;
      /** @example 10000 */
      externalAvailableMb?: number;
      /** @example 50 */
      externalPercentUsed?: number;
      /** @example 100 */
      batteryLevel?: number;
      /**
       * Format: date-time
       * @example 2018-10-15T16:39:56.307Z
       */
      lastBackupTimestamp?: string;
      /** @example 1 */
      apiVersion?: number;
      computer?: components["schemas"]["IdAndName"];
      security?: components["schemas"]["Security"];
    };
    ApiError: {
      /**
       * @description HTTP status of the response
       * @example 400
       */
      httpStatus?: number;
      errors?: components["schemas"]["ApiErrorCause"][];
    };
    ApiErrorCause: {
      /**
       * @description Error-specific code that can be used to identify localization string, etc.
       * @example 8675309
       */
      code?: string;
      /**
       * @description Name of the field that caused the error.
       * @example Name
       */
      field: string;
      /**
       * @description A general description of error for troubleshooting/debugging. Generally this text should not be displayed to a user; instead refer to errorCode and it's localized text
       * @example I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours
       */
      description?: string;
      /**
       * @description id of object with error. Optional.
       * @example 3
       */
      id?: string | null;
    };
    ApiIntegrationRequest: {
      /**
       * @description API Role display names.
       *
       * @example [
       *   "Tootsie Roal",
       *   "Jamf Reset"
       * ]
       */
      authorizationScopes: string[];
      /** @example My API Integration */
      displayName: string;
      /** @example true */
      enabled?: boolean;
      /** @example 300 */
      accessTokenLifetimeSeconds?: number;
    };
    ApiIntegrationResponse: {
      /** @example 1 */
      id: number;
      /**
       * @example [
       *   "Tootsie Roal",
       *   "Jamf Reset"
       * ]
       */
      authorizationScopes: string[];
      /** @example My API Integration */
      displayName: string;
      /** @example true */
      enabled: boolean;
      /** @example 300 */
      accessTokenLifetimeSeconds?: number;
      /**
       * @description Type of API Client:
       *     * `CLIENT_CREDENTIALS` - A client ID and secret have been generated for this integration.
       *     * `NATIVE_APP_OAUTH` - A native app (i.e., Jamf Reset) has been linked to this integration for auth code grant type via Managed App Config.
       *     * `NONE` - No client is currently associated with this integration.
       *
       * @example CLIENT_CREDENTIALS
       * @enum {string}
       */
      appType: "CLIENT_CREDENTIALS" | "NATIVE_APP_OAUTH" | "NONE";
      /** @example 538878d4-9744-43ed-8732-3df99d502bd6 */
      clientId: string;
    };
    ApiIntegrationSearchResult: {
      /** @example 1 */
      totalCount: number;
      results: components["schemas"]["ApiIntegrationResponse"][];
    };
    ApiRole: {
      /** @example 1 */
      id: string;
      /** @example One Role to Rule them all */
      displayName: string;
      privileges: string[];
    };
    ApiRolePrivileges: {
      privileges: string[];
    };
    ApiRoleRequest: {
      /** @example One Role to Rule them all */
      displayName: string;
      privileges: string[];
    };
    ApiRoleResult: {
      /** @example 1 */
      totalCount: number;
      results: components["schemas"]["ApiRole"][];
    };
    /**
     * @example ENABLE_APP_ANALYTICS
     * @enum {string}
     */
    AppAnalyticsSetting: "ENABLE_APP_ANALYTICS" | "DISABLE_APP_ANALYTICS";
    AppConfigReinstallCode: {
      /** @example 975767FE-074E-4F42-BB8B-925B1627CA6F */
      reinstallCode?: string;
    };
    AppPath: {
      /** @example 1 */
      id: string;
      /** @example /Example/Path/To/App/ */
      path: string;
    };
    AppRequestFormInputField: {
      /** @example 1 */
      id?: number;
      /** @example Quantity */
      title: string;
      /** @example How many of these would you like? */
      description?: string | null;
      /**
       * @description Highest priority is 1, lowest is 255
       * @example 1
       */
      priority: number;
    };
    AppRequestFormInputFieldSearchResults: {
      /** @example 3 */
      totalCount?: number;
      results?: components["schemas"]["AppRequestFormInputField"][];
    };
    AppRequestSettings: {
      /** @example true */
      isEnabled?: boolean;
      /**
       * @description Can be any of the country codes from /v1/app-store-country-codes or "deviceLocale" to use each individual device's locale
       * @example deviceLocale
       */
      appStoreLocale?: string;
      /** @example 1 */
      requesterUserGroupId?: number;
      approverEmails?: string[];
    };
    /** @description will be populated if the type is appleTv. */
    AppleTvDetails: {
      /** @example Apple TV 3rd Generation Rev 2 */
      model?: string;
      /** @example AppleTV3,2 */
      modelIdentifier?: string;
      /** @example MD199LL */
      modelNumber?: string;
      /** @example true */
      isSupervised?: boolean;
      /**
       * Format: password
       * @example 1234
       */
      airplayPassword?: string;
      /** @example 1 */
      deviceId?: string;
      /** @example null */
      locales?: string;
      purchasing?: components["schemas"]["Purchasing"];
      configurationProfiles?: components["schemas"]["ConfigurationProfile"][];
    };
    ApplicationAttributes: {
      /** @example com.jamf.selfservice */
      identifier?: string;
      attributes?: components["schemas"]["Attributes"];
    };
    ApplicationConfiguration: {
      /** @example <plist><dict><key>Key</key><string>Value</string></dict></plist> */
      configuration?: string;
      /** @example com.jamf.selfservice */
      identifier?: string;
    };
    AssignRemoveProfileResponseSyncState: {
      /** @example 1 */
      id?: number;
      /** @example R7QFDE2YCFN4 */
      serialNumber?: string;
      /** @example 9164E5F7C74C2A4C4BE90BB15E549F14 */
      profileUUID?: string;
      /** @example ASSIGN_SUCCESS */
      syncStatus?: string;
      /** @example 0 */
      failureCount?: number;
      /** @example 1583855813080 */
      timestamp?: number;
    };
    Assignment: {
      /** @example 5 */
      mobileDeviceId?: string;
      /**
       * @description If true the device should be added to the group, if false should be removed from the group.
       * @example true
       */
      selected?: boolean;
    };
    Attributes: {
      /** @example aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937 */
      vpnUuid?: string;
      associatedDomains?: string[];
      /** @example true */
      removable?: boolean;
      /** @example true */
      enableDirectDownloads?: boolean;
    };
    AuthAccount: {
      /** @example 1 */
      id?: number;
      /** @example admin */
      username?: string;
      /** @example IT Bob */
      realName?: string;
      /** @example ITBob@Jamf.com */
      email?: string;
      preferences?: components["schemas"]["AccountPreferences"];
      /** @example true */
      isMultiSiteAdmin?: boolean;
      /**
       * @example FullAccess
       * @enum {string}
       */
      accessLevel?: "FullAccess" | "SiteAccess" | "GroupBasedAccess";
      /**
       * @example CUSTOM
       * @enum {string}
       */
      privilegeSet?: "ADMINISTRATOR" | "AUDITOR" | "ENROLLMENT" | "CUSTOM";
      /**
       * @example {
       *   "1": [
       *     "Read SSO Settings",
       *     "Delete eBooks"
       *   ]
       * }
       */
      privilegesBySite?: {
        [key: string]: string[];
      };
      /**
       * @example [
       *   1,
       *   3
       * ]
       */
      groupIds?: number[];
      /** @example 1 */
      currentSiteId?: number;
    };
    AuthAccountV1: {
      /** @example 1 */
      id?: string;
      /** @example admin */
      username?: string;
      /** @example IT Bob */
      realName?: string;
      /** @example ITBob@Jamf.com */
      email?: string;
      preferences?: components["schemas"]["AccountPreferencesV1"];
      /** @example true */
      multiSiteAdmin?: boolean;
      /**
       * @example FullAccess
       * @enum {string}
       */
      accessLevel?: "FullAccess" | "SiteAccess" | "GroupBasedAccess";
      /**
       * @example CUSTOM
       * @enum {string}
       */
      privilegeSet?: "ADMINISTRATOR" | "AUDITOR" | "ENROLLMENT" | "CUSTOM";
      /**
       * @example {
       *   "1": [
       *     "Read SSO Settings",
       *     "Delete eBooks"
       *   ]
       * }
       */
      privilegesBySite?: {
        [key: string]: string[];
      };
      /**
       * @example [
       *   1,
       *   3
       * ]
       */
      groupIds?: string[];
      /** @example 1 */
      currentSiteId?: string;
    };
    AuthToken: {
      /** @example eyJhbGciOiJIUzUxMiJ9.eyJhdXRoZW50aWNhdGVkLWFwcCI6IkdFTkVSSUMiLCJhdXRoZW50aWNhdGlvbi10eXBlIjoiSlNTIiwiZ3JvdXBzIjpbXSwic3ViamVjdC10eXBlIjoiSlNTX1VTRVJfSUQiLCJ0b2tlbi11dWlkIjoiNzc0YWY3MGYtYWQ0Yy00N2QzLTk2MzktZjEwMjBhMTIwYzExIiwibGRhcC1zZXJ2ZXItaWQiOi0xLCJzdWIiOiIxIiwiZXhwIjoxNTM5NjE5MzQ4fQ.0t7sgYyIyA7kTTmrM8tMGE7fnXcJ1ZzQODAJp0pzg92-cBMQS0Cv8S9oWjkJD7VJS-CHA1dOppr0G_2dCPOfng */
      token?: string;
      /** @example 1539619348124 */
      expires?: number;
    };
    AuthTokenV1: {
      /** @example eyJhbGciOiJIUzUxMiJ9.eyJhdXRoZW50aWNhdGVkLWFwcCI6IkdFTkVSSUMiLCJhdXRoZW50aWNhdGlvbi10eXBlIjoiSlNTIiwiZ3JvdXBzIjpbXSwic3ViamVjdC10eXBlIjoiSlNTX1VTRVJfSUQiLCJ0b2tlbi11dWlkIjoiNzc0YWY3MGYtYWQ0Yy00N2QzLTk2MzktZjEwMjBhMTIwYzExIiwibGRhcC1zZXJ2ZXItaWQiOi0xLCJzdWIiOiIxIiwiZXhwIjoxNTM5NjE5MzQ4fQ.0t7sgYyIyA7kTTmrM8tMGE7fnXcJ1ZzQODAJp0pzg92-cBMQS0Cv8S9oWjkJD7VJS-CHA1dOppr0G_2dCPOfng */
      token?: string;
      /** @example 2020-04-21T21:09:31.626Z */
      expires?: string;
    };
    /**
     * @example JSS
     * @enum {string}
     */
    AuthenticationType: "JSS" | "LDAP" | "SAML" | "INVITE" | "NATIVE_APP_API_INTEGRATION" | "DEVICE_SIGNATURE" | "CLOUD_CONNECTOR" | "SYSTEM_ACCOUNT" | "USER_ENROLLMENT" | "CLIENT_CREDENTIALS";
    Authorization: {
      account?: components["schemas"]["AuthAccount"];
      accountGroups?: components["schemas"]["AccountGroup"][];
      sites?: components["schemas"]["Site"][];
      authenticationType?: components["schemas"]["AuthenticationType"];
    };
    AuthorizationV1: {
      account?: components["schemas"]["AuthAccountV1"];
      accountGroups?: components["schemas"]["AccountGroup"][];
      sites?: components["schemas"]["V1Site"][];
      authenticationType?: components["schemas"]["AuthenticationType"];
    };
    AvailableOsUpdates: {
      availableUpdates?: {
        /**
         * @example [
         *   "12.0.1",
         *   "11.6.1",
         *   "11.6",
         *   "11.5.2"
         * ]
         */
        macOS?: string[];
        /**
         * @example [
         *   "16.1.1",
         *   "16.0.1",
         *   "15.7.1",
         *   "9.1"
         * ]
         */
        iOS?: string[];
      };
    };
    AvailableUpdates: {
      /**
       * @example [
       *   "12.0.1",
       *   "11.6.1",
       *   "11.6",
       *   "11.5.2"
       * ]
       */
      availableUpdates?: string[];
    };
    /** @description A Cloud Identity Provider Azure configuration for responses */
    AzureConfiguration: {
      cloudIdPCommon: components["schemas"]["CloudIdPCommon"];
      server: components["schemas"]["AzureServerConfiguration"];
    };
    /** @description A Cloud Identity Provider Azure configuration for responses */
    AzureConfigurationRequest: {
      cloudIdPCommon: components["schemas"]["CloudIdPCommonRequest"];
      server: components["schemas"]["AzureServerConfigurationRequest"];
    };
    /** @description A Cloud Identity Provider Azure configuration for update */
    AzureConfigurationUpdate: {
      cloudIdPCommon: components["schemas"]["CloudIdPCommon"];
      server: components["schemas"]["AzureServerConfigurationUpdate"];
    };
    /** @description Azure Cloud Identity Provider mappings */
    AzureMappings: {
      /** @example id */
      userId: string;
      /** @example userPrincipalName */
      userName: string;
      /** @example displayName */
      realName: string;
      /** @example mail */
      email: string;
      /** @example department */
      department: string;
      /** @example companyName */
      building: string;
      /** @example officeLocation */
      room: string;
      /** @example mobilePhone */
      phone: string;
      /** @example jobTitle */
      position: string;
      /** @example id */
      groupId: string;
      /** @example displayName */
      groupName: string;
    };
    /** @description Azure Cloud Identity Provider configuration */
    AzureServerConfiguration: {
      /** @example 1001 */
      id: string;
      /** @example db65d325-0350-4a17-9af9-b302d0fc386b */
      tenantId: string;
      /** @example true */
      enabled: boolean;
      /** @example true */
      migrated: boolean;
      mappings: components["schemas"]["AzureMappings"];
      /** @example 30 */
      searchTimeout: number;
      /**
       * @description Use this field to enable transitive membership lookup with Single Sign On
       * @example false
       */
      transitiveMembershipEnabled: boolean;
      /**
       * @description Use this field to set user field mapping for transitive membership lookup with Single Sign On
       * @example userPrincipalName
       */
      transitiveMembershipUserField: string;
      /**
       * @description Use this field to enable transitive membership lookup. This setting would not apply to Single Sign On
       * @example false
       */
      transitiveDirectoryMembershipEnabled: boolean;
      /**
       * @description Use this field to enable membership calculation optimization. This setting would not apply to Single Sign On
       * @example true
       */
      membershipCalculationOptimizationEnabled?: boolean;
    };
    /** @description Azure Cloud Identity Provider configuration request */
    AzureServerConfigurationRequest: {
      /** @example 1001 */
      id?: string;
      /** @example db65d325-0350-4a17-9af9-b302d0fc386b */
      tenantId: string;
      /** @example true */
      enabled: boolean;
      mappings: components["schemas"]["AzureMappings"];
      /** @example 30 */
      searchTimeout: number;
      /**
       * @description Use this field to enable transitive membership lookup with Single Sign On
       * @example false
       */
      transitiveMembershipEnabled: boolean;
      /**
       * @description Use this field to set user field mapping for transitive membership lookup with Single Sign On
       * @example userPrincipalName
       */
      transitiveMembershipUserField: string;
      /**
       * @description Use this field to enable transitive membership lookup. This setting would not apply to Single Sign On
       * @example false
       */
      transitiveDirectoryMembershipEnabled: boolean;
      /**
       * @description Use this field to enable membership calculation optimization. This setting would not apply to Single Sign On
       * @example true
       */
      membershipCalculationOptimizationEnabled?: boolean;
      /** @example auth */
      code: string;
    };
    /** @description Azure Cloud Identity Provider configuration update */
    AzureServerConfigurationUpdate: {
      /** @example 1001 */
      id: string;
      /** @example true */
      enabled: boolean;
      mappings: components["schemas"]["AzureMappings"];
      /** @example 30 */
      searchTimeout: number;
      /**
       * @description Use this field to enable transitive membership lookup with Single Sign On
       * @example false
       */
      transitiveMembershipEnabled: boolean;
      /**
       * @description Use this field to set user field mapping for transitive membership lookup with Single Sign On
       * @example userPrincipalName
       */
      transitiveMembershipUserField: string;
      /**
       * @description Use this field to enable transitive membership lookup. This setting would not apply to Single Sign On
       * @example false
       */
      transitiveDirectoryMembershipEnabled: boolean;
      /**
       * @description Use this field to enable membership calculation optimization. This setting would not apply to Single Sign On
       * @example true
       */
      membershipCalculationOptimizationEnabled?: boolean;
    };
    BrandingImageUrl: {
      /** @example https://jamfpro.jamf/image?1 */
      url?: string;
    };
    Building: {
      /** @example 1 */
      id?: string;
      /** @example Apple Park */
      name: string;
      /** @example The McIntosh Tree */
      streetAddress1?: string | null;
      /** @example One Apple Park Way */
      streetAddress2?: string | null;
      /** @example Cupertino */
      city?: string | null;
      /** @example California */
      stateProvince?: string | null;
      /** @example 95014 */
      zipPostalCode?: string | null;
      /** @example The United States of America */
      country?: string | null;
    };
    BuildingSearchResults: {
      /** @example 3 */
      totalCount?: number;
      results?: components["schemas"]["Building"][];
    };
    CacheSettings: {
      /** @default 0 */
      id?: string;
      /** @default cache configuration */
      name?: string;
      /** @example ehcache */
      cacheType: string;
      /**
       * Format: int32
       * @example 120
       */
      timeToLiveSeconds: number;
      /**
       * Format: int32
       * @example 120
       */
      timeToIdleSeconds?: number;
      /**
       * Format: int32
       * @example 120
       */
      directoryTimeToLiveSeconds?: number;
      /** @default null */
      ehcacheMaxBytesLocalHeap?: string;
      /**
       * @description The default is for Jamf Pro to generate a UUID, so we can only give an example instead.
       * @example 24864549-94ea-4cc1-bb80-d7fb392c6556
       */
      cacheUniqueId: string;
      /** @default false */
      elasticache?: boolean;
      /** @example [] */
      memcachedEndpoints: components["schemas"]["MemcachedEndpoints"][];
    };
    CategoriesSearchResults: {
      /** @example 3 */
      totalCount?: number;
      results?: components["schemas"]["Category"][];
    };
    Category: {
      /** @example 1 */
      id?: string;
      /** @example The Best */
      name: string;
      /**
       * Format: int32
       * @example 9
       */
      priority: number;
    };
    CertificateDetails: {
      /** @default */
      subject?: string;
      /** @default */
      serialNumber?: string;
    };
    CertificateIdentityV2: {
      /** @default null */
      filename?: string;
      /**
       * Format: password
       * @default
       */
      keystorePassword?: string;
      /**
       * Format: byte
       * @description The base 64 encoded certificate.
       * @example WlhoaGJYQnNaU0J2WmlCaElHSmhjMlUyTkNCbGJtTnZaR1ZrSUhaaGJHbGtJSEF4TWk0Z2EyVjVjM1J2Y21VZ1ptbHNaUT09
       */
      identityKeystore?: string;
      /**
       * @description The md5 checksum of the certificate file. Intended to be used in verifification the cert being used to sign QuickAdd packages.
       * @default
       */
      md5Sum?: string;
    } | null;
    CertificateKey: {
      /** @example 1 */
      id?: string;
      /** @example true */
      valid?: boolean;
    };
    CertificateRecord: {
      /** @example CN=Jamf JSS Built-in Certificate Authority */
      subjectX500Principal?: string;
      /** @example CN=Jamf JSS Built-in Certificate Authority */
      issuerX500Principal?: string;
      /** @example 00bc43bea0 */
      serialNumber?: string;
      /** @example 3 */
      version?: number;
      /** @example 1927739379 */
      notAfter?: number;
      /** @example 1612120179 */
      notBefore?: number;
      signature?: components["schemas"]["Signature"];
      /**
       * @example [
       *   "digitalSignature",
       *   "keyEncipherment",
       *   "keyCertSign",
       *   "cRLSign"
       * ]
       */
      keyUsage?: string[];
      /**
       * @example [
       *   "1.3.6.1.5.5.7.3.1"
       * ]
       */
      keyUsageExtended?: string[];
      /** @example 448a7cc4d899d6a1821258133c24c023a5f558d9 */
      sha1Fingerprint?: string;
      /** @example 660958e14891c67491822687d9ac0e3574562664458111ad875b680995ca472b */
      sha256Fingerprint?: string;
    };
    ChangePassword: {
      /**
       * Format: password
       * @example oldPassword
       */
      currentPassword: string;
      /**
       * Format: password
       * @example updatedPassword
       */
      newPassword: string;
    };
    /** @description Classic Ldap mappings configuration */
    ClassicLdapMappings: {
      /** @example mail */
      userObjectMapIdTo: string;
      /** @example uid */
      userObjectMapUsernameTo: string;
      /** @example displayName */
      userObjectMapRealNameTo: string;
      /** @example mail */
      userObjectMapEmailTo: string;
      /** @example departmentNumber */
      userObjectMapDepartmentTo: string;
      /** @default */
      userObjectMapBuildingTo: string;
      /** @default */
      userObjectMapRoomTo: string;
      /** @default */
      userObjectMapPhoneTo: string;
      /** @example title */
      userObjectMapPositionTo: string;
      /** @example uid */
      userObjectMapUuidTo: string;
      /** @example name */
      userGroupObjectMapIdTo: string;
      /** @example name */
      userGroupObjectMapGroupNameTo: string;
      /** @example uid */
      userGroupObjectMapUuidTo: string;
    };
    ClientCheckInV3: {
      /**
       * Format: int32
       * @description Suggested values are 5, 15, 30, or 60. Web interface will not display correctly if not one of those. Minimum is 5, maximum is 60.
       * @default 15
       */
      checkInFrequency?: number;
      /** @default false */
      createHooks?: boolean;
      /** @default false */
      hookLog?: boolean;
      /** @default false */
      hookPolicies?: boolean;
      /** @default false */
      createStartupScript?: boolean;
      /** @default false */
      startupLog?: boolean;
      /** @default false */
      startupPolicies?: boolean;
      /** @default false */
      startupSsh?: boolean;
      /** @default false */
      enableLocalConfigurationProfiles?: boolean;
    };
    CloudDistributionPointUploadCapability: {
      /**
       * @default false
       * @example false
       */
      principalDistributionTechnology?: boolean;
      /**
       * @default false
       * @example false
       */
      directUploadCapable?: boolean;
    };
    /** @description A Cloud Identity Provider information */
    CloudIdPCommon: {
      /** @example 1001 */
      id: string;
      /** @example Cloud Identity Provider */
      displayName: string;
      /**
       * @example PROVIDER
       * @enum {string}
       */
      providerName: "GOOGLE" | "AZURE";
    };
    /** @description A Cloud Identity Provider information for request */
    CloudIdPCommonRequest: {
      /** @example Cloud Identity Provider */
      displayName: string;
      /**
       * @example PROVIDER
       * @enum {string}
       */
      providerName: "GOOGLE" | "AZURE";
    };
    /** @description A Cloud Identity Provider information for responses */
    CloudIdPCommonResponse: {
      /** @example 1001 */
      id?: string;
      /** @example Cloud Identity Provider */
      displayName?: string;
      /** @example true */
      enabled?: boolean;
      /**
       * @example PROVIDER
       * @enum {string}
       */
      providerName?: "GOOGLE" | "AZURE";
    };
    /** @description Ldap Cloud Identity Provider conection pool statistics */
    CloudLdapConnectionPoolStatistics: {
      /**
       * Format: int64
       * @example 1
       */
      numConnectionsClosedDefunct?: number;
      /**
       * Format: int64
       * @example 1
       */
      numConnectionsClosedExpired?: number;
      /**
       * Format: int64
       * @example 1
       */
      numConnectionsClosedUnneeded?: number;
      /**
       * Format: int64
       * @example 1
       */
      numFailedCheckouts?: number;
      /**
       * Format: int64
       * @example 1
       */
      numFailedConnectionAttempts?: number;
      /**
       * Format: int64
       * @example 1
       */
      numReleasedValid?: number;
      /**
       * Format: int64
       * @example 1
       */
      numSuccessfulCheckouts?: number;
      /**
       * Format: int64
       * @example 1
       */
      numSuccessfulCheckoutsNewConnection?: number;
      /**
       * Format: int64
       * @example 1
       */
      numSuccessfulConnectionAttempts?: number;
      /**
       * Format: int64
       * @example 1
       */
      maximumAvailableConnections?: number;
      /**
       * Format: int64
       * @example 1
       */
      numSuccessfulCheckoutsWithoutWaiting?: number;
      /**
       * Format: int64
       * @example 1
       */
      numSuccessfulCheckoutsAfterWaiting?: number;
      /**
       * Format: int64
       * @example 1
       */
      numAvailableConnections?: number;
    };
    /** @description Status of tested Cloud Ldap connection */
    CloudLdapConnectionStatus: {
      /** @example Successfully connected */
      status?: string;
    };
    /** @description Response with keystore information */
    CloudLdapKeystore: {
      /** @example PKCS12 */
      type?: string;
      /**
       * Format: date-time
       * @example 2030-02-21T12:05:47.244Z
       */
      expirationDate?: string;
      /** @example ST=California, C=US, OU=GSuite, CN=LDAP Client, L=Mountain View, O=Google Inc. */
      subject?: string;
      /** @example keystore.p12 */
      fileName?: string;
    };
    /** @description Request with the Base64-encoded keystore file */
    CloudLdapKeystoreFile: {
      /**
       * Format: password
       * @example ***
       */
      password: string;
      /**
       * Format: byte
       * @example WlhoaGJYQnNaU0J2WmlCaElHSmhjMlUyTkNCbGJtTnZaR1ZrSUhaaGJHbGtJSEF4TWk0Z2EyVjVjM1J2Y21VZ1ptbHNaUT09
       */
      fileBytes: string;
      /** @example keystore.p12 */
      fileName: string;
    };
    /** @description Mappings configurations request for Ldap Cloud Identity Provider configuration */
    CloudLdapMappingsRequest: {
      userMappings: components["schemas"]["UserMappings"];
      groupMappings: components["schemas"]["GroupMappings"];
      membershipMappings: components["schemas"]["MembershipMappings"];
    };
    /** @description Mappings configuration response for Ldap Cloud Identity Provider configuration */
    CloudLdapMappingsResponse: {
      userMappings?: components["schemas"]["UserMappings"];
      groupMappings?: components["schemas"]["GroupMappings"];
      membershipMappings?: components["schemas"]["MembershipMappings"];
    };
    /** @description A Cloud Identity Provider LDAP server configuration for requests */
    CloudLdapServerRequest: {
      /** @example ldap.google.com */
      serverUrl: string;
      /** @example true */
      enabled: boolean;
      /** @example jamf.com */
      domainName: string;
      /** @example 636 */
      port: number;
      keystore: components["schemas"]["CloudLdapKeystoreFile"];
      /** @example 15 */
      connectionTimeout: number;
      /** @example 60 */
      searchTimeout: number;
      /** @example true */
      useWildcards: boolean;
      /**
       * @example LDAPS
       * @enum {string}
       */
      connectionType: "LDAPS" | "START_TLS";
      /** @example true */
      membershipCalculationOptimizationEnabled?: boolean;
    };
    /** @description A Cloud Identity Provider LDAP server configuration for responses */
    CloudLdapServerResponse: {
      /** @example 1001 */
      id?: string;
      /** @example true */
      enabled?: boolean;
      /** @example ldap.google.com */
      serverUrl?: string;
      /** @example jamf.com */
      domainName?: string;
      /** @example 636 */
      port?: number;
      keystore?: components["schemas"]["CloudLdapKeystore"];
      /** @example 15 */
      connectionTimeout?: number;
      /** @example 60 */
      searchTimeout?: number;
      /** @example true */
      useWildcards?: boolean;
      /**
       * @example LDAPS
       * @enum {string}
       */
      connectionType?: "LDAPS" | "START_TLS";
      /** @example true */
      membershipCalculationOptimizationEnabled?: boolean;
    };
    /** @description A Cloud Identity Provider LDAP server configuration for updates */
    CloudLdapServerUpdate: {
      /** @example ldap.google.com */
      serverUrl: string;
      /** @example true */
      enabled: boolean;
      /** @example jamf.com */
      domainName: string;
      /** @example 636 */
      port: number;
      keystore?: components["schemas"]["CloudLdapKeystoreFile"];
      /** @example 15 */
      connectionTimeout: number;
      /** @example 60 */
      searchTimeout: number;
      /** @example true */
      useWildcards: boolean;
      /**
       * @example LDAPS
       * @enum {string}
       */
      connectionType: "LDAPS" | "START_TLS";
      /** @example true */
      membershipCalculationOptimizationEnabled?: boolean;
    };
    CloudResponse: {
      /** @example true */
      cloudInstance?: boolean;
    };
    /** @description Additional, compliance vendor specific device details. */
    ComplianceVendorDeviceInformation: {
      /**
       * @description Vendor's device IDs. Currently provided only for Intune.
       * @example [
       *   "device-id-1",
       *   "device-id-2"
       * ]
       */
      deviceIds?: string[];
    };
    ComputerApplication: {
      /** @example Microsoft Word */
      name?: string;
      /** @example /usr/local/app */
      path?: string;
      /** @example 1.0.0 */
      version?: string;
      /** @example true */
      macAppStore?: boolean;
      /** @example 25 */
      sizeMegabytes?: number;
      /** @example 1 */
      bundleId?: string;
      /** @example false */
      updateAvailable?: boolean;
      /**
       * @description The app's external version ID. It can be used in the iTunes Search API to decide if the app needs to be updated
       * @example 1
       */
      externalVersionId?: string;
    };
    ComputerAttachment: {
      /** @example 1 */
      id?: string;
      /** @example Attachment.pdf */
      name?: string;
      /** @example application/pdf */
      fileType?: string;
      /**
       * Format: int64
       * @description File size in bytes
       * @example 1024
       */
      sizeBytes?: number;
    };
    ComputerCertificate: {
      /** @example jamf.com */
      commonName?: string;
      /** @example true */
      identity?: boolean;
      /**
       * Format: date-time
       * @example 2030-10-31T18:04:13Z
       */
      expirationDate?: string;
      /** @example test */
      username?: string;
      /**
       * @example ACTIVE
       * @enum {string}
       */
      lifecycleStatus?: "ACTIVE" | "INACTIVE";
      /**
       * @example ISSUED
       * @enum {string}
       */
      certificateStatus?: "EXPIRING" | "EXPIRED" | "REVOKED" | "PENDING_REVOKE" | "ISSUED";
      /** @example CN=jamf.com */
      subjectName?: string;
      /** @example 40f3d9fb */
      serialNumber?: string;
      /** @example ed361458724d06082b2314acdb82e1f586f085f5 */
      sha1Fingerprint?: string;
      /** @example 2022-05-23T14:54:10Z */
      issuedDate?: string;
    };
    ComputerConfigurationProfile: {
      /** @example 1 */
      id?: string;
      /** @example username */
      username?: string;
      /**
       * Format: date-time
       * @example 2018-10-31T18:04:13Z
       */
      lastInstalled?: string;
      /** @example true */
      removable?: boolean;
      /** @example Displayed profile */
      displayName?: string;
      /** @example 0ae590fe-9b30-11ea-bb37-0242ac130002 */
      profileIdentifier?: string;
    };
    ComputerContentCaching: {
      /** @example 1 */
      computerContentCachingInformationId?: string;
      parents?: readonly components["schemas"]["ComputerContentCachingParent"][];
      alerts?: readonly components["schemas"]["ComputerContentCachingAlert"][];
      /** @example false */
      activated?: boolean;
      /** @example false */
      active?: boolean;
      /**
       * Format: int64
       * @example 0
       */
      actualCacheBytesUsed?: number;
      cacheDetails?: readonly components["schemas"]["ComputerContentCachingCacheDetail"][];
      /**
       * Format: int64
       * @example 23353884672
       */
      cacheBytesFree?: number;
      /**
       * Format: int64
       * @example 0
       */
      cacheBytesLimit?: number;
      /** @example OK */
      cacheStatus?: string;
      /**
       * Format: int64
       * @example 0
       */
      cacheBytesUsed?: number;
      /** @example false */
      dataMigrationCompleted?: boolean;
      /** @example 0 */
      dataMigrationProgressPercentage?: number;
      dataMigrationError?: components["schemas"]["ComputerContentCachingDataMigrationError"];
      /** @example 0 */
      maxCachePressureLast1HourPercentage?: number;
      /**
       * Format: int64
       * @example 23353884672
       */
      personalCacheBytesFree?: number;
      /**
       * Format: int64
       * @example 0
       */
      personalCacheBytesLimit?: number;
      /**
       * Format: int64
       * @example 0
       */
      personalCacheBytesUsed?: number;
      /**
       * Format: int64
       * @example 0
       */
      port?: number;
      /** @example SomeAddress */
      publicAddress?: string;
      /** @example NOT_ACTIVATED */
      registrationError?: string;
      /**
       * Format: int64
       * @example 403
       */
      registrationResponseCode?: number;
      /**
       * Format: date-time
       * @example 2018-10-31T18:04:13Z
       */
      registrationStarted?: string;
      /**
       * @example CONTENT_CACHING_FAILED
       * @enum {string}
       */
      registrationStatus?: "CONTENT_CACHING_FAILED" | "CONTENT_CACHING_PENDING" | "CONTENT_CACHING_SUCCEEDED";
      /** @example false */
      restrictedMedia?: boolean;
      /** @example CD1E1291-4AF9-4468-B5D5-0F780C13DB2F */
      serverGuid?: string;
      /** @example FAILED */
      startupStatus?: string;
      /**
       * @example CONTENT_CACHING_DISABLED
       * @enum {string}
       */
      tetheratorStatus?: "CONTENT_CACHING_UNKNOWN" | "CONTENT_CACHING_DISABLED" | "CONTENT_CACHING_ENABLED";
      /**
       * Format: date-time
       * @example 2018-10-31T18:04:13Z
       */
      totalBytesAreSince?: string;
      /**
       * Format: int64
       * @example 0
       */
      totalBytesDropped?: number;
      /**
       * Format: int64
       * @example 0
       */
      totalBytesImported?: number;
      /**
       * Format: int64
       * @example 0
       */
      totalBytesReturnedToChildren?: number;
      /**
       * Format: int64
       * @example 0
       */
      totalBytesReturnedToClients?: number;
      /**
       * Format: int64
       * @example 0
       */
      totalBytesReturnedToPeers?: number;
      /**
       * Format: int64
       * @example 0
       */
      totalBytesStoredFromOrigin?: number;
      /**
       * Format: int64
       * @example 0
       */
      totalBytesStoredFromParents?: number;
      /**
       * Format: int64
       * @example 0
       */
      totalBytesStoredFromPeers?: number;
    };
    ComputerContentCachingAlert: {
      /**
       * Format: int64
       * @example 0
       */
      cacheBytesLimit?: number;
      /** @example SomeClass */
      className?: string;
      /** @example /some/path */
      pathPreventingAccess?: string;
      /**
       * Format: date-time
       * @example 2018-10-31T18:04:13Z
       */
      postDate?: string;
      /**
       * Format: int64
       * @example 0
       */
      reservedVolumeBytes?: number;
      /** @example SomeResource */
      resource?: string;
    };
    ComputerContentCachingCacheDetail: {
      /** @example 1 */
      computerContentCachingCacheDetailsId?: string;
      /** @example SomeCategory */
      categoryName?: string;
      /**
       * Format: int64
       * @example 0
       */
      diskSpaceBytesUsed?: number;
    };
    ComputerContentCachingDataMigrationError: {
      /**
       * Format: int64
       * @example 0
       */
      code?: number;
      /** @example SomeDomain */
      domain?: string;
      userInfo?: readonly components["schemas"]["ComputerContentCachingDataMigrationErrorUserInfo"][];
    };
    ComputerContentCachingDataMigrationErrorUserInfo: {
      /** @example foo */
      key?: string;
      /** @example bar */
      value?: string;
    };
    ComputerContentCachingParent: {
      /** @example 1 */
      contentCachingParentId?: string;
      /** @example SomeAddress */
      address?: string;
      alerts?: components["schemas"]["ComputerContentCachingParentAlert"];
      details?: components["schemas"]["ComputerContentCachingParentDetails"];
      /** @example CD1E1291-4AF9-4468-B5D5-0F780C13DB2F */
      guid?: string;
      /** @example true */
      healthy?: boolean;
      /**
       * Format: int64
       * @example 0
       */
      port?: number;
      /** @example 1 */
      version?: string;
    };
    ComputerContentCachingParentAlert: {
      /** @example 1 */
      contentCachingParentAlertId?: string;
      /** @example [] */
      addresses?: readonly string[];
      /** @example SomeClass */
      className?: string;
      /**
       * Format: date-time
       * @example 2018-10-31T18:04:13Z
       */
      postDate?: string;
    };
    ComputerContentCachingParentCapabilities: {
      /** @example 1 */
      contentCachingParentCapabilitiesId?: string;
      /** @example true */
      imports?: boolean;
      /** @example true */
      namespaces?: boolean;
      /** @example true */
      personalContent?: boolean;
      /** @example true */
      queryParameters?: boolean;
      /** @example true */
      sharedContent?: boolean;
      /** @example true */
      prioritization?: boolean;
    };
    ComputerContentCachingParentDetails: {
      /** @example 1 */
      contentCachingParentDetailsId?: string;
      /** @example true */
      acPower?: boolean;
      /**
       * Format: int64
       * @example 0
       */
      cacheSizeBytes?: number;
      capabilities?: components["schemas"]["ComputerContentCachingParentCapabilities"];
      /** @example true */
      portable?: boolean;
      localNetwork?: components["schemas"]["ComputerContentCachingParentLocalNetwork"][];
    };
    ComputerContentCachingParentLocalNetwork: {
      /** @example 1 */
      contentCachingParentLocalNetworkId?: string;
      /**
       * Format: int64
       * @example 5000
       */
      speed?: number;
      /** @example true */
      wired?: boolean;
    };
    ComputerDisk: {
      /** @example 170 */
      id?: string;
      /** @example disk0 */
      device?: string;
      /** @example APPLE HDD TOSHIBA MK5065GSXF */
      model?: string;
      /** @example 5 */
      revision?: string;
      /** @example a8598f013366 */
      serialNumber?: string;
      /**
       * Format: int64
       * @description Disk Size in MB.
       * @example 262144
       */
      sizeMegabytes?: number;
      /**
       * @description S.M.A.R.T Status
       * @example OK
       */
      smartStatus?: string;
      /**
       * @description Connection type attribute.
       * @example false
       */
      type?: string;
      partitions?: components["schemas"]["ComputerPartition"][];
    };
    ComputerDiskEncryption: {
      bootPartitionEncryptionDetails?: components["schemas"]["ComputerPartitionEncryption"];
      /**
       * @example VALID
       * @enum {string}
       */
      individualRecoveryKeyValidityStatus?: "VALID" | "INVALID" | "UNKNOWN" | "NOT_APPLICABLE";
      /** @example true */
      institutionalRecoveryKeyPresent?: boolean;
      /** @example Test configuration */
      diskEncryptionConfigurationName?: string;
      /**
       * @example [
       *   "admin"
       * ]
       */
      fileVault2EnabledUserNames?: string[];
      /** @example Not a boot partition */
      fileVault2EligibilityMessage?: string;
    };
    ComputerExtensionAttribute: {
      /**
       * @description An identifier of extension attribute definition.
       * @example 23
       */
      definitionId?: string;
      /**
       * @description A human-readable name by which attribute can be referred to.
       * @example Some Attribute
       */
      name?: string;
      /**
       * @description An additional explanation of exact attribute meaning, possible values, etc.
       * @example Some Attribute defines how much Foo impacts Bar.
       */
      description?: string | null;
      /** @example true */
      enabled?: boolean;
      /** @example true */
      multiValue?: boolean;
      /**
       * @description A value of extension attribute, in some rare cases there may be multiple values present, hence the array.
       *
       * @example [
       *   "foo",
       *   "bar"
       * ]
       */
      values?: string[] | null;
      /**
       * @description A data type of extension attribute.
       * @example STRING
       * @enum {string|null}
       */
      dataType?: "STRING" | "INTEGER" | "DATE_TIME" | null;
      /**
       * @description A closed list of possible values (applies to `popup` input type).
       *
       * @example [
       *   "foo",
       *   "bar"
       * ]
       */
      options?: (readonly string[]) | null;
      /**
       * @description The input method. `text` is most common and means simply free text, `popup` i a closed list of values from
       * which one or many can be selected and `script` value is calculated and can never be set directly.
       *
       * @example TEXT
       * @enum {string|null}
       */
      inputType?: "TEXT" | "POPUP" | "SCRIPT" | "LDAP" | null;
    };
    ComputerFont: {
      /** @example font name */
      name?: string;
      /** @example 1.02 */
      version?: string;
      /** @example /Applications/ */
      path?: string;
    };
    ComputerGeneral: {
      /** @example Boalime */
      name?: string;
      /** @example 247.185.82.186 */
      lastIpAddress?: string;
      /** @example 247.185.82.186 */
      lastReportedIp?: string;
      /** @example 9.27 */
      jamfBinaryVersion?: string;
      /** @example Mac */
      platform?: string;
      /** @example 5 12345 678900 */
      barcode1?: string;
      /** @example 5 12345 678900 */
      barcode2?: string;
      /** @example 304822 */
      assetTag?: string;
      remoteManagement?: components["schemas"]["ComputerRemoteManagement"];
      /** @example true */
      supervised?: boolean;
      mdmCapable?: components["schemas"]["ComputerMdmCapability"];
      /**
       * Format: date-time
       * @example 2018-10-31T18:04:13Z
       */
      reportDate?: string;
      /**
       * Format: date-time
       * @example 2018-10-31T18:04:13Z
       */
      lastContactTime?: string;
      /**
       * Format: date-time
       * @example 2018-10-31T18:04:13Z
       */
      lastCloudBackupDate?: string;
      /**
       * Format: date-time
       * @example 2018-10-31T18:04:13Z
       */
      lastEnrolledDate?: string;
      /**
       * Format: date-time
       * @example 2018-10-31T18:04:13Z
       */
      mdmProfileExpiration?: string;
      /**
       * Format: date
       * @example 2018-10-31
       */
      initialEntryDate?: string;
      /** @example distribution point name */
      distributionPoint?: string;
      enrollmentMethod?: components["schemas"]["EnrollmentMethod"];
      site?: components["schemas"]["V1Site"];
      /** @example true */
      itunesStoreAccountActive?: boolean;
      /** @example true */
      enrolledViaAutomatedDeviceEnrollment?: boolean;
      /** @example true */
      userApprovedMdm?: boolean;
      /** @example true */
      declarativeDeviceManagementEnabled?: boolean;
      extensionAttributes?: components["schemas"]["ComputerExtensionAttribute"][];
      /** @example 73226fb6-61df-4c10-9552-eb9bc353d507 */
      managementId?: string;
    };
    ComputerGeneralUpdate: {
      /** @example Boalime */
      name?: string;
      /** @example 247.185.82.186 */
      lastIpAddress?: string;
      /** @example 5 12345 678900 */
      barcode1?: string;
      /** @example 5 12345 678900 */
      barcode2?: string;
      /** @example 304822 */
      assetTag?: string;
      /** @example true */
      managed?: boolean;
      /** @example 1 */
      siteId?: string;
      extensionAttributes?: components["schemas"]["ComputerExtensionAttribute"][];
    };
    ComputerGroup: {
      /** @example 1 */
      id?: string;
      /** @example All Managed Computers */
      name?: string;
      /** @example true */
      smartGroup?: boolean;
    };
    ComputerHardware: {
      /** @example Apple */
      make?: string;
      /** @example 13-inch MacBook Pro (Mid 2012) */
      model?: string;
      /** @example MacBookPro9,2 */
      modelIdentifier?: string;
      /** @example C02ZC2QYLVDL */
      serialNumber?: string;
      /**
       * Format: int64
       * @description Processor Speed in MHz.
       * @example 2100
       */
      processorSpeedMhz?: number;
      /** @example 2 */
      processorCount?: number;
      /** @example 2 */
      coreCount?: number;
      /** @example Intel Core i5 */
      processorType?: string;
      /** @example i386 */
      processorArchitecture?: string;
      /**
       * Format: int64
       * @example 2133
       */
      busSpeedMhz?: number;
      /**
       * Format: int64
       * @description Cache Size in KB.
       * @example 3072
       */
      cacheSizeKilobytes?: number;
      /** @example Foo */
      networkAdapterType?: string;
      /** @example 6A:2C:4B:B7:65:B5 */
      macAddress?: string;
      /** @example Bar */
      altNetworkAdapterType?: string;
      /** @example 82:45:58:44:dc:01 */
      altMacAddress?: string;
      /**
       * Format: int64
       * @description Total RAM Size in MB.
       * @example 4096
       */
      totalRamMegabytes?: number;
      /**
       * @description Available RAM slots.
       * @example 0
       */
      openRamSlots?: number;
      /**
       * @description Remaining percentage of battery power.
       * @example 85
       */
      batteryCapacityPercent?: number;
      /** @example 2.2f38 */
      smcVersion?: string;
      /** @example N/A */
      nicSpeed?: string;
      /** @example MATSHITA DVD-R UJ-8A8 */
      opticalDrive?: string;
      /** @example MBP91.00D3.B08 */
      bootRom?: string;
      /** @example false */
      bleCapable?: boolean;
      /** @example false */
      supportsIosAppInstalls?: boolean;
      /** @example false */
      appleSilicon?: boolean;
      extensionAttributes?: components["schemas"]["ComputerExtensionAttribute"][];
    };
    ComputerHardwareUpdate: {
      /** @example Foo */
      networkAdapterType?: string;
      /** @example 6A:2C:4B:B7:65:B5 */
      macAddress?: string;
      /** @example Bar */
      altNetworkAdapterType?: string;
      /** @example 82:45:58:44:dc:01 */
      altMacAddress?: string;
      extensionAttributes?: components["schemas"]["ComputerExtensionAttribute"][];
    };
    ComputerIbeacon: {
      /** @example room A */
      name?: string;
    };
    ComputerInventory: {
      /** @example 1 */
      id?: string;
      /** @example 123 */
      udid?: string;
      general?: components["schemas"]["ComputerGeneral"];
      diskEncryption?: components["schemas"]["ComputerDiskEncryption"];
      purchasing?: components["schemas"]["ComputerPurchase"];
      applications?: components["schemas"]["ComputerApplication"][];
      storage?: components["schemas"]["ComputerStorage"];
      userAndLocation?: components["schemas"]["ComputerUserAndLocation"];
      configurationProfiles?: components["schemas"]["ComputerConfigurationProfile"][];
      printers?: components["schemas"]["ComputerPrinter"][];
      services?: components["schemas"]["ComputerService"][];
      hardware?: components["schemas"]["ComputerHardware"];
      localUserAccounts?: components["schemas"]["ComputerLocalUserAccount"][];
      certificates?: components["schemas"]["ComputerCertificate"][];
      attachments?: components["schemas"]["ComputerAttachment"][];
      plugins?: components["schemas"]["ComputerPlugin"][];
      packageReceipts?: components["schemas"]["ComputerPackageReceipts"];
      fonts?: components["schemas"]["ComputerFont"][];
      security?: components["schemas"]["ComputerSecurity"];
      operatingSystem?: components["schemas"]["ComputerOperatingSystem"];
      licensedSoftware?: components["schemas"]["ComputerLicensedSoftware"][];
      ibeacons?: components["schemas"]["ComputerIbeacon"][];
      softwareUpdates?: components["schemas"]["ComputerSoftwareUpdate"][];
      extensionAttributes?: components["schemas"]["ComputerExtensionAttribute"][];
      contentCaching?: components["schemas"]["ComputerContentCaching"];
      groupMemberships?: components["schemas"]["GroupMembership"][];
    };
    ComputerInventoryCollectionPreferences: {
      /**
       * @default false
       * @example true
       */
      monitorApplicationUsage?: boolean;
      /**
       * @default false
       * @example true
       */
      includeFonts?: boolean;
      /**
       * @default false
       * @example true
       */
      includePlugins?: boolean;
      /**
       * @default false
       * @example true
       */
      includePackages?: boolean;
      /**
       * @default false
       * @example true
       */
      includeSoftwareUpdates?: boolean;
      /**
       * @default false
       * @example true
       */
      includeSoftwareId?: boolean;
      /**
       * @default false
       * @example true
       */
      includeAccounts?: boolean;
      /**
       * @default false
       * @example false
       */
      calculateSizes?: boolean;
      /**
       * @default false
       * @example true
       */
      includeHiddenAccounts?: boolean;
      /**
       * @default false
       * @example true
       */
      includePrinters?: boolean;
      /**
       * @default false
       * @example true
       */
      includeServices?: boolean;
      /**
       * @default false
       * @example false
       */
      collectSyncedMobileDeviceInfo?: boolean;
      /**
       * @default false
       * @example false
       */
      updateLdapInfoOnComputerInventorySubmissions?: boolean;
      /**
       * @default false
       * @example true
       */
      monitorBeacons?: boolean;
      /**
       * @default true
       * @example true
       */
      allowChangingUserAndLocation?: boolean;
      /**
       * @default true
       * @example true
       */
      useUnixUserPaths?: boolean;
      /**
       * @default true
       * @example true
       */
      collectUnmanagedCertificates?: boolean;
    };
    ComputerInventoryCollectionSettings: {
      computerInventoryCollectionPreferences?: components["schemas"]["ComputerInventoryCollectionPreferences"];
      applicationPaths?: components["schemas"]["AppPath"][];
      fontPaths?: components["schemas"]["FontPath"][];
      pluginPaths?: components["schemas"]["PluginPath"][];
    };
    ComputerInventoryFileVault: {
      /** @example 1 */
      computerId?: string;
      /** @example Boalime */
      name?: string;
      /** @example Z4A6-ONF8-KUHD-AVTG-C3ER-6A8G */
      personalRecoveryKey?: string;
      bootPartitionEncryptionDetails?: components["schemas"]["ComputerPartitionEncryption"];
      /**
       * @example VALID
       * @enum {string}
       */
      individualRecoveryKeyValidityStatus?: "VALID" | "INVALID" | "UNKNOWN" | "NOT_APPLICABLE";
      /** @example true */
      institutionalRecoveryKeyPresent?: boolean;
      /** @example Test configuration */
      diskEncryptionConfigurationName?: string;
    };
    ComputerInventoryFileVaultSearchResults: {
      /** @example 3 */
      totalCount?: number;
      results?: components["schemas"]["ComputerInventoryFileVault"][];
    };
    ComputerInventoryRecoveryLockPasswordResponse: {
      /**
       * Format: password
       * @example password123
       */
      recoveryLockPassword?: string;
    };
    ComputerInventorySearchResults: {
      /** @example 3 */
      totalCount?: number;
      results?: components["schemas"]["ComputerInventory"][];
    };
    ComputerInventoryUpdateRequest: {
      /** @example 45436edf-864e-4364-982a-330b01d39e65 */
      udid?: string;
      general?: components["schemas"]["ComputerGeneralUpdate"];
      purchasing?: components["schemas"]["ComputerPurchase"];
      userAndLocation?: components["schemas"]["ComputerUserAndLocation"];
      hardware?: components["schemas"]["ComputerHardwareUpdate"];
      operatingSystem?: components["schemas"]["ComputerOperatingSystemUpdate"];
      extensionAttributes?: components["schemas"]["ComputerExtensionAttribute"][];
    };
    ComputerLicensedSoftware: {
      /** @example 1 */
      id?: string;
      /** @example Microsoft Word */
      name?: string;
    };
    ComputerLocalUserAccount: {
      /** @example 501 */
      uid?: string;
      /** @example 844F1177-0CF5-40C6-901F-38EDD9969C1C */
      userGuid?: string;
      /** @example jamf */
      username?: string;
      /** @example John Jamf */
      fullName?: string;
      /** @example true */
      admin?: boolean;
      /** @example /Users/jamf */
      homeDirectory?: string;
      /**
       * Format: int64
       * @description Home directory size in MB.
       * @example 131072
       */
      homeDirectorySizeMb?: number;
      /** @example true */
      fileVault2Enabled?: boolean;
      /**
       * @example LOCAL
       * @enum {string}
       */
      userAccountType?: "LOCAL" | "MOBILE" | "UNKNOWN";
      /** @example 4 */
      passwordMinLength?: number;
      /** @example 5 */
      passwordMaxAge?: number;
      /** @example 5 */
      passwordMinComplexCharacters?: number;
      /** @example 5 */
      passwordHistoryDepth?: number;
      /** @example true */
      passwordRequireAlphanumeric?: boolean;
      /** @example 1 */
      computerAzureActiveDirectoryId?: string;
      /** @example 1 */
      userAzureActiveDirectoryId?: string;
      /**
       * @example ACTIVATED
       * @enum {string}
       */
      azureActiveDirectoryId?: "ACTIVATED" | "DEACTIVATED" | "UNRESPONSIVE" | "UNKNOWN";
    };
    ComputerLocation: {
      /** @example admin */
      username?: string;
      /** @example IT Team Lead */
      position?: string;
      /** @example 4th Floor - Quad 3 */
      room?: string;
    };
    ComputerMdmCapability: {
      /** @example true */
      capable?: boolean;
      /**
       * @example [
       *   "admin",
       *   "rootadmin"
       * ]
       */
      capableUsers?: string[];
    };
    ComputerOperatingSystem: {
      /** @example Mac OS X */
      name?: string;
      /** @example 10.9.5 */
      version?: string;
      /** @example 13A603 */
      build?: string;
      /**
       * @description Collected for macOS 13.0 or later
       * @example 13A953
       */
      supplementalBuildVersion?: string;
      /**
       * @description Collected for macOS 13.0 or later
       * @example (a)
       */
      rapidSecurityResponse?: string;
      /** @example Not Bound */
      activeDirectoryStatus?: string;
      /**
       * @example ALL_ENCRYPTED
       * @enum {string}
       */
      fileVault2Status?: "NOT_APPLICABLE" | "NOT_ENCRYPTED" | "BOOT_ENCRYPTED" | "SOME_ENCRYPTED" | "ALL_ENCRYPTED";
      /** @example J132AP */
      softwareUpdateDeviceId?: string;
      extensionAttributes?: components["schemas"]["ComputerExtensionAttribute"][];
    };
    ComputerOperatingSystemUpdate: {
      extensionAttributes?: components["schemas"]["ComputerExtensionAttribute"][];
    };
    ComputerOverview: {
      /** @example 7 */
      id?: string;
      location?: components["schemas"]["ComputerLocation"];
      /** @example Zach's hand me down MacBook Pro */
      name?: string;
      /** @example 6E47EF55-5318-494F-A09E-70F613E0AFD1 */
      udid?: string;
      /** @example C02L29ECF8J1 */
      serialNumber?: string;
      /** @example 2000-04-25T21:09:31.661Z */
      lastContactDate?: string;
      /** @example 2000-04-25T21:09:31.661Z */
      lastReportDate?: string;
      /** @example 2000-04-25T21:09:31.661Z */
      lastEnrolledDate?: string;
      /** @example 10.9.5 */
      operatingSystemVersion?: string;
      /** @example TK421 */
      operatingSystemBuild?: string;
      /**
       * @description Collected for macOS 13.0 or later
       * @example TK953
       */
      operatingSystemSupplementalBuildVersion?: string;
      /**
       * @description Collected for macOS 13.0 or later
       * @example (a)
       */
      operatingSystemRapidSecurityResponse?: string;
      /** @example 93.184.216.34 */
      ipAddress?: string;
      /** @example F3:7C:6F:2C:B6:76 */
      macAddress?: string;
      /** @example A123BC */
      assetTag?: string;
      /** @example MNYF2XX/A */
      modelIdentifier?: string;
      /** @example 1 */
      mdmAccessRights?: number;
      /** @example true */
      isManaged?: boolean;
      /** @example 73226fb6-61df-4c10-9552-eb9bc353d507 */
      managementId?: string;
    };
    /** @description All package receipts are listed by their package name */
    ComputerPackageReceipts: {
      installedByJamfPro?: string[];
      installedByInstallerSwu?: string[];
      cached?: string[];
    };
    ComputerPartition: {
      /** @example Foo */
      name?: string;
      /**
       * Format: int64
       * @description Partition Size in MB.
       * @example 262144
       */
      sizeMegabytes?: number;
      /**
       * Format: int64
       * @description Available space in MB.
       * @example 131072
       */
      availableMegabytes?: number;
      /**
       * @example BOOT
       * @enum {string}
       */
      partitionType?: "BOOT" | "RECOVERY" | "OTHER";
      /**
       * @description Percentage of space used.
       * @example 25
       */
      percentUsed?: number;
      fileVault2State?: components["schemas"]["ComputerPartitionFileVault2State"];
      /**
       * @description Percentage progress of current FileVault 2 operation.
       * @example 45
       */
      fileVault2ProgressPercent?: number | null;
      /** @example true */
      lvmManaged?: boolean;
    };
    ComputerPartitionEncryption: {
      /** @example main */
      partitionName?: string;
      partitionFileVault2State?: components["schemas"]["ComputerPartitionFileVault2State"];
      /** @example 100 */
      partitionFileVault2Percent?: number;
    };
    /**
     * @example VALID
     * @enum {string}
     */
    ComputerPartitionFileVault2State: "UNKNOWN" | "UNENCRYPTED" | "INELIGIBLE" | "DECRYPTED" | "DECRYPTING" | "ENCRYPTED" | "ENCRYPTING" | "RESTART_NEEDED" | "OPTIMIZING" | "DECRYPTING_PAUSED" | "ENCRYPTING_PAUSED";
    ComputerPlugin: {
      /** @example plugin name */
      name?: string;
      /** @example 1.02 */
      version?: string;
      /** @example /Applications/ */
      path?: string;
    };
    ComputerPrestageSearchResultsV2: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["GetComputerPrestageV2"][];
    };
    ComputerPrestageSearchResultsV3: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["GetComputerPrestageV3"][];
    };
    ComputerPrestageV2: components["schemas"]["DeviceEnrollmentPrestageV2"] & ({
      /** @example true */
      installProfilesDuringSetup: boolean;
      prestageInstalledProfileIds: string[];
      customPackageIds: string[];
      /** @example 1 */
      customPackageDistributionPointId: string;
      /** @example true */
      enableRecoveryLock?: boolean;
      /**
       * @example MANUAL
       * @enum {string}
       */
      recoveryLockPasswordType?: "MANUAL" | "RANDOM";
      /** @example true */
      rotateRecoveryLockPassword?: boolean;
    });
    ComputerPrestageV3: components["schemas"]["DeviceEnrollmentPrestageV2"] & ({
      /** @example true */
      installProfilesDuringSetup: boolean;
      prestageInstalledProfileIds: string[];
      customPackageIds: string[];
      /** @example 1 */
      customPackageDistributionPointId: string;
      /** @example true */
      enableRecoveryLock?: boolean;
      /**
       * @example MANUAL
       * @enum {string}
       */
      recoveryLockPasswordType?: "MANUAL" | "RANDOM";
      /** @example true */
      rotateRecoveryLockPassword?: boolean;
    });
    ComputerPrinter: {
      /** @example My Printer */
      name?: string;
      /** @example XYZ 1122 */
      type?: string;
      /** @example ipp://10.0.0.5 */
      uri?: string;
      /** @example 7th floor */
      location?: string;
    };
    ComputerPurchase: {
      /** @example true */
      leased?: boolean;
      /** @example true */
      purchased?: boolean;
      /** @example 53-1 */
      poNumber?: string;
      /**
       * Format: date
       * @example 2019-01-01
       */
      poDate?: string;
      /** @example Example Vendor */
      vendor?: string;
      /**
       * Format: date
       * @example 2019-01-01
       */
      warrantyDate?: string;
      /** @example abcd */
      appleCareId?: string;
      /**
       * Format: date
       * @example 2019-01-01
       */
      leaseDate?: string;
      /** @example $500 */
      purchasePrice?: string;
      /** @example 5 */
      lifeExpectancy?: number;
      /** @example admin */
      purchasingAccount?: string;
      /** @example true */
      purchasingContact?: string;
      extensionAttributes?: components["schemas"]["ComputerExtensionAttribute"][];
    };
    ComputerRemoteManagement: {
      /** @example true */
      managed?: boolean;
      /** @example rootname */
      managementUsername?: string;
      /**
       * Format: password
       * @example example password
       */
      managementPassword?: string;
    };
    /**
     * @example general
     * @enum {string}
     */
    ComputerSection: "GENERAL" | "DISK_ENCRYPTION" | "PURCHASING" | "APPLICATIONS" | "STORAGE" | "USER_AND_LOCATION" | "CONFIGURATION_PROFILES" | "PRINTERS" | "SERVICES" | "HARDWARE" | "LOCAL_USER_ACCOUNTS" | "CERTIFICATES" | "ATTACHMENTS" | "PLUGINS" | "PACKAGE_RECEIPTS" | "FONTS" | "SECURITY" | "OPERATING_SYSTEM" | "LICENSED_SOFTWARE" | "IBEACONS" | "SOFTWARE_UPDATES" | "EXTENSION_ATTRIBUTES" | "CONTENT_CACHING" | "GROUP_MEMBERSHIPS";
    ComputerSecurity: {
      /**
       * @example ENABLED
       * @enum {string}
       */
      sipStatus?: "NOT_COLLECTED" | "NOT_AVAILABLE" | "DISABLED" | "ENABLED";
      /**
       * @example APP_STORE_AND_IDENTIFIED_DEVELOPERS
       * @enum {string}
       */
      gatekeeperStatus?: "NOT_COLLECTED" | "DISABLED" | "APP_STORE_AND_IDENTIFIED_DEVELOPERS" | "APP_STORE";
      /** @example 1.2.3 */
      xprotectVersion?: string;
      /** @example false */
      autoLoginDisabled?: boolean;
      /**
       * @description Collected for macOS 10.14.4 or later
       * @example true
       */
      remoteDesktopEnabled?: boolean;
      /**
       * @description Collected for macOS 10.15.0 or later
       * @example true
       */
      activationLockEnabled?: boolean;
      /** @example true */
      recoveryLockEnabled?: boolean;
      /** @example true */
      firewallEnabled?: boolean;
      /**
       * @description Collected for macOS 10.15.0 or later
       * @example FULL_SECURITY
       * @enum {string}
       */
      secureBootLevel?: "NO_SECURITY" | "MEDIUM_SECURITY" | "FULL_SECURITY" | "NOT_SUPPORTED" | "UNKNOWN";
      /**
       * @description Collected for macOS 10.15.0 or later
       * @example ALLOW_BOOTING_FROM_EXTERNAL_MEDIA
       * @enum {string}
       */
      externalBootLevel?: "ALLOW_BOOTING_FROM_EXTERNAL_MEDIA" | "DISALLOW_BOOTING_FROM_EXTERNAL_MEDIA" | "NOT_SUPPORTED" | "UNKNOWN";
      /**
       * @description Collected for macOS 11 or later
       * @example true
       */
      bootstrapTokenAllowed?: boolean;
    };
    ComputerService: {
      /** @example SomeService */
      name?: string;
    };
    ComputerSoftwareUpdate: {
      /** @example BEdit */
      name?: string;
      /** @example 1.15.2 */
      version?: string;
      /** @example com.apple.pkg.AdditionalEssentials */
      packageName?: string;
    };
    ComputerStorage: {
      /**
       * Format: int64
       * @example 3072
       */
      bootDriveAvailableSpaceMegabytes?: number;
      disks?: components["schemas"]["ComputerDisk"][];
    };
    ComputerUserAndLocation: {
      /** @example Madison Anderson */
      username?: string;
      /** @example 13-inch MacBook */
      realname?: string;
      /** @example email@com.pl */
      email?: string;
      /** @example IT Team Lead */
      position?: string;
      /** @example 123-456-789 */
      phone?: string;
      /** @example 1 */
      departmentId?: string;
      /** @example 1 */
      buildingId?: string;
      /** @example 5 */
      room?: string;
      extensionAttributes?: components["schemas"]["ComputerExtensionAttribute"][];
    };
    ComputersSearchResults: {
      /** @example 3 */
      totalCount?: number;
      results?: components["schemas"]["ComputerOverview"][];
    };
    ConfigurationProfile: {
      /** @example Test WiFi */
      displayName?: string;
      /** @example 1 */
      version?: string;
      /** @example D29DD9FB-0D5B-422F-A3A2-ABBC5848E949 */
      uuid?: string;
      /** @example ac2-server4.D0EFAC2D-326C-4BB6-87E6-2BCB88490AAA */
      identifier?: string;
    };
    /** @description A list with Cloud Identity Providers informations about configurations */
    ConfigurationSearchResults: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["CloudIdPCommonResponse"][];
    };
    /** @description Request that creates configuration and initialize connection between Jamf Pro and Team Viewer */
    ConnectionConfigurationCandidateRequest: {
      /**
       * @description An identifier of a site which Team Viewer Remote Administration will be configured on
       * @example 1
       */
      siteId: string;
      /**
       * @description Name for Team Viewer Connection Configuration
       * @example teamViewerConfiguration
       */
      displayName: string;
      /**
       * @description Token which is used for connecting to Team Viewer
       * @example 12847340-nPAX96bsaADH4Gz6K6i2
       */
      scriptToken: string;
      /**
       * @description Defines the intent to enable or disable Team Viewer connection
       * @example true
       */
      enabled: boolean;
      /**
       * @description Number of minutes before the session expires
       * @example 15
       */
      sessionTimeout: number;
    };
    /** @description Response that contains information about connection configuration for Team Viewer */
    ConnectionConfigurationResponse: {
      /**
       * @description An identifier of connection configuration for Team Viewer Remote Administration
       * @example 1
       */
      id: string;
      /**
       * @description An identifier of a site which Team Viewer Remote Administration is configured on
       * @example 1
       */
      siteId: string;
      /**
       * @description Name for Team Viewer Connection Configuration
       * @example teamViewerConfiguration
       */
      displayName: string;
      /**
       * @description Describes if Team Viewer connection is enabled or disabled
       * @example true
       */
      enabled: boolean;
      /**
       * @description Number of minutes before the session expires
       * @example 15
       */
      sessionTimeout: number | null;
    };
    /** @description Response that contains connection configuration status for Team Viewer */
    ConnectionConfigurationStatusResponse: {
      /**
       * @description connection configuration status for Team Viewer
       * @example VALID
       */
      connectionVerificationResult: string;
    };
    /** @description Request that updates configuration connection between Jamf Pro and Team Viewer */
    ConnectionConfigurationUpdateRequest: {
      /**
       * @description Name for Team Viewer Connection Configuration
       * @example teamViewerConfiguration
       */
      displayName?: string;
      /**
       * @description Defines the intent to enable or disable Team Viewer connection
       * @example true
       */
      enabled?: boolean;
      /**
       * @description Number of minutes before the session expires
       * @example 15
       */
      sessionTimeout?: number;
      /**
       * @description Script token for Team Viewer Connection Configuration
       * @example 12843140-nPAX96bsaADH4Gz6K6i2
       */
      token?: string;
    };
    Country: {
      /** @example US */
      code?: string;
      /** @example United States */
      name?: string;
    };
    CountryCodes: {
      countryCodes?: components["schemas"]["Country"][];
    };
    CreatePath: {
      /**
       * @example APP
       * @enum {string}
       */
      scope: "APP" | "FONT" | "PLUGIN";
      /** @example /Example/Path/ */
      path: string;
    };
    Credentials: {
      /**
       * Format: password
       * @example TESTYBLF477T5THW6BNN
       */
      accessKeyID?: string;
      /**
       * Format: int64
       * @example 1678386302
       */
      expiration?: number;
      /**
       * Format: password
       * @example tEstNvpw2AC9mggf08/Yw7krkPfYxWNoByGClLr7
       */
      secretAccessKey?: string;
      /** @example TEsTb3JpZ2luX2VjEKr//////////wEaCXVzLWVhc3QtMSJHMEUCIQCwp+L32PlSQjeb/Pimk3AUPv3SADpSQv22pK2YqpOjhAIgDfrMNA9asxymToN9ntJrXn9i0bbOhkPAmewDBJ9RqCsqrQIIYxADGgw1NTI2NTM4ODEzMTkiDCmmPWNQKIMfmVIXNSqKAlWem+7n2ApbcAlPxtl5l8mQJz5wqPaUuBlwhuG9Fn7dPUeaHA6ZZjrEegjJOvMkATPEfoD/2o272WXegzC+VVuadrRP+x+pmSnkikqNVz43t6csUTZC61GXsEcsfgRcLHauRoR6vq9aVPRYXckztGjmFb4GpICbR/wc94nJZ6Yw1YZ63UrmEdnJIKSvy/tAoFhJuufy/JOFQEuyW/N38bg+d/xLMNfhMMUSfOE9TOFlI9gOvyOPQVBocckknPD+HWj+nin1SSIy+mH6wMoZNYdRe/J8d5lmjgeiL7l/FmdMmbB7vDdPGCe5hPvJwGpGv6FRnk31NZNFNP//csVTVszGiUmRuY3R2hPUMO6sqKAGOp0BvZ5WAPpip/YMfvCzkzLI0EHlLwHHenor0IenM75eCW+pGqJreU/VIbadRyzncUL4zIa3DBKxgIP/h5uFoSm0ZGdQSAovXtHRQwDBNhdksvqsxQsExn8BjjLh6tFVkBGb4IXY9sS5K7tIwnqOtcT1FEYxQ08RqkJAaP08eCIYbBrWW71S2bNUfIv6KFOG77pz88vw9vHOjxVRjTrfCQ== */
      sessionToken?: string;
      /** @example us-east-1 */
      region?: string;
      /** @example sbox-test-bucket */
      bucketName?: string;
      /** @example tmp/fc041b05-516e-4bde-9882-a08b1cc5473c/ */
      path?: string;
      /** @example fc041b05-516e-4bde-9882-a08b1cc5473c */
      uuid?: string;
    };
    CsaToken: {
      /** @example 1584544108 */
      refreshExpiration?: number;
      /**
       * @example [
       *   "read mobile_device",
       *   "write mobile_device"
       * ]
       */
      scopes?: string[];
    };
    CurrentAccount: {
      /** @example 1 */
      id?: number;
      /** @example admin */
      username?: string;
      /** @example IT Bob */
      realName?: string;
      /** @example ITBob@Jamf.com */
      email?: string;
      preferences?: components["schemas"]["AccountPreferences"];
      /** @example true */
      isMultiSiteAdmin?: boolean;
      /**
       * @example FullAccess
       * @enum {string}
       */
      accessLevel?: "FullAccess" | "SiteAccess" | "GroupBasedAccess";
      /**
       * @example CUSTOM
       * @enum {string}
       */
      privilegeSet?: "ADMINISTRATOR" | "AUDITOR" | "ENROLLMENT" | "CUSTOM";
      /**
       * @example [
       *   "Read SSO Settings",
       *   "Delete eBooks"
       * ]
       */
      privileges?: string[];
      /**
       * @example [
       *   1,
       *   3
       * ]
       */
      groupIds?: number[];
      /** @example 1 */
      currentSiteId?: number;
    };
    CurrentAuthorization: {
      account?: components["schemas"]["CurrentAccount"];
      sites?: components["schemas"]["Site"][];
      authenticationType?: components["schemas"]["AuthenticationType"];
    };
    DashboardApiError: {
      /**
       * @default 500
       * @example 500
       */
      httpStatusCode?: number;
      /**
       * @default
       * @example 3
       */
      id?: string;
      /**
       * @default
       * @example Could not collect dashboard data for licensed software
       */
      description?: string;
    };
    DashboardItem: {
      /** @example 1 */
      id?: string;
      /** @example Patch Report */
      title?: string | null;
      /** @example Adobe Patch Policy */
      subtitle?: string | null;
      /**
       * @description Additional information such as identifiers for a specific policy within a software patch
       * @example 3
       */
      info?: string | null;
      /**
       * @description Logical to decide whether widget should be enabled or disabled; i.e. Policy
       * @default true
       */
      enabled?: boolean;
      metrics?: ({
          /**
           * @description Usually a number associated with the tag; i.e. 23 Pending Computers
           * @example 2
           */
          value?: string;
          /**
           * @description Logical to decide whether metric should be enabled or disabled; i.e. Policy can be at Retrying-Disabled status
           * @default true
           */
          enabled?: boolean;
          /**
           * @example Completed
           * @enum {string}
           */
          tag?: "Completed" | "Remaining" | "Site License" | "No Licenses" | "Over" | "Failed" | "Retrying" | "Retrying-disabled" | "Pending" | "Expiring" | "Active" | "Inactive" | "Computers" | "Devices" | "Users" | "In Use" | "N/A" | "Latest Version" | "Other Versions";
        })[];
      details?: {
          /** @example 10.2.001.4 */
          label?: string;
          /** @example 24 */
          value?: string;
        }[];
      error?: components["schemas"]["DashboardApiError"];
    };
    /** @description Response object that has lists of information for widgets, and what setup tasks to display. */
    DashboardSetup: {
      /**
       * @example {
       *   "TYPE_SSL_SETUP_TASK": {
       *     "available": true,
       *     "error": {
       *       "httpStatusCode": "500",
       *       "description": "Null pointer exception example error",
       *       "id": ""
       *     }
       *   }
       * }
       */
      setupTaskOptions?: {
        /**
         * @example TYPE_SSL_SETUP_TASK
         * @enum {string}
         */
        setupTask?: "TYPE_LDAP_SERVER_SETUP_TASK" | "TYPE_PUSH_NOTIFICATION_SETTINGS_SETUP_TASK" | "TYPE_SMTP_SERVER_SETUP_TASK" | "TYPE_SSL_SETUP_TASK";
        [key: string]: components["schemas"]["DashboardSetupTask"] | undefined;
      };
      /**
       * @example {
       *   "TYPE_PATCH_SOFTWARE_TITLE_CONFIGURATION": [
       *     {
       *       "id": "1",
       *       "title": "Patch Report",
       *       "subtitle": "Adobe Patch Policy",
       *       "info": "3",
       *       "enabled": true,
       *       "metrics": [
       *         {
       *           "value": "2",
       *           "enabled": true,
       *           "tag": "Completed"
       *         }
       *       ],
       *       "details": [
       *         {
       *           "label": "10.2.001.4",
       *           "value": "24"
       *         }
       *       ],
       *       "error": {
       *         "httpStatusCode": "500",
       *         "description": "Null pointer exception example error",
       *         "id": "3"
       *       }
       *     }
       *   ]
       * }
       */
      featureOptions?: {
        /**
         * @example TYPE_POLICY
         * @enum {string}
         */
        feature?: "TYPE_IOS_CONFIGURATION_PROFILE" | "TYPE_MACOS_CONFIGURATION_PROFILE" | "TYPE_USER_GROUP" | "TYPE_LICENSED_SOFTWARE" | "TYPE_PATCH_SOFTWARE_TITLE_CONFIGURATION" | "TYPE_PATCH_POLICY" | "TYPE_POLICY" | "TYPE_COMPUTER_GROUP" | "TYPE_MOBILE_DEVICE_GROUP" | "TYPE_DIGICERT_PKI_MANAGER_SETTINGS";
        [key: string]: components["schemas"]["DashboardItem"][] | undefined;
      };
    };
    DashboardSetupTask: {
      /**
       * @default false
       * @example true
       */
      available?: boolean;
      error?: components["schemas"]["DashboardApiError"];
    };
    /**
     * @example ENABLE_DATA_ROAMING
     * @enum {string}
     */
    DataRoamingSetting: "ENABLE_DATA_ROAMING" | "DISABLE_DATA_ROAMING";
    DatabasePassword: {
      /**
       * Format: password
       * @example 12345
       */
      password: string;
    };
    /** @enum {string} */
    DayOfWeek: "MONDAY" | "TUESDAY" | "WEDNESDAY" | "THURSDAY" | "FRIDAY" | "SATURDAY" | "SUNDAY";
    DeclarativeManagementCommand: components["schemas"]["MdmCommandBase"] & {
      /**
       * @description Base64 encoded data to be sent with the command
       * @example TWFkZSB5YSBsb29r
       */
      data?: string;
    };
    DeleteUserCommand: components["schemas"]["MdmCommandBase"] & {
      /** @example user123 */
      userName?: string;
      /** @example true */
      forceDeletion?: boolean;
      /** @example true */
      deleteAllUsers?: boolean;
    };
    Department: {
      /** @example 1 */
      id?: string;
      /** @example Department of Redundancy Department */
      name: string;
    };
    DepartmentsSearchResults: {
      /** @example 3 */
      totalCount?: number;
      results?: components["schemas"]["Department"][];
    };
    DeploymentTask: {
      /** @example 82 */
      id?: string;
      /** @example 111 */
      computerId?: string;
      /** @example Polka dot Stratocaster */
      computerName?: string;
      /** @example 2.3.4 */
      version?: string;
      /**
       * Format: date-time
       * @example 2021-05-07T21:20:34.35Z
       */
      updated?: string;
      /**
       * @description Status of this Jamf Connect deployment task. "Command" below refers to an `InstallEnterpriseApplication` command. Tasks that are not finished (i.e., `COMPLETE` or `GAVE_UP`) are evaluated once every thirty minutes, so the status value for a device may lag behind a successful Jamf Connect package install up to thirty minutes. * `COMMAND_QUEUED` - command has been queued * `NO_COMMAND` - command has not yet been queued * `PENDING_MANIFEST` - task is waiting to obtain a valid package manifest before a command can be queued * `COMPLETE` - command has been completed successfully * `GAVE_UP` - the command failed with an error or the device did not process it in a reasonable amount of time * `UNKNOWN` - unknown; tasks in this state will be evaluated
       *
       * @example COMPLETE
       * @enum {string}
       */
      status?: "COMMAND_QUEUED" | "NO_COMMAND" | "PENDING_MANIFEST" | "COMPLETE" | "GAVE_UP" | "UNKNOWN";
    };
    DeploymentTaskSearchResults: {
      /** @example 13 */
      totalCount?: number;
      results?: components["schemas"]["DeploymentTask"][];
    };
    DeviceCommunicationSettings: {
      /** @example true */
      autoRenewMobileDeviceMdmProfileWhenCaRenewed?: boolean;
      /** @example true */
      autoRenewMobileDeviceMdmProfileWhenDeviceIdentityCertExpiring?: boolean;
      /** @example true */
      autoRenewComputerMdmProfileWhenCaRenewed?: boolean;
      /** @example true */
      autoRenewComputerMdmProfileWhenDeviceIdentityCertExpiring?: boolean;
      /**
       * @default 180
       * @enum {integer}
       */
      mdmProfileMobileDeviceExpirationLimitInDays?: 90 | 120 | 180;
      /**
       * @default 180
       * @enum {integer}
       */
      mdmProfileComputerExpirationLimitInDays?: 90 | 120 | 180;
    };
    /** @description Device compliance information record */
    DeviceComplianceInformation: {
      /**
       * @description ID of the device
       * @example 1
       */
      deviceId?: string;
      /**
       * @description If device is applicable for compliance calculation
       * @example true
       */
      applicable?: boolean;
      /**
       * @description Device compliance state. Possible values are:
       * * `UNKNOWN` for unknow compliance state, this usually means that the compliance state is being calculated,
       * * `NON_COMPLIANT` for non compliant state,
       * * `COMPLIANT` for compliant state
       *
       * @example COMPLIANT
       * @enum {string}
       */
      complianceState?: "UNKNOWN" | "NON_COMPLIANT" | "COMPLIANT";
      /**
       * @description Name of the compliance vendor
       * @example Vendor A
       */
      complianceVendor?: string;
      complianceVendorDeviceInformation?: components["schemas"]["ComplianceVendorDeviceInformation"];
    };
    DeviceEnrollmentDevice: {
      /** @example 1 */
      id?: string;
      /** @example 1 */
      deviceEnrollmentProgramInstanceId?: string;
      /** @example 1 */
      prestageId?: string;
      /** @example R7QFDE2YCFN4 */
      serialNumber?: string;
      /** @example MBP 15.4 */
      description?: string;
      /** @example Macbook Pro 15 Retina */
      model?: string;
      /** @example BLACK */
      color?: string;
      /** @example ACME-1234 */
      assetTag?: string;
      /**
       * @example ASSIGNED
       * @enum {string}
       */
      profileStatus?: "EMPTY" | "ASSIGNED" | "PUSHED" | "REMOVED";
      syncState?: components["schemas"]["AssignRemoveProfileResponseSyncState"];
      /** @example 2000-10-30T18:00:00-00:00 */
      profileAssignTime?: string;
      /** @example 2000-10-30T18:00:00-00:00 */
      profilePushTime?: string;
      /** @example 2000-10-30T18:00:00-00:00 */
      deviceAssignedDate?: string;
    };
    DeviceEnrollmentDeviceSearchResults: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["DeviceEnrollmentDevice"][];
    };
    DeviceEnrollmentDisownBody: {
      /**
       * @example [
       *   "1a2s3d4f5g",
       *   "0o9i8u7y6t"
       * ]
       */
      devices?: string[];
    };
    DeviceEnrollmentDisownResponse: {
      /**
       * @example {
       *   "a2s3d4f5": "SUCCESS",
       *   "0o9i8u7y6t": "FAILED"
       * }
       */
      devices?: {
        [key: string]: string;
      };
    };
    DeviceEnrollmentInstance: {
      /** @example 1 */
      id?: string;
      /** @example Example Device Enrollment Instance */
      name: string;
      /** @example 1 */
      supervisionIdentityId?: string;
      /** @example -1 */
      siteId?: string;
      /** @example Acme ASM */
      serverName?: string;
      /** @example BASD08C11F3C455 */
      serverUuid?: string;
      /** @example admin1234 */
      adminId?: string;
      /** @example Acme Enterprises */
      orgName?: string;
      /** @example admin@test.com */
      orgEmail?: string;
      /** @example 555-0123 */
      orgPhone?: string;
      /** @example 124 Conch Street, Bikini Bottom, Pacific Ocean */
      orgAddress?: string;
      /** @example 2000-10-30 */
      tokenExpirationDate?: string;
    };
    DeviceEnrollmentInstanceSearchResults: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["DeviceEnrollmentInstance"][];
    };
    DeviceEnrollmentInstanceSyncStatus: {
      /** @example CONNECTION_ERROR */
      syncState?: string;
      /** @example 1 */
      instanceId?: string;
      /** @example 2019-04-17T14:08:06.706+0000 */
      timestamp?: string;
    };
    DeviceEnrollmentPrestage: {
      /** @example Example Mobile Prestage Name */
      displayName: string;
      /** @example false */
      isMandatory: boolean;
      /** @example true */
      isMdmRemovable: boolean;
      /** @example 5555555555 */
      supportPhoneNumber: string;
      /** @example example@example.com */
      supportEmailAddress: string;
      /** @example Oxbow */
      department: string;
      /** @example false */
      isDefaultPrestage: boolean;
      /** @example -1 */
      enrollmentSiteId: number;
      /** @example true */
      isKeepExistingSiteMembership: boolean;
      /** @example true */
      isKeepExistingLocationInformation: boolean;
      /** @example true */
      isRequireAuthentication: boolean;
      /** @example LDAP authentication prompt */
      authenticationPrompt: string;
      /** @example true */
      isPreventActivationLock: boolean;
      /** @example true */
      isEnableDeviceBasedActivationLock: boolean;
      /** @example 5 */
      deviceEnrollmentProgramInstanceId: number;
      /**
       * @example {
       *   "Location": true,
       *   "Privacy": false
       * }
       */
      skipSetupItems?: {
        [key: string]: boolean;
      };
      locationInformation: components["schemas"]["LocationInformation"];
      purchasingInformation: components["schemas"]["PrestagePurchasingInformation"];
      /** @description The Base64 encoded PEM Certificate */
      anchorCertificates?: string[];
      /** @example 2 */
      enrollmentCustomizationId?: number;
    };
    DeviceEnrollmentPrestageV2: {
      /** @example Example Mobile Prestage Name */
      displayName: string;
      /** @example false */
      mandatory: boolean;
      /** @example true */
      mdmRemovable: boolean;
      /** @example 5555555555 */
      supportPhoneNumber: string;
      /** @example example@example.com */
      supportEmailAddress: string;
      /** @example Oxbow */
      department: string;
      /** @example false */
      defaultPrestage: boolean;
      /** @example -1 */
      enrollmentSiteId: string;
      /** @example true */
      keepExistingSiteMembership: boolean;
      /** @example true */
      keepExistingLocationInformation: boolean;
      /** @example true */
      requireAuthentication: boolean;
      /** @example LDAP authentication prompt */
      authenticationPrompt: string;
      /** @example true */
      preventActivationLock: boolean;
      /** @example true */
      enableDeviceBasedActivationLock: boolean;
      /** @example 5 */
      deviceEnrollmentProgramInstanceId: string;
      /**
       * @example {
       *   "Location": true,
       *   "Privacy": false
       * }
       */
      skipSetupItems?: {
        [key: string]: boolean;
      };
      locationInformation: components["schemas"]["LocationInformationV2"];
      purchasingInformation: components["schemas"]["PrestagePurchasingInformationV2"];
      /** @description The Base64 encoded PEM Certificate */
      anchorCertificates?: string[];
      /** @example 2 */
      enrollmentCustomizationId?: string;
      /** @example en */
      language?: string;
      /** @example US */
      region?: string;
      /** @example true */
      autoAdvanceSetup: boolean;
    };
    DeviceEnrollmentToken: {
      /**
       * @description Optional name of the token to be saved, if no name is provided one will be auto-generated
       * @example Acme MDM Token
       */
      tokenFileName?: string;
      /**
       * Format: byte
       * @description The base 64 encoded token
       * @example VTI5dFpTQnlZVzVrYjIwZ1ltbDBJRzltSUhSbGVIUWdkRzhnZFhObElHRnVaQ0J6WldVZ2FXWWdZVzU1YjI1bElHRmpkSFZoYkd4NUlIUnlhV1Z6SUhSdklHUmxZMjlrWlNCcGRBPT0=
       */
      encodedToken?: string;
    };
    /**
     * @example ENABLE_DIAGNOSTIC_SUBMISSION
     * @enum {string}
     */
    DiagnosticSubmissionSetting: "ENABLE_DIAGNOSTIC_SUBMISSION" | "DISABLE_DIAGNOSTIC_SUBMISSION";
    DockItem: {
      /** @example 1 */
      id?: string;
      /** @example DockItem Name */
      name: string;
      /**
       * @example FILE
       * @enum {string}
       */
      type: "APP" | "FILE" | "FOLDER";
      /** @example file://localhost/Applications/iTunes.app */
      path: string;
      /** @example <dict><key>GUID</key><integer>-91117049</integer><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>file://localhost/Applications/iTunes.app</string><key>_CFURLStringType</key><integer>15</integer></dict><key>file-label</key><string>MyDockItem2</string></dict><key>tile-type</key><string>directory-tile</string></dict> */
      contents?: string;
    };
    /** @description The URL to download a file from. */
    DownloadUrl: {
      /** @example https://example.cloudfront.net/96213b8b-a3ab-487d?response-content-disposition=attachment%3B+filename%3D%226gb.pkg%22&Expires=1678908843&Signature=hLsNd2__&Key-Pair-Id=K32YV */
      uri?: string;
    };
    Ebook: {
      /** @example 1 */
      id?: string;
      /** @example The Neverending API */
      name?: string;
      /**
       * @example IBOOKS
       * @enum {string}
       */
      kind?: "UNKNOWN" | "PDF" | "EPUB" | "IBOOKS";
      /** @example https://jamf.com/ibooks/the_neverending_api.just_kidding */
      url?: string;
      /** @example true */
      free?: boolean;
      /** @example 10.9.0 */
      version?: string;
      /** @example IT Bob */
      author?: string;
      /**
       * @description If true, it will be automatically installed
       * @example false
       */
      deployAsManaged?: boolean;
      /** @example false */
      installAutomatically?: boolean;
      /** @example -1 */
      categoryId?: string;
      /** @example -1 */
      siteId?: string;
    };
    EbookExclusions: {
      computerIds?: string[];
      computerGroupIds?: string[];
      mobileDeviceIds?: string[];
      mobileDeviceGroupIds?: string[];
      buildingIds?: string[];
      departmentIds?: string[];
      userIds?: string[];
      userGroupIds?: string[];
      limitations?: components["schemas"]["EbookLimitations"];
    };
    EbookLimitations: {
      networkSegments?: string[];
      users?: {
          /** @example admin */
          name?: string;
        }[];
      userGroups?: string[];
    };
    EbookScope: {
      /** @example false */
      allComputers?: boolean;
      /** @example false */
      allMobileDevices?: boolean;
      /** @example false */
      allUsers?: boolean;
      computerIds?: string[];
      computerGroupIds?: string[];
      mobileDeviceIds?: string[];
      mobileDeviceGroupIds?: string[];
      buildingIds?: string[];
      departmentIds?: string[];
      userIds?: string[];
      userGroupIds?: string[];
      classroomIds?: string[];
      limitations?: components["schemas"]["EbookLimitations"];
      exclusions?: components["schemas"]["EbookExclusions"];
    };
    EbookSearchResults: {
      /** @example 3 */
      totalCount?: number;
      results?: components["schemas"]["Ebook"][];
    };
    EnableLostModeCommand: components["schemas"]["MdmCommandBase"] & {
      /** @example Lost Mode Message */
      lostModeMessage?: string;
      /** @example 123-456-7890 */
      lostModePhone?: string;
      /** @example This is a footnote */
      lostModeFootnote?: string;
    };
    Engage: {
      /** @example false */
      isEnabled?: boolean;
    };
    EnrollmentAccessGroupPreview: {
      /**
       * @description Autogenerated ID
       * @example 1
       */
      id?: string;
      /**
       * @description LDAP Group ID
       * @example 1
       */
      groupId: string;
      /** @example 1 */
      ldapServerId: string;
      /** @example Grade School Pupils */
      name: string;
      /** @example -1 */
      siteId?: string;
      /** @example false */
      enterpriseEnrollmentEnabled?: boolean;
      /** @example false */
      personalEnrollmentEnabled?: boolean;
      /** @example false */
      accountDrivenUserEnrollmentEnabled?: boolean;
      /** @example false */
      requireEula?: boolean;
    };
    EnrollmentAccessGroupV2: {
      /**
       * @description Group ID.
       * @example 1
       */
      id?: string;
      /** @example 1 */
      ldapServerId?: string;
      /** @example Grade School Pupils */
      name?: string;
      /** @example 1 */
      siteId?: string;
      /** @example false */
      enterpriseEnrollmentEnabled?: boolean;
      /** @example false */
      personalEnrollmentEnabled?: boolean;
      /** @example false */
      accountDrivenUserEnrollmentEnabled?: boolean;
      /** @example false */
      requireEula?: boolean;
    };
    EnrollmentCustomization: {
      /** @example 2 */
      siteId: number;
      /** @example Example */
      displayName: string;
      /** @example Example description */
      description: string;
      enrollmentCustomizationBrandingSettings: components["schemas"]["EnrollmentCustomizationBrandingSettings"];
    };
    EnrollmentCustomizationBrandingSettings: {
      /** @example 0000FF */
      textColor: string;
      /** @example 0000FF */
      buttonColor: string;
      /** @example 0000FF */
      buttonTextColor: string;
      /** @example 0000FF */
      backgroundColor: string;
      /** @example https://jamfUrl/api/v2/enrollment-customizations/images/1 */
      iconUrl: string;
    };
    EnrollmentCustomizationDependencies: {
      dependencies?: components["schemas"]["EnrollmentCustomizationDependency"][];
    };
    EnrollmentCustomizationDependency: {
      /** @example Name */
      name?: string;
      /** @example Enrollment Customization */
      humanReadableName?: string;
      /** @example /enrollment-customization/id */
      hyperlink?: string;
    };
    EnrollmentCustomizationLdapGroupAccess: {
      /** @example 1 */
      ldapServerId?: number;
      /** @example admins */
      groupName?: string;
    };
    EnrollmentCustomizationPanel: {
      /** @example A Panel */
      displayName: string;
      /** @example 0 */
      rank: number;
    };
    EnrollmentCustomizationPanelLdapAuth: components["schemas"]["EnrollmentCustomizationPanel"] & {
      /** @example Username */
      usernameLabel: string;
      /** @example Password */
      passwordLabel: string;
      /** @example My Ldap Panel */
      title: string;
      /** @example Back */
      backButtonText: string;
      /** @example Continue */
      continueButtonText: string;
      ldapGroupAccess?: components["schemas"]["EnrollmentCustomizationLdapGroupAccess"][];
    };
    EnrollmentCustomizationPanelList: {
      panels?: components["schemas"]["GetEnrollmentCustomizationPanel"][];
    };
    EnrollmentCustomizationPanelSsoAuth: components["schemas"]["EnrollmentCustomizationPanel"] & {
      /** @example false */
      isUseJamfConnect: boolean;
      /** @example long name */
      longNameAttribute: string;
      /** @example name */
      shortNameAttribute: string;
      /** @example false */
      isGroupEnrollmentAccessEnabled: boolean;
      /**
       * @default
       * @example GroupNameA
       */
      groupEnrollmentAccessName: string;
    };
    EnrollmentCustomizationPanelText: components["schemas"]["EnrollmentCustomizationPanel"] & {
      /** @example Welcome! */
      body: string;
      /** @example World! */
      subtext?: string;
      /** @example My text panel */
      title: string;
      /** @example Back */
      backButtonText: string;
      /** @example Continue */
      continueButtonText: string;
    };
    EnrollmentCustomizationSearchResults: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["GetEnrollmentCustomization"][];
    };
    EnrollmentCustomizationSearchResultsV2: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["EnrollmentCustomizationV2"][];
    };
    EnrollmentCustomizationV2: {
      /** @example 1 */
      id?: string;
      /** @example 2 */
      siteId: string;
      /** @example Example */
      displayName: string;
      /** @example Example description */
      description: string;
      enrollmentCustomizationBrandingSettings: components["schemas"]["EnrollmentCustomizationBrandingSettings"];
    };
    EnrollmentMethod: {
      /** @example 1 */
      id?: string;
      /** @example user@domain.com */
      objectName?: string;
      /** @example User-initiated - no invitation */
      objectType?: string;
    };
    EnrollmentMethodPrestage: {
      /** @example 5 */
      mobileDevicePrestageId?: string;
      /** @example All Mobiles */
      profileName?: string;
    };
    EnrollmentProcessTextObject: {
      /** @example en */
      languageCode?: string;
      /** @example English */
      name?: string;
      /** @example Enroll Your Device */
      title?: string;
      /** @example Log in to enroll your device. */
      loginDescription?: string;
      /** @example admin */
      username?: string;
      /** @example 12345 */
      password?: string;
      /** @example Log in */
      loginButton?: string;
      /** @example Specify if this device is institutionally owned or personally owned. */
      deviceClassDescription?: string;
      /** @example Personally Owned */
      deviceClassPersonal?: string;
      /**
       * @example For personally owned devices, IT administrators **can**
       *
       *          *   Lock the device
       *          *   Apply institutional settings
       *          *   Install and remove institutional data
       *          *   Install and remove institutional apps
       *
       *
       *          For personally owned devices, IT administrators **cannot**
       *
       *          *   Wipe all data and settings from your device
       *          *   Track the location of your device
       *          *   Remove anything they did not install
       *          *   Add/remove configuration profiles
       *          *   Add/remove provisioning profiles
       */
      deviceClassPersonalDescription?: string;
      /** @example Institutionally Owned */
      deviceClassEnterprise?: string;
      /**
       * @example For institutionally owned devices, IT administrators **can**
       *
       *          *   Wipe all data and settings from the device
       *          *   Lock the device
       *          *   Remove the passcode
       *          *   Apply institutional settings
       *          *   Install and remove institutional data
       *          *   Install and remove institutional apps
       *          *   Add/remove configuration profiles
       *          *   Add/remove provisioning profiles
       *
       *          For institutionally owned devices, IT administrators **cannot**:
       *
       *          *   Remove anything they did not install
       */
      deviceClassEnterpriseDescription?: string;
      /** @example Enroll */
      deviceClassButton?: string;
      /** @example Personal Eula */
      personalEula?: string;
      /** @example Enterprise Eula */
      enterpriseEula?: string;
      /** @example Accept */
      eulaButton?: string;
      /** @example Select the site to use for enrolling this computer or mobile device. */
      siteDescription?: string;
      /** @example To continue with enrollment, you need to install the CA certificate for your organization. */
      certificateText?: string;
      /** @example Continue */
      certificateButton?: string;
      /** @example CA Certificate */
      certificateProfileName?: string;
      /** @example CA Certificate for mobile device management */
      certificateProfileDescription?: string;
      /** @example To continue with enrollment, you need to install the MDM profile. */
      personalText?: string;
      /** @example Enroll */
      personalButton?: string;
      /** @example MDM Profile */
      personalProfileName?: string;
      /** @example MDM Profile for mobile device management */
      personalProfileDescription?: string;
      /** @default Enter your Managed Apple id to install the MDM Profile. */
      userEnrollmentText?: string;
      /** @default Continue */
      userEnrollmentButton?: string;
      /** @default MDM Profile */
      userEnrollmentProfileName?: string;
      /** @default MDM Profile for mobile device management */
      userEnrollmentProfileDescription?: string;
      /** @example To continue with enrollment, you need to install the MDM profile for your organization. */
      enterpriseText?: string;
      /** @example Continue */
      enterpriseButton?: string;
      /** @example MDM Profile */
      enterpriseProfileName?: string;
      /** @example MDM Profile for mobile device management */
      enterpriseProfileDescription?: string;
      /** @example To continue with enrollment, install the CA Certificate and MDM Profile that were downloaded to your computer. */
      enterprisePending?: string;
      /** @example Download and install this package. */
      quickAddText?: string;
      /** @example Download */
      quickAddButton?: string;
      /** @default QuickAdd.pkg */
      quickAddName?: string;
      /** @example Install the downloaded QuickAdd.pkg. */
      quickAddPending?: string;
      /** @example The enrollment process is complete. */
      completeMessage?: string;
      /** @example The enrollment process could not be completed. Contact your IT administrator. */
      failedMessage?: string;
      /** @example Try Again */
      tryAgainButton?: string;
      /** @example Proceed */
      checkNowButton?: string;
      /** @example Tap "Proceed" to view the enrollment status for this device. */
      checkEnrollmentMessage?: string;
      /** @example Log Out */
      logoutButton?: string;
    };
    EnrollmentSettingsV2: {
      /** @default false */
      installSingleProfile?: boolean;
      /** @default false */
      signingMdmProfileEnabled?: boolean;
      mdmSigningCertificate?: components["schemas"]["CertificateIdentityV2"];
      /** @default false */
      restrictReenrollment?: boolean;
      /** @default false */
      flushLocationInformation?: boolean;
      /** @default false */
      flushLocationHistoryInformation?: boolean;
      /** @default false */
      flushPolicyHistory?: boolean;
      /** @default false */
      flushExtensionAttributes?: boolean;
      /**
       * @default DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED
       * @enum {string}
       */
      flushMdmCommandsOnReenroll?: "DELETE_NOTHING" | "DELETE_ERRORS" | "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED" | "DELETE_EVERYTHING";
      /** @default false */
      macOsEnterpriseEnrollmentEnabled?: boolean;
      /**
       * @default
       * @example radmin
       */
      managementUsername: string;
      /**
       * Format: password
       * @deprecated
       * @description managementPassword is no longer in use. Input value for managementPassword will be ignored.
       * @default null
       */
      managementPassword?: string;
      /**
       * @deprecated
       * @description managementPasswordSet is no longer in use. Input value for managementPasswordSet will be ignored.
       * @example true
       */
      managementPasswordSet?: boolean;
      /**
       * @deprecated
       * @description passwordType is no longer in use. Input value for passwordType will be ignored.
       * @default STATIC
       * @enum {string}
       */
      passwordType?: "STATIC" | "RANDOM";
      /**
       * Format: int32
       * @deprecated
       * @description randomPasswordLength is no longer in use. Input value for randomPasswordLength will be ignored.
       * @default 8
       */
      randomPasswordLength?: number;
      /** @default true */
      createManagementAccount?: boolean;
      /** @default false */
      hideManagementAccount?: boolean;
      /** @default false */
      allowSshOnlyManagementAccount?: boolean;
      /** @default true */
      ensureSshRunning?: boolean;
      /** @default false */
      launchSelfService?: boolean;
      /** @default false */
      signQuickAdd?: boolean;
      developerCertificateIdentity?: components["schemas"]["CertificateIdentityV2"];
      developerCertificateIdentityDetails?: components["schemas"]["CertificateDetails"];
      mdmSigningCertificateDetails?: components["schemas"]["CertificateDetails"];
      /** @default true */
      iosEnterpriseEnrollmentEnabled?: boolean;
      /** @default false */
      iosPersonalEnrollmentEnabled?: boolean;
      /**
       * @default PERSONALDEVICEPROFILES
       * @enum {string}
       */
      personalDeviceEnrollmentType?: "USERENROLLMENT" | "PERSONALDEVICEPROFILES";
      /** @default false */
      accountDrivenUserEnrollmentEnabled?: boolean;
    };
    EnrollmentSettingsV3: {
      /** @default false */
      installSingleProfile?: boolean;
      /** @default false */
      signingMdmProfileEnabled?: boolean;
      mdmSigningCertificate?: components["schemas"]["CertificateIdentityV2"];
      /** @default false */
      restrictReenrollment?: boolean;
      /** @default false */
      flushLocationInformation?: boolean;
      /** @default false */
      flushLocationHistoryInformation?: boolean;
      /** @default false */
      flushPolicyHistory?: boolean;
      /** @default false */
      flushExtensionAttributes?: boolean;
      /**
       * @default DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED
       * @enum {string}
       */
      flushMdmCommandsOnReenroll?: "DELETE_NOTHING" | "DELETE_ERRORS" | "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED" | "DELETE_EVERYTHING";
      /** @default false */
      macOsEnterpriseEnrollmentEnabled?: boolean;
      /**
       * @default
       * @example radmin
       */
      managementUsername: string;
      /** @default true */
      createManagementAccount?: boolean;
      /** @default false */
      hideManagementAccount?: boolean;
      /** @default false */
      allowSshOnlyManagementAccount?: boolean;
      /** @default true */
      ensureSshRunning?: boolean;
      /** @default false */
      launchSelfService?: boolean;
      /** @default false */
      signQuickAdd?: boolean;
      developerCertificateIdentity?: components["schemas"]["CertificateIdentityV2"];
      developerCertificateIdentityDetails?: components["schemas"]["CertificateDetails"];
      mdmSigningCertificateDetails?: components["schemas"]["CertificateDetails"];
      /** @default true */
      iosEnterpriseEnrollmentEnabled?: boolean;
      /** @default false */
      iosPersonalEnrollmentEnabled?: boolean;
      /**
       * @default PERSONALDEVICEPROFILES
       * @enum {string}
       */
      personalDeviceEnrollmentType?: "USERENROLLMENT" | "PERSONALDEVICEPROFILES";
      /** @default false */
      accountDrivenUserEnrollmentEnabled?: boolean;
      /** @default false */
      accountDrivenDeviceEnrollmentEnabled?: boolean;
    };
    EnrollmentSsoConfig: {
      /**
       * @default []
       * @example [
       *   "dev-12324233.okta.com",
       *   "example.okta.com"
       * ]
       */
      hosts: string[];
      /** @default */
      managementHint?: string;
    };
    EraseDeviceCommand: components["schemas"]["MdmCommandBase"] & ({
      /**
       * @description If true, preserve the data plan on an iPhone or iPad with eSIM functionality, if one exists. This value is available in iOS 11 and later.
       * @default false
       * @example true
       */
      preserveDataPlan?: boolean;
      /**
       * @description If true, disable Proximity Setup on the next reboot and skip the pane in Setup Assistant. This value is available in iOS 11 and later. Prior to iOS 14, don’t use this option with any other option.
       * @default false
       * @example true
       */
      disallowProximitySetup?: boolean;
      /**
       * @description The six-character PIN for Find My. This value is available in macOS 10.8 and later.
       * @example 123456
       */
      pin?: string;
      /**
       * @description This key defines the fallback behavior for erasing a device.
       * @example Default
       * @enum {string}
       */
      obliterationBehavior?: "Default" | "DoNotObliterate" | "ObliterateWithWarning" | "Always";
      /** @description The configuration settings for Return to Service. */
      returnToService?: {
        /** @example true */
        enabled?: boolean;
        /**
         * @description Base64 encoded mdm profile
         * @example PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPCFET0NUWVBFIHBsaXN0IFBVQkxJQyAiLS8vQXBwbGUvL0RURCBQTElTVCAxLjAvL0VOIiAiaHR0cDovL3d3dy5hcHBsZS5jb20vRFREcy9Qcm9wZXJ0eUxpc3QtMS4wLmR0ZCI+CjxwbGlzdCB2ZXJzaW9uPSIxIj4KICAgIDxkaWN0PgogICAgICAgIDxrZXk+UGF5bG9hZFVVSUQ8L2tleT4KICAgICAgICA8c3RyaW5nPjAwMDAwMDAwLTAwMDAtMDAwMC1BMDAwLTRBNDE0RDQ2MDAwMzwvc3RyaW5nPgogICAgICAgIDxrZXk+UGF5bG9hZFR5cGU8L2tleT4KICAgICAgICA8c3RyaW5nPkNvbmZpZ3VyYXRpb248L3N0cmluZz4KICAgICAgICA8a2V5PlBheWxvYWRPcmdhbml6YXRpb248L2tleT4KICAgICAgICA8c3RyaW5nPkphbWYgUHJvPC9zdHJpbmc+CiAgICAgICAgPGtleT5QYXlsb2FkSWRlbnRpZmllcjwva2V5PgogICAgICAgIDxzdHJpbmc+MDAwMDAwMDAtMDAwMC0wMDAwLUEwMDAtNEE0MTRENDYwMDAzPC9zdHJpbmc+CiAgICAgICAgPGtleT5QYXlsb2FkRGlzcGxheU5hbWU8L2tleT4KICAgICAgICA8c3RyaW5nPk1ETSBQcm9maWxlPC9zdHJpbmc+CiAgICAgICAgPGtleT5QYXlsb2FkRGVzY3JpcHRpb248L2tleT4KICAgICAgICA8c3RyaW5nPk1ETSBQcm9maWxlIGZvciBtb2JpbGUgZGV2aWNlIG1hbmFnZW1lbnQ8L3N0cmluZz4KICAgICAgICA8a2V5PlBheWxvYWRWZXJzaW9uPC9rZXk+CiAgICAgICAgPGludGVnZXI+MTwvaW50ZWdlcj4KICAgICAgICA8a2V5PlBheWxvYWRFbmFibGVkPC9rZXk+CiAgICAgICAgPHRydWUgLz4KICAgICAgICA8a2V5PlBheWxvYWRSZW1vdmFsRGlzYWxsb3dlZDwva2V5PgogICAgICAgIDxmYWxzZSAvPgogICAgICAgIDxrZXk+UGF5bG9hZENvbnRlbnQ8L2tleT4KICAgICAgICA8YXJyYXk+CiAgICAgICAgICAgIDxkaWN0PgogICAgICAgICAgICAgICAgPGtleT5QYXlsb2FkVVVJRDwva2V5PgogICAgICAgICAgICAgICAgPHN0cmluZz5FQjA1RURCNy04MzYxLTQ1N0ItQjUyOC0wQjFCMjU2QTY2QUY8L3N0cmluZz4KICAgICAgICAgICAgICAgIDxrZXk+UGF5bG9hZFR5cGU8L2tleT4KICAgICAgICAgICAgICAgIDxzdHJpbmc+Y29tLmFwcGxlLnNlY3VyaXR5LnJvb3Q8L3N0cmluZz4KICAgICAgICAgICAgICAgIDxrZXk+UGF5bG9hZE9yZ2FuaXphdGlvbjwva2V5PgogICAgICAgICAgICAgICAgPHN0cmluZz5KYW1mIFBybzwvc3RyaW5nPgogICAgICAgICAgICAgICAgPGtleT5QYXlsb2FkSWRlbnRpZmllcjwva2V5PgogICAgICAgICAgICAgICAgPHN0cmluZz5FQjA1RURCNy04MzYxLTQ1N0ItQjUyOC0wQjFCMjU2QTY2QUY8L3N0cmluZz4KICAgICAgICAgICAgICAgIDxrZXk+UGF5bG9hZERpc3BsYXlOYW1lPC9rZXk+CiAgICAgICAgICAgICAgICA8c3RyaW5nPkNOPUphbWYgUHJvIEpTUyBCdWlsdC1pbiBDZXJ0aWZpY2F0ZSBBdXRob3JpdHk8L3N0cmluZz4KICAgICAgICAgICAgICAgIDxrZXk+UGF5bG9hZERlc2NyaXB0aW9uPC9rZXk+CiAgICAgICAgICAgICAgICA8c3RyaW5nPkEgUm9vdCBDQSBDZXJ0aWZpY2F0ZTwvc3RyaW5nPgogICAgICAgICAgICAgICAgPGtleT5QYXlsb2FkVmVyc2lvbjwva2V5PgogICAgICAgICAgICAgICAgPGludGVnZXI+MTwvaW50ZWdlcj4KICAgICAgICAgICAgICAgIDxrZXk+UGF5bG9hZEVuYWJsZWQ8L2tleT4KICAgICAgICAgICAgICAgIDx0cnVlIC8+CiAgICAgICAgICAgICAgICA8a2V5PlBheWxvYWRDZXJ0aWZpY2F0ZUZpbGVOYW1lPC9rZXk+CiAgICAgICAgICAgICAgICA8c3RyaW5nPkNOPUphbWYgUHJvIEpTUyBCdWlsdC1pbiBDZXJ0aWZpY2F0ZSBBdXRob3JpdHk8L3N0cmluZz4KICAgICAgICAgICAgICAgIDxrZXk+UGF5bG9hZENvbnRlbnQ8L2tleT4KICAgICAgICAgICAgICAgIDxkYXRhPgogICAgICAgICAgICAgICAgICAgIHBheWxvYWRDb250ZW50CiAgICAgICAgICAgICAgICA8L2RhdGE+CiAgICAgICAgICAgICAgICA8a2V5PkFsbG93QWxsQXBwc0FjY2Vzczwva2V5PgogICAgICAgICAgICAgICAgPGZhbHNlIC8+CiAgICAgICAgICAgIDwvZGljdD4KICAgICAgICAgICAgPGRpY3Q+CiAgICAgICAgICAgICAgICA8a2V5PlBheWxvYWRVVUlEPC9rZXk+CiAgICAgICAgICAgICAgICA8c3RyaW5nPjAwMDAwMDAwLTAwMDAtMDAwMC1BMDAwLTRBNDE0RDQ2MDAwNjwvc3RyaW5nPgogICAgICAgICAgICAgICAgPGtleT5QYXlsb2FkVHlwZTwva2V5PgogICAgICAgICAgICAgICAgPHN0cmluZz5jb20uYXBwbGUuc2VjdXJpdHkuc2NlcDwvc3RyaW5nPgogICAgICAgICAgICAgICAgPGtleT5QYXlsb2FkT3JnYW5pemF0aW9uPC9rZXk+CiAgICAgICAgICAgICAgICA8c3RyaW5nPkphbWYgUHJvPC9zdHJpbmc+CiAgICAgICAgICAgICAgICA8a2V5PlBheWxvYWRJZGVudGlmaWVyPC9rZXk+CiAgICAgICAgICAgICAgICA8c3RyaW5nPmNvbS5qYW1mc29mdHdhcmUuZW5jcnlwdGVkLXByb2ZpbGUtc2VydmljZS1zY2VwMjwvc3RyaW5nPgogICAgICAgICAgICAgICAgPGtleT5QYXlsb2FkRGlzcGxheU5hbWU8L2tleT4KICAgICAgICAgICAgICAgIDxzdHJpbmc+SkFNRiBFbnJvbGxtZW50IFBheWxvYWQ6IFNDRVA8L3N0cmluZz4KICAgICAgICAgICAgICAgIDxrZXk+UGF5bG9hZERlc2NyaXB0aW9uPC9rZXk+CiAgICAgICAgICAgICAgICA8c3RyaW5nPkNvbmZpZ3VyYXRpb24gdG8gY29ubmVjdCB0byB5b3VyIFNDRVAgU2VydmVyPC9zdHJpbmc+CiAgICAgICAgICAgICAgICA8a2V5PlBheWxvYWRWZXJzaW9uPC9rZXk+CiAgICAgICAgICAgICAgICA8aW50ZWdlcj4xPC9pbnRlZ2VyPgogICAgICAgICAgICAgICAgPGtleT5QYXlsb2FkRW5hYmxlZDwva2V5PgogICAgICAgICAgICAgICAgPHRydWUgLz4KICAgICAgICAgICAgICAgIDxrZXk+UGF5bG9hZENvbnRlbnQ8L2tleT4KICAgICAgICAgICAgICAgIDxkaWN0PgogICAgICAgICAgICAgICAgICAgIDxrZXk+VVJMPC9rZXk+CiAgICAgICAgICAgICAgICAgICAgPHN0cmluZz5odHRwczovL2pzcy51cmwvQ0EvU0NFUDwvc3RyaW5nPgogICAgICAgICAgICAgICAgICAgIDxrZXk+Q2hhbGxlbmdlPC9rZXk+CiAgICAgICAgICAgICAgICAgICAgPHN0cmluZz4wMDAwMDwvc3RyaW5nPgogICAgICAgICAgICAgICAgICAgIDxrZXk+S2V5IFR5cGU8L2tleT4KICAgICAgICAgICAgICAgICAgICA8c3RyaW5nPlJTQTwvc3RyaW5nPgogICAgICAgICAgICAgICAgICAgIDxrZXk+S2V5IFVzYWdlPC9rZXk+CiAgICAgICAgICAgICAgICAgICAgPGludGVnZXI+NTwvaW50ZWdlcj4KICAgICAgICAgICAgICAgICAgICA8a2V5PktleXNpemU8L2tleT4KICAgICAgICAgICAgICAgICAgICA8aW50ZWdlcj4yMDQ4PC9pbnRlZ2VyPgogICAgICAgICAgICAgICAgICAgIDxrZXk+U3ViamVjdDwva2V5PgogICAgICAgICAgICAgICAgICAgIDxhcnJheT4KICAgICAgICAgICAgICAgICAgICAgICAgPGFycmF5PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGFycmF5PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJpbmc+Tzwvc3RyaW5nPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJpbmc+SmFtZiBQcm88L3N0cmluZz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYXJyYXk+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYXJyYXk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhcnJheT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhcnJheT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3RyaW5nPkNOPC9zdHJpbmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cmluZz40RkY0QzJEQi0wRDhDLTREQjEtODUyNi04RTFGQUQ3ODg4RTQ8L3N0cmluZz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYXJyYXk+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYXJyYXk+CiAgICAgICAgICAgICAgICAgICAgPC9hcnJheT4KICAgICAgICAgICAgICAgIDwvZGljdD4KICAgICAgICAgICAgPC9kaWN0PgogICAgICAgICAgICA8ZGljdD4KICAgICAgICAgICAgICAgIDxrZXk+QWNjZXNzUmlnaHRzPC9rZXk+CiAgICAgICAgICAgICAgICA8aW50ZWdlcj44MTkxPC9pbnRlZ2VyPgogICAgICAgICAgICAgICAgPGtleT5DaGVja0luVVJMPC9rZXk+CiAgICAgICAgICAgICAgICA8c3RyaW5nPgogICAgICAgICAgICAgICAgICAgIGh0dHBzOi8vanNzLnVybC9tZG0vQ2hlY2tJblVSTD9pbnZpdGF0aW9uPTI4MzY5MDc2MzU4NzI1MjExMzI4MzE0ODcxNjEyNjI2MzkxMzQxOTwvc3RyaW5nPgogICAgICAgICAgICAgICAgPGtleT5DaGVja091dFdoZW5SZW1vdmVkPC9rZXk+CiAgICAgICAgICAgICAgICA8dHJ1ZSAvPgogICAgICAgICAgICAgICAgPGtleT5JZGVudGl0eUNlcnRpZmljYXRlVVVJRDwva2V5PgogICAgICAgICAgICAgICAgPHN0cmluZz4wMDAwMDAwMC0wMDAwLTAwMDAtQTAwMC00QTQxNEQ0NjAwMDY8L3N0cmluZz4KICAgICAgICAgICAgICAgIDxrZXk+UGF5bG9hZERlc2NyaXB0aW9uPC9rZXk+CiAgICAgICAgICAgICAgICA8c3RyaW5nPkNvbmZpZ3VyYXRpb24gdG8gY29ubmVjdCB0byB5b3VyIE1ETSBTZXJ2ZXI8L3N0cmluZz4KICAgICAgICAgICAgICAgIDxrZXk+UGF5bG9hZERpc3BsYXlOYW1lPC9rZXk+CiAgICAgICAgICAgICAgICA8c3RyaW5nPkpBTUYgTWFudWFsIEVucm9sbG1lbnQgUGF5bG9hZDogTURNPC9zdHJpbmc+CiAgICAgICAgICAgICAgICA8a2V5PlBheWxvYWRFbmFibGVkPC9rZXk+CiAgICAgICAgICAgICAgICA8dHJ1ZSAvPgogICAgICAgICAgICAgICAgPGtleT5QYXlsb2FkSWRlbnRpZmllcjwva2V5PgogICAgICAgICAgICAgICAgPHN0cmluZz4wMDAwMDAwMC0wMDAwLTAwMDAtQTAwMC00QTQxNEQ0NjAwMDQ8L3N0cmluZz4KICAgICAgICAgICAgICAgIDxrZXk+UGF5bG9hZE9yZ2FuaXphdGlvbjwva2V5PgogICAgICAgICAgICAgICAgPHN0cmluZz5KYW1mIFBybzwvc3RyaW5nPgogICAgICAgICAgICAgICAgPGtleT5QYXlsb2FkVHlwZTwva2V5PgogICAgICAgICAgICAgICAgPHN0cmluZz5jb20uYXBwbGUubWRtPC9zdHJpbmc+CiAgICAgICAgICAgICAgICA8a2V5PlBheWxvYWRVVUlEPC9rZXk+CiAgICAgICAgICAgICAgICA8c3RyaW5nPjAwMDAwMDAwLTAwMDAtMDAwMC1BMDAwLTRBNDE0RDQ2MDAwNDwvc3RyaW5nPgogICAgICAgICAgICAgICAgPGtleT5QYXlsb2FkVmVyc2lvbjwva2V5PgogICAgICAgICAgICAgICAgPGludGVnZXI+MTwvaW50ZWdlcj4KICAgICAgICAgICAgICAgIDxrZXk+U2VydmVyVVJMPC9rZXk+CiAgICAgICAgICAgICAgICA8c3RyaW5nPmh0dHBzOi8vanNzLnVybC9tZG0vU2VydmVyVVJMPC9zdHJpbmc+CiAgICAgICAgICAgICAgICA8a2V5PlNpZ25NZXNzYWdlPC9rZXk+CiAgICAgICAgICAgICAgICA8dHJ1ZSAvPgogICAgICAgICAgICAgICAgPGtleT5Ub3BpYzwva2V5PgogICAgICAgICAgICAgICAgPHN0cmluZz5jb20uYXBwbGUubWdtdC5FeHRlcm5hbC5hYWFhYWFhYS1hYWFhLWFhYWEtYWFhLWFhYWFhYWE8L3N0cmluZz4KICAgICAgICAgICAgICAgIDxrZXk+VXNlRGV2ZWxvcG1lbnRBUE5TPC9rZXk+CiAgICAgICAgICAgICAgICA8ZmFsc2UgLz4KICAgICAgICAgICAgICAgIDxrZXk+U2VydmVyQ2FwYWJpbGl0aWVzPC9rZXk+CiAgICAgICAgICAgICAgICA8YXJyYXk+CiAgICAgICAgICAgICAgICAgICAgPHN0cmluZz5jb20uYXBwbGUubWRtLnBlci11c2VyLWNvbm5lY3Rpb25zPC9zdHJpbmc+CiAgICAgICAgICAgICAgICA8L2FycmF5PgogICAgICAgICAgICA8L2RpY3Q+CiAgICAgICAgPC9hcnJheT4KICAgIDwvZGljdD4KPC9wbGlzdD4=
         */
        mdmProfileData?: string;
        /**
         * @description Base64 encoded wifi profile
         * @example PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPCFET0NUWVBFIHBsaXN0IFBVQkxJQyAiLS8vQXBwbGUvL0RURCBQTElTVCAxLjAvL0VOIiAiaHR0cDovL3d3dy5hcHBsZS5jb20vRFREcy9Qcm9wZXJ0eUxpc3QtMS4wLmR0ZCI+CjxwbGlzdCB2ZXJzaW9uPSIxLjAiPgo8ZGljdD4KCTxrZXk+UGF5bG9hZENvbnRlbnQ8L2tleT4KCTxhcnJheT4KCQk8ZGljdD4KCQkJPGtleT5BdXRvSm9pbjwva2V5PgoJCQk8dHJ1ZS8+CgkJCTxrZXk+Q2FwdGl2ZUJ5cGFzczwva2V5PgoJCQk8ZmFsc2UvPgoJCQk8a2V5PkRpc2FibGVBc3NvY2lhdGlvbk1BQ1JhbmRvbWl6YXRpb248L2tleT4KCQkJPGZhbHNlLz4KCQkJPGtleT5FbmNyeXB0aW9uVHlwZTwva2V5PgoJCQk8c3RyaW5nPldQQTwvc3RyaW5nPgoJCQk8a2V5PkhJRERFTl9ORVRXT1JLPC9rZXk+CgkJCTxmYWxzZS8+CgkJCTxrZXk+SXNIb3RzcG90PC9rZXk+CgkJCTxmYWxzZS8+CgkJCTxrZXk+UGFzc3dvcmQ8L2tleT4KCQkJPHN0cmluZz53aWZpUGFzc3dvcmQ8L3N0cmluZz4KCQkJPGtleT5QYXlsb2FkRGVzY3JpcHRpb248L2tleT4KCQkJPHN0cmluZz5Db25maWd1cmVzIFdpLUZpIHNldHRpbmdzPC9zdHJpbmc+CgkJCTxrZXk+UGF5bG9hZERpc3BsYXlOYW1lPC9rZXk+CgkJCTxzdHJpbmc+V2ktRmk8L3N0cmluZz4KCQkJPGtleT5QYXlsb2FkSWRlbnRpZmllcjwva2V5PgoJCQk8c3RyaW5nPmNvbS5hcHBsZS53aWZpLm1hbmFnZWQuRDA1QzhDQzQtMzNGNi00OEVFLUEwNzMtM0M1M0VGOTExQUIzPC9zdHJpbmc+CgkJCTxrZXk+UGF5bG9hZFR5cGU8L2tleT4KCQkJPHN0cmluZz5jb20uYXBwbGUud2lmaS5tYW5hZ2VkPC9zdHJpbmc+CgkJCTxrZXk+UGF5bG9hZFVVSUQ8L2tleT4KCQkJPHN0cmluZz5EMDVDOENDNC0zM0Y2LTQ4RUUtQTA3My0zQzUzRUY5MTFBQjM8L3N0cmluZz4KCQkJPGtleT5QYXlsb2FkVmVyc2lvbjwva2V5PgoJCQk8aW50ZWdlcj4xPC9pbnRlZ2VyPgoJCQk8a2V5PlByb3h5VHlwZTwva2V5PgoJCQk8c3RyaW5nPk5vbmU8L3N0cmluZz4KCQkJPGtleT5TU0lEX1NUUjwva2V5PgoJCQk8c3RyaW5nPlNTSUQ8L3N0cmluZz4KCQk8L2RpY3Q+Cgk8L2FycmF5PgoJPGtleT5QYXlsb2FkRGlzcGxheU5hbWU8L2tleT4KCTxzdHJpbmc+VW50aXRsZWQ8L3N0cmluZz4KCTxrZXk+UGF5bG9hZElkZW50aWZpZXI8L2tleT4KCTxzdHJpbmc+Y29yZXkuODcxOUQ0RTktQTYxMy00OTg4LTlFQjctOUYzNzdGMEUwMEMwPC9zdHJpbmc+Cgk8a2V5PlBheWxvYWRSZW1vdmFsRGlzYWxsb3dlZDwva2V5PgoJPGZhbHNlLz4KCTxrZXk+UGF5bG9hZFR5cGU8L2tleT4KCTxzdHJpbmc+Q29uZmlndXJhdGlvbjwvc3RyaW5nPgoJPGtleT5QYXlsb2FkVVVJRDwva2V5PgoJPHN0cmluZz42MkZGQzZBRC1GMDFDLTRENzQtQUIwQS1EMEM0N0QzQjdBMDc8L3N0cmluZz4KCTxrZXk+UGF5bG9hZFZlcnNpb248L2tleT4KCTxpbnRlZ2VyPjE8L2ludGVnZXI+CjwvZGljdD4KPC9wbGlzdD4=
         */
        wifiProfileData?: string;
      };
    });
    /** @description Field to be included in the export operation. */
    ExportField: {
      /**
       * @description English name of the field to be exported.
       * @example id
       */
      fieldName?: string;
      /**
       * @description Name which should be used for the label in the response - can be in any language. When null the fieldName itself will be used as the label.
       * @example identiteit
       */
      fieldLabelOverride?: string | null;
    };
    ExportParameters: {
      /**
       * @default 0
       * @example 0
       */
      page?: number | null;
      /**
       * @default 100
       * @example 100
       */
      pageSize?: number | null;
      /**
       * @description Sorting criteria in the format: [<property>[:asc/desc]. Default direction when not stated is ascending.
       * @default [
       *   "id:desc"
       * ]
       * @example [
       *   "id:asc"
       * ]
       */
      sort?: string[] | null;
      /** @example id>=100 */
      filter?: string | null;
      /** @description Used to change default order or ignore some of the fields. When null or empty array, all fields will be exported. */
      fields?: components["schemas"]["ExportField"][] | null;
    };
    ExtensionAttribute: {
      /** @example 1 */
      id?: number;
      /** @example Example EA */
      name?: string;
      /**
       * @example STRING
       * @enum {string}
       */
      type?: "STRING" | "INTEGER" | "DATE";
      value?: string[];
      /** @example false */
      isExtensionAttributeCollectionAllowed?: boolean;
    };
    ExtensionAttributeV2: {
      /** @example 1 */
      id?: string;
      /** @example Example EA */
      name?: string;
      /**
       * @example STRING
       * @enum {string}
       */
      type?: "STRING" | "INTEGER" | "DATE";
      value?: string[];
      /** @example false */
      extensionAttributeCollectionAllowed?: boolean;
    };
    ExternalRecipient: {
      /** @example Bob Exampleman */
      name: string;
      /** @example bob@example.com */
      email: string;
    };
    FileAttachment: {
      /** @example 1 */
      id?: number;
      /** @example receipt.pdf */
      name?: string;
    };
    FileAttachmentDelete: {
      /**
       * @example [
       *   1,
       *   3
       * ]
       */
      ids?: number[];
    };
    FileAttachmentV2: {
      /** @example 1 */
      id?: string;
      /** @example receipt.pdf */
      name?: string;
    };
    /** @description Metadata pertaining to the file. */
    FileData: {
      /**
       * @description The name of the file
       * @example test.txt
       */
      fileName?: string;
      /**
       * @description The length in bytes
       * @example 1321654
       */
      length?: number;
      /**
       * @description The MD5 in hex
       * @example 9e47d8266df642dc2c3cd73206189781
       */
      md5?: string;
      /**
       * @description The region the file is hosted in
       * @example us-east-1
       */
      region?: string;
      /**
       * @description The SHA3_512 in hex
       * @example 4b2c9436a4e3e330bad91eaa55b66591cd4823548a681eff970b9b949d96201f8c6862ba8308dac1fdf53b9f4356d287bd1062b4f4b89dc2205d9f15776fd58f
       */
      sha3?: string;
    };
    FileTransferItem: {
      /** @example /SomeFilePath/ToFile.xml */
      filePath?: string;
      /**
       * Format: date-time
       * @example 2023-11-07T10:25:27.49Z
       */
      transferTimestamp?: string;
      /**
       * @example DOWNLOAD
       * @enum {string}
       */
      fileTransferType?: "DOWNLOAD" | "UPLOAD";
    };
    FontPath: {
      /** @example 2 */
      id: string;
      /** @example /Example/Path/To/Font/ */
      path: string;
    };
    GetComputerPrestageV2: components["schemas"]["ComputerPrestageV2"] & {
      /** @example 1 */
      id?: string;
      /** @example 29d-a8d8f-b8sdjndf-dsa9 */
      profileUuid?: string;
      /** @example 5 */
      siteId?: string;
      /** @example 0 */
      versionLock?: number;
    };
    GetComputerPrestageV3: components["schemas"]["ComputerPrestageV3"] & {
      /** @example 1 */
      id?: string;
      /** @example 29d-a8d8f-b8sdjndf-dsa9 */
      profileUuid?: string;
      /** @example 5 */
      siteId?: string;
      /** @example 0 */
      versionLock?: number;
      accountSettings?: components["schemas"]["AccountSettingsResponse"];
    };
    GetEnrollmentCustomization: components["schemas"]["EnrollmentCustomization"] & {
      /** @example 1 */
      id?: number;
    };
    GetEnrollmentCustomizationPanel: components["schemas"]["EnrollmentCustomizationPanel"] & {
      /** @example 2 */
      id?: number;
      /** @example text */
      type?: string;
    };
    GetEnrollmentCustomizationPanelLdapAuth: components["schemas"]["EnrollmentCustomizationPanelLdapAuth"] & {
      /** @example 2 */
      id?: number;
      /** @example ldap */
      type?: string;
    };
    GetEnrollmentCustomizationPanelSsoAuth: components["schemas"]["EnrollmentCustomizationPanelSsoAuth"] & {
      /** @example 2 */
      id?: number;
      /** @example sso */
      type?: string;
    };
    GetEnrollmentCustomizationPanelText: components["schemas"]["EnrollmentCustomizationPanelText"] & {
      /** @example 2 */
      id?: number;
      /** @example text */
      type?: string;
    };
    GetMobileDevicePrestage: components["schemas"]["MobileDevicePrestage"] & {
      /** @example 1 */
      id?: number;
      /** @example 29d-a8d8f-b8sdjndf-dsa9 */
      profileUUID?: string;
      /** @example 5 */
      siteId?: number;
      /** @example 0 */
      versionLock?: number;
    };
    GetMobileDevicePrestageV2: components["schemas"]["MobileDevicePrestageV2"] & {
      /** @example 1 */
      id?: string;
      /** @example 29d-a8d8f-b8sdjndf-dsa9 */
      profileUuid?: string;
      /** @example 5 */
      siteId?: string;
      /** @example 0 */
      versionLock?: number;
    };
    /** @description Cloud Identity Provider user group mappings configuration */
    GroupMappings: {
      /**
       * @example ANY_OBJECT_CLASSES
       * @enum {string}
       */
      objectClassLimitation: "ANY_OBJECT_CLASSES" | "ALL_OBJECT_CLASSES";
      /** @example groupOfNames */
      objectClasses: string;
      /** @example ou=Groups */
      searchBase: string;
      /**
       * @example ALL_SUBTREES
       * @enum {string}
       */
      searchScope: "ALL_SUBTREES" | "FIRST_LEVEL_ONLY";
      /** @example cn */
      groupID: string;
      /** @example cn */
      groupName: string;
      /** @example gidNumber */
      groupUuid: string;
    };
    GroupMembership: {
      /** @example 1 */
      groupId?: string;
      /** @example groupOne */
      groupName?: string;
      /**
       * @description Indicates that group is smart group
       * @example true
       */
      smartGroup?: boolean;
    };
    GroupTestSearch: {
      /** @example cn=users,ou=Groups,dc=jamf,dc=com */
      distinguishedName?: string;
      /** @example users */
      id?: string;
      /** @example 121100023 */
      uuid?: string;
      /** @example 1001 */
      serverId?: string;
      /** @example users */
      name?: string;
    };
    GroupTestSearchRequest: {
      /** @example users */
      groupname: string;
    };
    GroupTestSearchResponse: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["GroupTestSearch"][];
    };
    HistorySearchResults: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["ObjectHistory"][];
    };
    HistorySearchResultsV1: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["ObjectHistoryV1"][];
    };
    HrefResponse: {
      /** @example 1 */
      id?: string;
      /** @example https://yourJamfProUrl.jamf/api/v1/resource/1 */
      href?: string;
    };
    IconResponse: {
      /** @example https://stage-ics.services.jamfcloud.com/icon/hash_c315ef577b84505de1bfcb50b0c4b1c963da30b2a805f84b24ad09f282b7fad4 */
      url?: string;
      /** @example 5 */
      id?: number;
    };
    IdAndName: {
      /** @example 1 */
      id?: number;
      /** @example A name */
      name?: string;
    };
    IdAndNameV2: {
      /** @example 1 */
      id?: string;
      /** @example A name */
      name?: string;
    };
    Ids: {
      ids?: string[];
    };
    /** @description Initial Jamf Pro setup data */
    Initialize: {
      /** @example VFAB-YDAB-DFAB-UDAB-DEAB-EFAB-ABAB-DEAB */
      activationCode: string;
      /** @example Jamf */
      institutionName: string;
      /** @example false */
      isEulaAccepted: boolean;
      /** @example admin */
      username: string;
      /**
       * Format: password
       * @example 12345
       */
      password: string;
      /** @example ITBob@jamf.com */
      email?: string;
      /** @example https://jamf.jamfcloud.com */
      jssUrl: string;
    };
    /** @description Initial Jamf Pro setup data */
    InitializeV1: {
      /** @example VFAB-YDAB-DFAB-UDAB-DEAB-EFAB-ABAB-DEAB */
      activationCode: string;
      /** @example Jamf */
      institutionName: string;
      /** @example false */
      eulaAccepted: boolean;
      /** @example admin */
      username: string;
      /**
       * Format: password
       * @example 12345
       */
      password: string;
      /** @example ITBob@jamf.com */
      email?: string;
      /** @example https://jamf.jamfcloud.com */
      jssUrl: string;
    };
    /** @description Either devices or groupId must be provided */
    InstallPackage: {
      manifest: components["schemas"]["PackageManifest"];
      /** @example false */
      installAsManaged?: boolean;
      /**
       * @example [
       *   1,
       *   2,
       *   3
       * ]
       */
      devices?: number[];
      /** @example 1 */
      groupId?: string;
    };
    InternalRecipient: {
      /** @example 1 */
      accountId: string;
      /**
       * @default DAILY
       * @example DAILY
       * @enum {string}
       */
      frequency?: "DAILY";
    };
    /** @description Jamf Pro Inventory statistics object. Aggregates managed/unmanaged devices and computers counters */
    InventoryInformation: {
      /**
       * @description Number of managed computers in inventory.
       * @example 1200
       */
      managedComputers?: number;
      /**
       * @description Number of unmanaged computers in inventory.
       * @example 1100
       */
      unmanagedComputers?: number;
      /**
       * @description Number of managed devices in inventory.
       * @example 1200
       */
      managedDevices?: number;
      /**
       * @description Number of unmanaged devices in inventory.
       * @example 1100
       */
      unmanagedDevices?: number;
    };
    InventoryListMobileDevice: {
      /** @example 1 */
      mobileDeviceId?: string;
      /** @example 0dad565fb40b010a9e490440188063a378721069 */
      udid?: string;
      /**
       * Format: password
       * @example 1234
       */
      airPlayPassword?: string;
      /** @example false */
      appAnalyticsEnabled?: boolean;
      /** @example 8675309 */
      assetTag?: string;
      /** @example 26646 */
      availableSpaceMb?: number;
      /** @example 100 */
      batteryLevel?: number;
      /** @example false */
      bluetoothLowEnergyCapable?: boolean;
      /** @example ee:00:7c:f0:e5:aa */
      bluetoothMacAddress?: string;
      /** @example 27503 */
      capacityMb?: number;
      /**
       * Format: date-time
       * @example 2022-10-17T11:48:56.307Z
       */
      lostModeEnabledDate?: string;
      /** @example false */
      declarativeDeviceManagementEnabled?: boolean;
      /** @example 1 */
      deviceId?: string;
      /** @example false */
      deviceLocatorServiceEnabled?: boolean;
      /** @example institutional */
      deviceOwnershipType?: string;
      /** @example 555-555-5555 */
      devicePhoneNumber?: string;
      /** @example false */
      diagnosticAndUsageReportingEnabled?: boolean;
      /** @example iPad */
      displayName?: string;
      /** @example false */
      doNotDisturbEnabled?: boolean;
      /** @example false */
      enrollmentSessionTokenValid?: boolean;
      /** @example TH3YE2RI4D234IS2B6U6IGH95D */
      exchangeDeviceId?: string;
      /** @example false */
      cloudBackupEnabled?: boolean;
      /** @example 15F79 */
      osBuild?: string;
      /** @example 22A103310o */
      osSupplementalBuildVersion?: string;
      /** @example (a) */
      osRapidSecurityResponse?: string;
      /** @example 11.4 */
      osVersion?: string;
      /** @example 10.0.0.1 */
      ipAddress?: string;
      /** @example false */
      itunesStoreAccountActive?: boolean;
      /** @example 1 */
      jamfParentPairings?: number;
      /** @example Polish */
      languages?: string;
      /**
       * Format: date-time
       * @example 2022-10-17T11:48:56.307Z
       */
      lastBackupDate?: string;
      /**
       * Format: date-time
       * @example 2022-10-17T11:48:56.307Z
       */
      lastEnrolledDate?: string;
      /**
       * Format: date-time
       * @example 2022-10-17T11:48:56.307Z
       */
      lastCloudBackupDate?: string;
      /**
       * Format: date-time
       * @example 2022-10-17T11:48:56.307Z
       */
      lastInventoryUpdateDate?: string;
      /** @example null */
      locales?: string;
      /** @example false */
      locationServicesForSelfServiceMobileEnabled?: boolean;
      /** @example false */
      lostModeEnabled?: boolean;
      /** @example true */
      managed?: boolean;
      /**
       * Format: date-time
       * @example 2022-10-17T11:48:56.307Z
       */
      mdmProfileExpirationDate?: string;
      /** @example iPad 7th Generation (Wi-Fi) */
      model?: string;
      /** @example iPad7,11 */
      modelIdentifier?: string;
      /** @example MW742LL */
      modelNumber?: string;
      /** @example 5.70.01 */
      modemFirmwareVersion?: string;
      /** @example 1024 */
      quotaSize?: number;
      /** @example 0 */
      residentUsers?: number;
      /** @example 5c28fdae */
      serialNumber?: string;
      /** @example false */
      sharedIpad?: boolean;
      /** @example true */
      supervised?: boolean;
      /** @example false */
      tethered?: boolean;
      /** @example Europe/Warsaw */
      timeZone?: string;
      /** @example 3 */
      usedSpacePercentage?: number;
      /** @example C4:84:66:92:78:00 */
      wifiMacAddress?: string;
      /** @example Eau Claire */
      building?: string;
      /** @example Support */
      department?: string;
      /** @example support@jamf.com */
      emailAddress?: string;
      /** @example John Smith */
      fullName?: string;
      /** @example IT Team Lead */
      position?: string;
      /** @example 4th Floor - Quad 3 */
      room?: string;
      /** @example 555-555-5555 */
      userPhoneNumber?: string;
      /** @example admin */
      username?: string;
      /** @example 9546567.0 */
      appleCareId?: string;
      /**
       * Format: date-time
       * @example 2022-10-17T11:48:56.307Z
       */
      leaseExpirationDate?: string;
      /** @example 7 */
      lifeExpectancyYears?: number;
      /**
       * Format: date-time
       * @example 2022-10-17T11:48:56.307Z
       */
      poDate?: string;
      /** @example 8675309 */
      poNumber?: string;
      /** @example $399 */
      purchasePrice?: string;
      /** @example true */
      purchasedOrLeased?: boolean;
      /** @example IT Budget */
      purchasingAccount?: string;
      /** @example Nick in IT */
      purchasingContact?: string;
      /** @example Apple */
      vendor?: string;
      /**
       * Format: date-time
       * @example 2022-10-17T11:48:56.307Z
       */
      warrantyExpirationDate?: string;
      /** @example true */
      activationLockEnabled?: boolean;
      /** @example false */
      blockEncryptionCapable?: boolean;
      /** @example false */
      dataProtection?: boolean;
      /** @example false */
      fileEncryptionCapable?: boolean;
      /** @example false */
      hardwareEncryptionSupported?: boolean;
      /** @example Compromised */
      jailbreakStatus?: string;
      /** @example true */
      passcodeCompliant?: boolean;
      /** @example true */
      passcodeCompliantWithProfile?: boolean;
      /** @example 9819083 */
      passcodeLockGracePeriodEnforcedSeconds?: number;
      /** @example true */
      passcodePresent?: boolean;
      /** @example false */
      personalDeviceProfileCurrent?: boolean;
      /** @example 33.1 */
      carrierSettingsVersion?: string;
      /** @example Both */
      cellularTechnology?: string;
      /** @example Verizon Wireless */
      currentCarrierNetwork?: string;
      /** @example 311 */
      currentMobileCountryCode?: string;
      /** @example 480 */
      currentMobileNetworkCode?: string;
      /** @example true */
      dataRoamingEnabled?: boolean;
      /** @example 89049032007008882600085727376656 */
      eid?: string;
      /** @example Verizon */
      homeCarrierNetwork?: string;
      /** @example US */
      homeMobileCountryCode?: string;
      /** @example 480 */
      homeMobileNetworkCode?: string;
      /** @example 8991101200003204514 */
      iccid?: string;
      /** @example 35 882334 083223 0 */
      imei?: string;
      /** @example 35 585308 072899 3 */
      imei2?: string;
      /** @example 35882334083223 */
      meid?: string;
      /** @example false */
      personalHotspotEnabled?: boolean;
      /** @example false */
      roaming?: boolean;
      /** @example Enabled */
      voiceRoamingEnabled?: string;
    };
    InventoryListMobileDeviceSearchResults: {
      /** @example 3 */
      totalCount?: number;
      results?: components["schemas"]["InventoryListMobileDevice"][];
    };
    InventoryPreloadCsvError: {
      /** @example SIZE_EXCEEDED */
      code?: string;
      /** @example Field 'vendor' exceeds max size 60 */
      description?: string;
      /** @example vendor */
      field?: string;
      /** @example abcdefghijklmnopqrstuwxyzabcdefghijklmnopqrstuwxyzabcdefghijklmnopqrstuwxyz */
      value?: string;
      /** @example R7QFDE2YCFN4 */
      serialNumber?: string;
      /** @example 5 */
      line?: number;
      /** @example 60 */
      fieldSize?: number;
      /** @example Computer */
      deviceType?: string;
    };
    InventoryPreloadCsvValidationError: {
      /**
       * @description HTTP status of the response
       * @example 400
       */
      httpStatus?: number;
      errors?: components["schemas"]["InventoryPreloadCsvValidationErrorCause"][];
    };
    InventoryPreloadCsvValidationErrorCause: components["schemas"]["ApiErrorCause"] & {
      /** @example abcdefghijklmnopqrstuwxyzabcdefghijklmnopqrstuwxyzabcdefghijklmnopqrstuwxyz */
      value?: string;
      /** @example R7QFDE2YCFN4 */
      serialNumber?: string;
      /** @example 5 */
      line?: number;
      /** @example 60 */
      fieldSize?: number;
      /** @example Computer */
      deviceType?: string;
    };
    InventoryPreloadCsvValidationSuccess: {
      /** @example 10 */
      recordCount?: number;
    };
    InventoryPreloadExtensionAttribute: {
      /** @example foo */
      name: string;
      /** @example 42 */
      value?: string;
    };
    InventoryPreloadExtensionAttributeColumn: {
      /** @example eaColumn1 */
      name?: string;
      /** @example Column 1 */
      fullName?: string;
    };
    InventoryPreloadExtensionAttributeColumnResult: {
      /** @example 10 */
      totalCount?: number;
      results?: components["schemas"]["InventoryPreloadExtensionAttributeColumn"][];
    };
    InventoryPreloadInvalidCsvResponse: {
      /** @example 400 */
      httpsStatus?: number;
      errors?: components["schemas"]["InventoryPreloadCsvError"][];
    };
    InventoryPreloadRecord: {
      /** @example 1 */
      id?: number;
      /** @example C02L29ECF8J1 */
      serialNumber: string;
      /**
       * @example Computer
       * @enum {string}
       */
      deviceType: "Computer" | "Mobile Device" | "Unknown";
      /** @example admin */
      username?: string;
      /** @example Name */
      fullName?: string;
      /** @example ITBob@jamf.com */
      emailAddress?: string;
      /** @example 555-555-5555 */
      phoneNumber?: string;
      /** @example IT Team Lead */
      position?: string;
      /** @example IT */
      department?: string;
      /** @example Eau Claire */
      building?: string;
      /** @example 4th Floor - Quad 3 */
      room?: string;
      /** @example 8675309 */
      poNumber?: string;
      /** @example 2019-02-04T21:09:31.661Z */
      poDate?: string;
      /** @example 2012-07-21 */
      warrantyExpiration?: string;
      /** @example 5678 */
      appleCareId?: string;
      /** @example 5 years */
      lifeExpectancy?: string;
      /** @example $399 */
      purchasePrice?: string;
      /** @example Nick in IT */
      purchasingContact?: string;
      /** @example IT Budget */
      purchasingAccount?: string;
      /** @example 2015-06-19 */
      leaseExpiration?: string;
      /** @example 123456789 */
      barCode1?: string;
      /** @example 123456789 */
      barCode2?: string;
      /** @example ABCDEFG12345 */
      assetTag?: string;
      /** @example Apple */
      vendor?: string;
      extensionAttributes?: components["schemas"]["InventoryPreloadExtensionAttribute"][];
    };
    InventoryPreloadRecordSearchResults: {
      /** @example 10 */
      totalCount?: number;
      results?: components["schemas"]["InventoryPreloadRecord"][];
    };
    InventoryPreloadRecordSearchResultsV2: {
      /** @example 10 */
      totalCount?: number;
      results?: components["schemas"]["InventoryPreloadRecordV2"][];
    };
    InventoryPreloadRecordV2: {
      /** @example 1 */
      id?: string;
      /** @example C02L29ECF8J1 */
      serialNumber: string;
      /**
       * @example Computer
       * @enum {string}
       */
      deviceType: "Computer" | "Mobile Device" | "Unknown";
      /** @example admin */
      username?: string | null;
      /** @example Name */
      fullName?: string | null;
      /** @example ITBob@jamf.com */
      emailAddress?: string | null;
      /** @example 555-555-5555 */
      phoneNumber?: string | null;
      /** @example IT Team Lead */
      position?: string | null;
      /** @example IT */
      department?: string | null;
      /** @example Eau Claire */
      building?: string | null;
      /** @example 4th Floor - Quad 3 */
      room?: string | null;
      /** @example 8675309 */
      poNumber?: string | null;
      /** @example 2019-02-04T21:09:31.661Z */
      poDate?: string | null;
      /** @example 2012-07-21 */
      warrantyExpiration?: string | null;
      /** @example 5678 */
      appleCareId?: string | null;
      /** @example 5 years */
      lifeExpectancy?: string | null;
      /** @example $399 */
      purchasePrice?: string | null;
      /** @example Nick in IT */
      purchasingContact?: string | null;
      /** @example IT Budget */
      purchasingAccount?: string | null;
      /** @example 2015-06-19 */
      leaseExpiration?: string | null;
      /** @example 123456789 */
      barCode1?: string | null;
      /** @example 123456789 */
      barCode2?: string | null;
      /** @example ABCDEFG12345 */
      assetTag?: string | null;
      /** @example Apple */
      vendor?: string | null;
      extensionAttributes?: components["schemas"]["InventoryPreloadExtensionAttribute"][];
    };
    IosBrandingConfiguration: {
      /** @example 1 */
      id?: string;
      /** @example Self Service */
      brandingName: string;
      /** @example 1 */
      iconId?: number;
      /** @example FFFFFF */
      headerBackgroundColorCode: string;
      /** @example 000001 */
      menuIconColorCode: string;
      /** @example 000000 */
      brandingNameColorCode: string;
      /** @example dark */
      statusBarTextColor: string;
    };
    IosBrandingSearchResults: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["IosBrandingConfiguration"][];
    };
    /** @description will be populated if the type is ios. */
    IosDetails: {
      /** @example iPad 5th Generation (Wi-Fi) */
      model?: string;
      /** @example ipad6,11 */
      modelIdentifier?: string;
      /** @example MP2F2LL */
      modelNumber?: string;
      /** @example true */
      isSupervised?: boolean;
      /** @example 100 */
      batteryLevel?: number;
      /**
       * Format: date-time
       * @example 2018-10-15T16:39:56.307Z
       */
      lastBackupTimestamp?: string;
      /** @example 27503 */
      capacityMb?: number;
      /** @example 26646 */
      availableMb?: number;
      /** @example 3 */
      percentageUsed?: number;
      /** @example false */
      isShared?: boolean;
      /** @example false */
      isDeviceLocatorServiceEnabled?: boolean;
      /** @example false */
      isDoNotDisturbEnabled?: boolean;
      /** @example false */
      isCloudBackupEnabled?: boolean;
      /**
       * Format: date-time
       * @example 2018-10-15T16:39:56.307Z
       */
      lastCloudBackupTimestamp?: string;
      /** @example false */
      isLocationServicesEnabled?: boolean;
      /** @example false */
      isITunesStoreAccountActive?: boolean;
      /** @example false */
      isBleCapable?: boolean;
      computer?: components["schemas"]["IdAndName"];
      purchasing?: components["schemas"]["Purchasing"];
      security?: components["schemas"]["Security"];
      network?: components["schemas"]["Network"];
      applications?: components["schemas"]["MobileDeviceApplication"][];
      certificates?: components["schemas"]["MobileDeviceCertificateV1"][];
      ebooks?: components["schemas"]["MobileDeviceEbook"][];
      configurationProfiles?: components["schemas"]["ConfigurationProfile"][];
      provisioningProfiles?: components["schemas"]["MobileDeviceProvisioningProfiles"][];
      attachments?: components["schemas"]["MobileDeviceAttachment"][];
    };
    /** @description will be populated if the type is ios. */
    IosDetailsV2: {
      /** @example iPad 5th Generation (Wi-Fi) */
      model?: string;
      /** @example ipad6,11 */
      modelIdentifier?: string;
      /** @example MP2F2LL */
      modelNumber?: string;
      /** @example true */
      supervised?: boolean;
      /** @example 100 */
      batteryLevel?: number;
      /**
       * Format: date-time
       * @example 2018-10-15T16:39:56Z
       */
      lastBackupTimestamp?: string;
      /** @example 27503 */
      capacityMb?: number;
      /** @example 26646 */
      availableMb?: number;
      /** @example 3 */
      percentageUsed?: number;
      /** @example false */
      shared?: boolean;
      /** @example false */
      deviceLocatorServiceEnabled?: boolean;
      /** @example false */
      doNotDisturbEnabled?: boolean;
      /** @example false */
      cloudBackupEnabled?: boolean;
      /**
       * Format: date-time
       * @example 2018-10-15T16:39:56.307Z
       */
      lastCloudBackupTimestamp?: string;
      /** @example false */
      locationServicesEnabled?: boolean;
      /** @example false */
      iTunesStoreAccountActive?: boolean;
      /** @example false */
      bleCapable?: boolean;
      computer?: components["schemas"]["IdAndNameV2"];
      purchasing?: components["schemas"]["PurchasingV2"];
      security?: components["schemas"]["SecurityV2"];
      network?: components["schemas"]["NetworkV2"];
      serviceSubscriptions?: components["schemas"]["MobileDeviceServiceSubscriptions"][];
      applications?: components["schemas"]["MobileDeviceApplication"][];
      certificates?: components["schemas"]["MobileDeviceCertificateV2"][];
      ebooks?: components["schemas"]["MobileDeviceEbook"][];
      configurationProfiles?: components["schemas"]["ConfigurationProfile"][];
      provisioningProfiles?: components["schemas"]["MobileDeviceProvisioningProfiles"][];
      attachments?: components["schemas"]["MobileDeviceAttachmentV2"][];
    };
    JamfApplicationResponse: {
      /** @example Jamf Connect */
      displayName?: string;
      /** @example https://docs.jamf.com/jamf-connect/administrator-guide/Release_History.html */
      releaseHistoryUrl?: string;
      artifacts?: components["schemas"]["JamfPackageResponse"][];
    };
    JamfNationCredentials: {
      /** @example emailAddress@mail.com */
      emailAddress?: string;
      /**
       * Format: password
       * @example 12345
       */
      password?: string;
    };
    JamfPackageResponse: {
      /** @example B84F9904-868B-4862-A8F5-33706AADED71 */
      id?: string;
      /** @example JamfProtect-1.2.2.pkg */
      filename?: string;
      /** @example 1.2.2 */
      version?: string;
      /** @example 1970-01-01T00:00:00Z */
      created?: string;
      /** @example https://example.jamf.com/path/to/JamfProtect-1.2.2.pkg */
      url?: string;
    };
    JamfProInformation: {
      /** @example false */
      isVppTokenEnabled?: boolean;
      /** @example false */
      isDepAccountEnabled?: boolean;
      /** @example false */
      isByodEnabled?: boolean;
      /** @example false */
      isUserMigrationEnabled?: boolean;
      /** @example false */
      isCloudDeploymentsEnabled?: boolean;
      /** @example false */
      isPatchEnabled?: boolean;
      /** @example false */
      isSsoSamlEnabled?: boolean;
      /** @example false */
      isSmtpEnabled?: boolean;
    };
    JamfProInformationV2: {
      /** @example false */
      vppTokenEnabled?: boolean;
      /** @example false */
      depAccountEnabled?: boolean;
      /** @example false */
      byodEnabled?: boolean;
      /** @example false */
      userMigrationEnabled?: boolean;
      /** @example false */
      cloudDeploymentsEnabled?: boolean;
      /** @example false */
      patchEnabled?: boolean;
      /** @example false */
      ssoSamlEnabled?: boolean;
      /** @example false */
      smtpEnabled?: boolean;
    };
    JamfProServerUrl: {
      /** @example https://example.com:8443 */
      url: string;
    };
    JamfProVersion: {
      /** @example 10.9.0 */
      version?: string;
    };
    JamfProtectPlan: {
      /** @example b999dfd3-8fde-4bf2-aa56-b167c8b68071 */
      uuid?: string;
      /** @example d265dfd3-8fde-4bf2-aa56-b167c8b68069 */
      id?: string;
      /** @example Main Plan */
      name?: string;
      /** @example Plan for the majority of the company's computers */
      description?: string;
      /** @example 12 */
      profileId?: number;
      /** @example Main Plan (Jamf Protect) */
      profileName?: string;
      /** @example All Computers */
      scopeDescription?: string;
    };
    LanguageCode: {
      /** @example en */
      value?: string;
      /** @example English */
      name?: string;
    };
    LapsAccountManagementHistory: {
      /** @example username */
      username?: string;
      /**
       * @example VIEWED
       * @enum {string}
       */
      eventType?: "PENDING" | "COMPLETED" | "VIEWED" | "ERROR" | "INVALID";
      /**
       * Format: date-time
       * @example 2019-05-16T20:43:43.945Z
       */
      eventTime?: string | null;
      /** @example admin */
      viewedBy?: string | null;
      /**
       * @example MDM
       * @enum {string}
       */
      userSource?: "MDM" | "JMF";
    };
    LapsAccountManagementHistoryResponse: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["LapsAccountManagementHistory"][];
    };
    LapsAudit: {
      /** @example admin */
      viewedBy?: string | null;
      /**
       * Format: date-time
       * @example 2019-05-16T20:43:43.945Z
       */
      dateSeen?: string | null;
    };
    LapsAuditV2: {
      /** @example admin */
      viewedBy?: string | null;
      /**
       * Format: date-time
       * @example 2019-05-16T20:43:43.945Z
       */
      dateSeen?: string | null;
    };
    LapsHistory: {
      /**
       * Format: date-time
       * @example 2019-05-16T20:43:43.945Z
       */
      createdDate?: string | null;
      /**
       * Format: date-time
       * @example 2019-05-16T20:43:43.945Z
       */
      dateLastSeen?: string | null;
      /**
       * Format: date-time
       * @example 2019-05-16T20:43:43.945Z
       */
      expirationTime?: string | null;
      /**
       * @example PENDING
       * @enum {string}
       */
      rotationStatus?: "PENDING" | "COMPLETED" | "VIEWED" | "ERROR" | "INVALID";
    };
    LapsHistoryResponse: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["LapsHistory"][];
    };
    LapsPasswordAndAudits: {
      /**
       * Format: password
       * @example jamf12345
       */
      password?: string;
      /**
       * Format: date-time
       * @example 2019-05-16T20:43:43.945Z
       */
      dateLastSeen?: string | null;
      /**
       * Format: date-time
       * @example 2019-05-16T20:43:43.945Z
       */
      expirationTime?: string | null;
      audits?: components["schemas"]["LapsAudit"][];
    };
    LapsPasswordAndAuditsV2: {
      /**
       * Format: password
       * @example jamf12345
       */
      password?: string;
      /**
       * Format: date-time
       * @example 2019-05-16T20:43:43.945Z
       */
      dateLastSeen?: string | null;
      /**
       * Format: date-time
       * @example 2019-05-16T20:43:43.945Z
       */
      expirationTime?: string | null;
      audits?: components["schemas"]["LapsAuditV2"][];
    };
    LapsPasswordAuditsResults: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["LapsPasswordAndAudits"][];
    };
    LapsPasswordAuditsResultsV2: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["LapsPasswordAndAuditsV2"][];
    };
    LapsPasswordResponse: {
      /**
       * Format: password
       * @example jamf12345
       */
      password?: string;
    };
    LapsPasswordResponseV2: {
      /**
       * Format: password
       * @example jamf12345
       */
      password?: string;
    };
    LapsPendingRotation: {
      lapsUser?: components["schemas"]["LapsUserV2"];
      /**
       * Format: date-time
       * @example 2019-05-16T20:43:43.945Z
       */
      createdDate?: string;
    };
    LapsPendingRotationResponse: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["LapsPendingRotation"][];
    };
    LapsSettingsRequest: {
      /**
       * @description When enabled, all appropriate computers will have the SetAutoAdminPassword command sent to them automatically.
       * @example false
       */
      autoDeployEnabled: boolean;
      /**
       * @description The amount of time in seconds that the local admin password will be rotated after viewing.
       * @example 3600
       */
      passwordRotationTime: number;
      /**
       * @description The amount of time in seconds that the local admin password will be rotated automatically if it is never viewed.
       * @example 7776000
       */
      autoExpirationTime: number;
    };
    LapsSettingsRequestV2: {
      /**
       * @description When enabled, all appropriate computers will have the SetAutoAdminPassword command sent to them automatically.
       * @example false
       */
      autoDeployEnabled: boolean;
      /**
       * @description The amount of time in seconds that the local admin password will be rotated after viewing.
       * @example 3600
       */
      passwordRotationTime: number;
      /**
       * @description When enabled, all appropriate computers will automatically have their password expired and rotated after the configured autoRotateExpirationTime
       * @example false
       */
      autoRotateEnabled: boolean;
      /**
       * @description The amount of time in seconds that the local admin password will be rotated automatically if it is never viewed.
       * @example 7776000
       */
      autoRotateExpirationTime: number;
    };
    LapsSettingsResponse: {
      /**
       * @description When enabled, all appropriate computers will have the SetAutoAdminPassword command sent to them automatically.
       * @example false
       */
      autoDeployEnabled?: boolean;
      /**
       * @description The amount of time in seconds that the local admin password will be rotated after viewing.
       * @example 3600
       */
      passwordRotationTime?: number;
      /**
       * @description The amount of time in seconds that the local admin password will be rotated automatically if it is never viewed.
       * @example 7776000
       */
      autoExpirationTime?: number;
    };
    LapsSettingsResponseV2: {
      /**
       * @description When enabled, all appropriate computers will have the SetAutoAdminPassword command sent to them automatically.
       * @example false
       */
      autoDeployEnabled?: boolean;
      /**
       * @description The amount of time in seconds that the local admin password will be rotated after viewing.
       * @example 3600
       */
      passwordRotationTime?: number;
      /**
       * @description When enabled, all appropriate computers will automatically have their password expired and rotated after the configured autoRotateExpirationTime
       * @example false
       */
      autoRotateEnabled?: boolean;
      /**
       * @description The amount of time in seconds that the local admin password will be rotated automatically if it is never viewed.
       * @example 7776000
       */
      autoRotateExpirationTime?: number;
    };
    LapsUser: {
      /** @example 2db90ebf-ce9c-4078-b508-034c8ee3a060 */
      clientManagementId?: string;
      /** @example 602F96A6-7BC4-43CD-95F2-1DD3B8BC0AF3 */
      guid?: string;
      /** @example admin */
      username?: string;
      /**
       * @example MDM
       * @enum {string}
       */
      userSource?: "MDM" | "JMF";
    };
    LapsUserPassword: {
      /** @example username */
      username?: string;
      /**
       * Format: password
       * @example jamf1234
       */
      password?: string;
    };
    LapsUserPasswordRequest: {
      lapsUserPasswordList?: components["schemas"]["LapsUserPassword"][];
    };
    LapsUserPasswordRequestV2: {
      lapsUserPasswordList?: components["schemas"]["LapsUserPasswordV2"][];
    };
    LapsUserPasswordResponse: {
      lapsUserPasswordList?: components["schemas"]["LapsUserPassword"][];
    };
    LapsUserPasswordResponseV2: {
      lapsUserPasswordList?: components["schemas"]["LapsUserPasswordV2"][];
    };
    LapsUserPasswordV2: {
      /** @example username */
      username?: string;
      /**
       * Format: password
       * @example jamf1234
       */
      password?: string;
    };
    LapsUserResults: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["LapsUser"][];
    };
    LapsUserResultsV2: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["LapsUserV2"][];
    };
    LapsUserV2: {
      /** @example 2db90ebf-ce9c-4078-b508-034c8ee3a060 */
      clientManagementId?: string;
      /** @example 602F96A6-7BC4-43CD-95F2-1DD3B8BC0AF3 */
      guid?: string;
      /** @example admin */
      username?: string;
      /**
       * @example MDM
       * @enum {string}
       */
      userSource?: "MDM" | "JMF";
    };
    /** @description A Cloud Identity Provider LDAP configuration for requests */
    LdapConfigurationRequest: {
      cloudIdPCommon: components["schemas"]["CloudIdPCommonRequest"];
      server: components["schemas"]["CloudLdapServerRequest"];
      mappings?: components["schemas"]["CloudLdapMappingsRequest"];
    };
    /** @description A Cloud Identity Provider LDAP configuration for responses */
    LdapConfigurationResponse: {
      cloudIdPCommon: components["schemas"]["CloudIdPCommon"];
      server: components["schemas"]["CloudLdapServerResponse"];
      mappings?: components["schemas"]["CloudLdapMappingsResponse"];
    };
    /** @description A Cloud Identity Provider LDAP configuration for updates */
    LdapConfigurationUpdate: {
      cloudIdPCommon: components["schemas"]["CloudIdPCommon"];
      server: components["schemas"]["CloudLdapServerUpdate"];
      mappings?: components["schemas"]["CloudLdapMappingsRequest"];
    };
    /** @description An LDAP group. */
    LdapGroup: {
      /** @example 1 */
      id?: string;
      /** @example 89AF33FC-123C-1231-AEFD-9C3ED123AFCC */
      uuid?: string;
      /** @example 1 */
      ldapServerId?: number;
      /** @example Grade School Teachers */
      name?: string;
      /** @example Grade School Teachers */
      distinguishedName?: string;
    };
    LdapGroupSearchResults: {
      /** @example 3 */
      totalCount?: number;
      results?: components["schemas"]["LdapGroup"][];
    };
    /** @description An LDAP Server. */
    LdapServer: {
      /** @example 1 */
      id?: number;
      /** @example Server name */
      name?: string;
    };
    LinkedConnectProfile: {
      /** @example d265dfd3-8fde-4bf2-aa56-b167c8b68069 */
      uuid?: string;
      /** @example d265dfd3-8fde-4bf2-aa56-b167c8b68069 */
      profileId?: string;
      /** @example Best Plans of Mice */
      profileName?: string;
      /** @example Plan for all of the mouse computers at our org */
      profileScopeDescription?: string;
      /**
       * @description Must be a valid Jamf Connect version 2.3.0 or higher. Versions are listed here `https://www.jamf.com/resources/product-documentation/jamf-connect-administrators-guide/`
       * @example 2.3.0
       */
      version?: string;
      /**
       * @description Determines how the server will behave regarding application updates and installs on the devices that have the configuration profile installed. * `PATCH_UPDATES` - Server handles initial installation of the application and any patch updates. * `MINOR_AND_PATCH_UPDATES` - Server handles initial installation of the application and any patch and minor updates. * `INITIAL_INSTALLATION_ONLY` - Server only handles initial installation of the application. Updates will have to be done manually. * `NONE` - Server does not handle any installations or updates for the application. Version is ignored for this type.
       *
       * @default NONE
       * @enum {string}
       */
      autoDeploymentType?: "PATCH_UPDATES" | "MINOR_AND_PATCH_UPDATES" | "INITIAL_INSTALLATION_ONLY" | "NONE";
    };
    LinkedConnectProfileSearchResults: {
      /** @example 13 */
      totalCount?: number;
      results?: components["schemas"]["LinkedConnectProfile"][];
    };
    Locale: {
      /** @example English (United States) */
      description?: string;
      /** @example en_US */
      identifier?: string;
    };
    Location: {
      /** @example admin */
      username?: string;
      /** @example IT Bob */
      realName?: string;
      /** @example ITBob@jamf.com */
      emailAddress?: string;
      /** @example IT Team Lead */
      position?: string;
      /** @example 555-555-5555 */
      phoneNumber?: string;
      department?: components["schemas"]["IdAndName"];
      building?: components["schemas"]["IdAndName"];
      /** @example 4th Floor - Quad 3 */
      room?: string;
    };
    LocationInformation: {
      /** @example name */
      username: string;
      /** @example realName */
      realname: string;
      /** @example 123-456-7890 */
      phone: string;
      /** @example test@jamf.com */
      email: string;
      /** @example room */
      room: string;
      /** @example postion */
      position: string;
      /** @example 1 */
      departmentId: number;
      /** @example 1 */
      buildingId: number;
      /** @example 0 */
      id: number;
      /** @example 1 */
      versionLock: number;
    };
    LocationInformationV2: {
      /** @example name */
      username: string;
      /** @example realName */
      realname: string;
      /** @example 123-456-7890 */
      phone: string;
      /** @example test@jamf.com */
      email: string;
      /** @example room */
      room: string;
      /** @example postion */
      position: string;
      /** @example 1 */
      departmentId: string;
      /** @example 1 */
      buildingId: string;
      /** @example -1 */
      id: string;
      /** @example 1 */
      versionLock: number;
    };
    LocationV2: {
      /** @example admin */
      username?: string;
      /** @example IT Bob */
      realName?: string;
      /** @example ITBob@jamf.com */
      emailAddress?: string;
      /** @example IT Team Lead */
      position?: string;
      /** @example 555-555-5555 */
      phoneNumber?: string;
      /** @example 1 */
      departmentId?: string;
      /** @example 1 */
      buildingId?: string;
      /** @example 4th Floor - Quad 3 */
      room?: string;
    };
    LogOutUserCommand: components["schemas"]["MdmCommandBase"] & Record<string, never>;
    MacOsBrandingConfiguration: {
      /** @example 1 */
      id?: string;
      /** @example Self Service */
      applicationName?: string;
      /** @example Self Service */
      brandingName?: string;
      /** @example Self Service */
      brandingNameSecondary?: string;
      /** @example 1 */
      iconId?: number;
      /** @example 1 */
      brandingHeaderImageId?: number;
    };
    MacOsBrandingSearchResults: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["MacOsBrandingConfiguration"][];
    };
    MacOsManagedSoftwareUpdate: {
      /**
       * @example [
       *   "1",
       *   "2",
       *   "3",
       *   "4"
       * ]
       */
      deviceIds?: string[];
      /** @example 1 */
      groupId?: string;
      /**
       * @description Allow users to defer the update the provided number of times before macOS forces the update. If a value is provided, the Software Update will use the InstallLater install action.
       * @example 7
       */
      maxDeferrals?: number;
      /**
       * @description If no value is provided, the version will default to latest version based on device eligibility.
       * @example 12.0.1
       */
      version?: string;
      /**
       * @description If no value is provided, the skipVersionVerification will default to false. If a value is provided, the specified version will be forced to complete DownloadAndInstall install action.
       * @default false
       * @example false
       */
      skipVersionVerification?: boolean;
      /**
       * @description ApplyMajorUpdate setting is available only when updating to the latest version based on device eligibility. If no value is provided, the calculated latest version will only include minor version updates. If a value is provided, the calculated latest version will include minor and major version updates.
       * @default false
       * @example false
       */
      applyMajorUpdate?: boolean;
      /**
       * @description MaxDeferral is ignored if using the DownloadOnly install action.
       * @example DOWNLOAD_AND_INSTALL
       * @enum {string}
       */
      updateAction?: "DOWNLOAD_AND_INSTALL" | "DOWNLOAD_ONLY";
      /**
       * @description If not set, forceRestart will default to false. Can only be true if using the DownloadAndInstall install action and the devices the command is sent to are on macOs 11 or higher. If true, the DownloadAndInstall action is performed, a restart will be forced. MaxDeferral will be ignored if defined.
       * @default false
       * @example false
       */
      forceRestart?: boolean;
      /**
       * @description Priority can only be configured on macOS 12.3 and above, for minor updates only. Any version below 12.3 is always Low and cannot be changed until prerequisites are met. When qualified, if not explicitly set, priority will default to High
       * @default HIGH
       * @example HIGH
       * @enum {string}
       */
      priority?: "HIGH" | "LOW";
    };
    MacOsManagedSoftwareUpdateResponse: {
      /**
       * @example [
       *   "6E47EF55-5318-494F-A09E-70F613E0AFD1",
       *   "6E73EF55-5318-494F-A09E-70G613E0AFD1"
       * ]
       */
      processManagerUuids?: string[];
      errors?: components["schemas"]["ApiErrorCause"][];
    };
    ManagedSoftwareUpdatePlan: {
      /** @example 6E47EF55-5318-494F-A09E-70F613E0AFD1 */
      planUuid: string;
      device: components["schemas"]["PlanDevice"];
      /**
       * @example DOWNLOAD_INSTALL
       * @enum {string}
       */
      updateAction: "DOWNLOAD_ONLY" | "DOWNLOAD_INSTALL" | "DOWNLOAD_INSTALL_ALLOW_DEFERRAL" | "DOWNLOAD_INSTALL_RESTART" | "DOWNLOAD_INSTALL_SCHEDULE" | "UNKNOWN";
      /**
       * @example SPECIFIC_VERSION
       * @enum {string}
       */
      versionType: "LATEST_MAJOR" | "LATEST_MINOR" | "LATEST_ANY" | "SPECIFIC_VERSION" | "UNKNOWN";
      /**
       * @description Optional. Indicates the specific version to update to. Only available when the version type is set to specific version, otherwise defaults to NO_SPECIFIC_VERSION.
       * @default NO_SPECIFIC_VERSION
       * @example 12.6.1
       */
      specificVersion?: string;
      /**
       * @description Not applicable to all managed software update plans
       * @example 5
       */
      maxDeferrals: number;
      /**
       * @description Optional. Indicates the local date and time of the device to force update by.
       * @example 2023-12-25T21:09:31
       */
      forceInstallLocalDateTime?: string | null;
      status: components["schemas"]["PlanStatus"];
    };
    ManagedSoftwareUpdatePlanGroupPost: {
      group: components["schemas"]["PlanGroupPost"];
      config: components["schemas"]["PlanConfigurationPost"];
    };
    ManagedSoftwareUpdatePlanPost: {
      devices: components["schemas"]["PlanDevicePost"][];
      config: components["schemas"]["PlanConfigurationPost"];
    };
    ManagedSoftwareUpdatePlanPostResponse: {
      plans?: readonly components["schemas"]["PlanDeviceResponse"][];
    };
    ManagedSoftwareUpdatePlanToggle: {
      /** @example false */
      toggle: boolean;
      /** @example false */
      forceInstallLocalDateEnabled?: boolean;
      /** @example false */
      dssEnabled?: boolean;
    };
    ManagedSoftwareUpdatePlans: {
      /** @example 1 */
      totalCount?: number;
      results?: readonly components["schemas"]["ManagedSoftwareUpdatePlan"][];
    };
    ManagedSoftwareUpdateStatus: {
      /** @example 1 */
      osUpdatesStatusId?: string;
      device?: {
        deviceId?: string;
        /** @enum {string} */
        objectType?: "COMPUTER" | "MOBILE_DEVICE" | "APPLE_TV";
        href?: string;
      };
      /** @example 0.8 */
      downloadPercentComplete?: number;
      /** @example false */
      downloaded?: boolean;
      /** @example iOSUpdate19F77 */
      productKey?: string;
      /**
       * @example DOWNLOADING
       * @enum {string}
       */
      status?: "DOWNLOADING" | "IDLE" | "INSTALLING" | "INSTALLED" | "ERROR" | "DOWNLOAD_FAILED" | "DOWNLOAD_REQUIRES_COMPUTER" | "DOWNLOAD_INSUFFICIENT_SPACE" | "DOWNLOAD_INSUFFICIENT_POWER" | "DOWNLOAD_INSUFFICIENT_NETWORK" | "INSTALL_INSUFFICIENT_SPACE" | "INSTALL_INSUFFICIENT_POWER" | "INSTALL_PHONE_CALL_IN_PROGRESS" | "INSTALL_FAILED" | "UNKNOWN";
      /**
       * @description not applicable to all managed software update statuses
       * @example 4
       */
      deferralsRemaining?: number;
      /**
       * @description not applicable to all managed software update statuses
       * @example 5
       */
      maxDeferrals?: number;
      /**
       * Format: date-time
       * @description not applicable to all managed software update statuses
       * @example 2022-12-25T21:09:31.661Z
       */
      nextScheduledInstall?: string;
      /**
       * @description not applicable to all managed software update statuses
       * @example [
       *   "2022-12-22T21:09:31.661Z",
       *   "2022-12-23T21:09:31.661Z",
       *   "2022-12-24T21:09:31.661Z"
       * ]
       */
      pastNotifications?: string[];
      /**
       * Format: date-time
       * @example 2022-12-22T21:09:00.661Z
       */
      created?: string;
      /**
       * Format: date-time
       * @example 2022-12-24T21:09:31.661Z
       */
      updated?: string;
    };
    ManagedSoftwareUpdateStatuses: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["ManagedSoftwareUpdateStatus"][];
    };
    Markdown: {
      /** @example **markdown** */
      markdown?: string;
    };
    /**
     * @example MOBILE_DEVICE
     * @enum {string}
     */
    MdmClientType: "MOBILE_DEVICE" | "TV" | "COMPUTER" | "COMPUTER_USER" | "MOBILE_DEVICE_USER";
    MdmCommand: {
      /** @example aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937 */
      uuid?: string;
      /**
       * Format: date-time
       * @example 2019-05-16T20:43:43.945Z
       */
      dateSent?: string;
      client?: components["schemas"]["MdmCommandClient"];
      commandState?: components["schemas"]["MdmCommandState"];
      commandType?: components["schemas"]["MdmCommandType"];
    };
    MdmCommandBase: {
      commandType: components["schemas"]["MdmCommandType"];
    };
    MdmCommandClient: {
      /** @example aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937 */
      managementId?: string;
      clientType?: components["schemas"]["MdmClientType"];
    };
    MdmCommandClientRequest: {
      /** @example aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937 */
      managementId?: string;
    };
    MdmCommandRequest: {
      clientData?: components["schemas"]["MdmCommandClientRequest"][];
      /**
       * @example {
       *   "commandType": "ENABLE_LOST_MODE",
       *   "lostModeMessage": "Lost Mode Message",
       *   "lostModePhone": "123-456-7890",
       *   "lostModeFootnote": "This is a footnote"
       * }
       */
      commandData?: components["schemas"]["DeclarativeManagementCommand"] | components["schemas"]["DeleteUserCommand"] | components["schemas"]["EnableLostModeCommand"] | components["schemas"]["EraseDeviceCommand"] | components["schemas"]["LogOutUserCommand"] | components["schemas"]["RestartDeviceCommand"] | components["schemas"]["SettingsCommand"] | components["schemas"]["SetRecoveryLockCommand"] | components["schemas"]["SetAutoAdminPasswordCommand"] | components["schemas"]["ShutDownDeviceCommand"];
    };
    MdmCommandResults: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["MdmCommand"][];
    };
    /**
     * @example PENDING
     * @enum {string}
     */
    MdmCommandState: "PENDING" | "ACKNOWLEDGED" | "NOT_NOW" | "ERROR";
    /**
     * @example ENABLE_LOST_MODE
     * @enum {string}
     */
    MdmCommandType: "DECLARATIVE_MANAGEMENT" | "DELETE_USER" | "ENABLE_LOST_MODE" | "ERASE_DEVICE" | "LOG_OUT_USER" | "RESTART_DEVICE" | "SETTINGS" | "SET_RECOVERY_LOCK" | "SET_AUTO_ADMIN_PASSWORD" | "SHUT_DOWN_DEVICE";
    /** @description Cloud Identity Provider user group membership mappings configuration */
    MembershipMappings: {
      /** @example memberOf */
      groupMembershipMapping: string;
    };
    MembershipTestSearchRequest: {
      /** @example admin */
      username: string;
      /** @example users */
      groupname: string;
    };
    MembershipTestSearchResponse: {
      /** @example admin */
      username?: string;
      /** @example true */
      isMember?: boolean;
    };
    MemcachedEndpoints: {
      /** @example 1 */
      id?: string;
      /** @example Jamf Fake Example Memcache */
      name?: string;
      /** @example https://memcache.jamf.com */
      hostName?: string;
      /** @example 9001 */
      port?: number;
      /** @example true */
      enabled?: boolean;
      /** @example 1 */
      jssCacheConfigurationId?: number;
    };
    MobileDevice: {
      /** @example 1 */
      id?: number;
      /** @example iPad */
      name?: string;
      /** @example DMQVGC0DHLA0 */
      serialNumber?: string;
      /** @example C4:84:66:92:78:00 */
      wifiMacAddress?: string;
      /** @example 0dad565fb40b010a9e490440188063a378721069 */
      udid?: string;
      /** @example 651-555-5555 Ext111 */
      phoneNumber?: string;
      /** @example iPad 5th Generation (Wi-Fi) */
      model?: string;
      /** @example iPad6,11 */
      modelIdentifier?: string;
      /** @example admin */
      username?: string;
      /**
       * @example ios
       * @enum {string}
       */
      type?: "ios" | "appleTv" | "android" | "unknown";
      /** @example J132AP */
      softwareUpdateDeviceId?: string;
    };
    MobileDeviceApplication: {
      /** @example com.apple.airport.mobileairportutility */
      identifier?: string;
      /** @example AirPort Utility */
      name?: string;
      /** @example 135.24 */
      version?: string;
      /** @example 7.0 */
      shortVersion?: string;
    };
    MobileDeviceApplicationInventoryDetail: {
      /** @example com.apple.airport.mobileairportutility */
      identifier?: string;
      /** @example AirPort Utility */
      name?: string;
      /** @example 135.24 */
      version?: string;
      /** @example 7.0 */
      shortVersion?: string;
      /** @example Managed */
      managementStatus?: string;
      /** @example true */
      validationStatus?: boolean;
      /** @example 1024 */
      bundleSize?: string;
      /** @example 1423 */
      dynamicSize?: string;
    };
    MobileDeviceAttachment: {
      /** @example Bob's Attachment */
      name?: string;
      /** @example 1 */
      id?: number;
    };
    MobileDeviceAttachmentV2: {
      /** @example Bob's Attachment */
      name?: string;
      /** @example 1 */
      id?: string;
    };
    MobileDeviceCertificate: {
      /** @example 3B259E4B-FAD5-4860-B1DD-336ADA786EBA */
      commonName?: string;
      /** @example false */
      identity?: boolean;
      /**
       * Format: date-time
       * @example 2019-02-04T21:09:31.661Z
       */
      expirationDate?: string;
    };
    MobileDeviceCertificateV1: {
      /** @example 3B259E4B-FAD5-4860-B1DD-336ADA786EBA */
      commonName?: string;
      /** @example false */
      isIdentity?: boolean;
    };
    MobileDeviceCertificateV2: {
      /** @example 3B259E4B-FAD5-4860-B1DD-336ADA786EBA */
      commonName?: string;
      /** @example false */
      identity?: boolean;
      /**
       * Format: date-time
       * @example 2030-10-31T18:04:13Z
       */
      expirationDateEpoch?: string;
      /** @example CN=Fleet Docker Jamf Pro JSS Built-in Certificate Authority */
      subjectName?: string;
      /** @example 5c28fdae */
      serialNumber?: string;
      /** @example 050cfe8ec9d170be7bf8f1a3cac2c52f3c6ddb20 */
      sha1Fingerprint?: string;
      /** @example 2022-05-23T14:54:10Z */
      issuedDateEpoch?: string;
      /**
       * @example ISSUED
       * @enum {string}
       */
      certificateStatus?: "EXPIRING" | "EXPIRED" | "REVOKED" | "PENDING_REVOKE" | "ISSUED";
      /**
       * @example ACTIVE
       * @enum {string}
       */
      lifecycleStatus?: "ACTIVE" | "INACTIVE";
    };
    MobileDeviceDetails: {
      /** @example 1 */
      id?: number;
      /** @example Jon's iPad */
      name?: string;
      /** @example 12345 */
      assetTag?: string;
      /**
       * Format: date-time
       * @example 2018-10-15T16:39:56.307Z
       */
      lastInventoryUpdateTimestamp?: string;
      /** @example 11.4 */
      osVersion?: string;
      /** @example 15F79 */
      osBuild?: string;
      /**
       * @description Collected for iOS 16 and iPadOS 16.1 or later
       * @example 20B101
       */
      osSupplementalBuildVersion?: string;
      /**
       * @description Collected for iOS 16 and iPadOS 16.1 or later
       * @example (a)
       */
      osRapidSecurityResponse?: string;
      /** @example J132AP */
      softwareUpdateDeviceId?: string;
      /** @example DMQVGC0DHLF0 */
      serialNumber?: string;
      /** @example 0dad565fb40b010a9e490440188063a378721069 */
      udid?: string;
      /** @example 10.0.0.1 */
      ipAddress?: string;
      /** @example ee:00:7c:f0:e5:ff */
      wifiMacAddress?: string;
      /** @example ee:00:7c:f0:e5:aa */
      bluetoothMacAddress?: string;
      /** @example true */
      isManaged?: boolean;
      /**
       * Format: date-time
       * @example 2018-10-15T16:39:56.307Z
       */
      initialEntryTimestamp?: string;
      /**
       * Format: date-time
       * @example 2018-10-15T16:39:56.307Z
       */
      lastEnrollmentTimestamp?: string;
      /** @example institutional */
      deviceOwnershipLevel?: string;
      site?: components["schemas"]["IdAndName"];
      extensionAttributes?: components["schemas"]["ExtensionAttribute"][];
      location?: components["schemas"]["Location"];
      /**
       * @description Based on the value of this either ios, appleTv, android objects will be populated.
       * @example ios
       * @enum {string}
       */
      type?: "ios" | "appleTv" | "android" | "unknown";
      ios?: components["schemas"]["IosDetails"];
      appleTv?: components["schemas"]["AppleTvDetails"];
      android?: components["schemas"]["AndroidDetails"];
    };
    MobileDeviceDetailsGetV2: components["schemas"]["MobileDeviceDetailsV2"] & {
      /** @example 73226fb6-61df-4c10-9552-eb9bc353d507 */
      managementId?: string;
    };
    MobileDeviceDetailsV2: {
      /** @example 1 */
      id?: string;
      /**
       * @description Mobile device name.
       * @example Jon's iPad
       */
      name?: string;
      /**
       * @description Enforce the mobile device name. Device must be supervised. If set to true, Jamf Pro will revert the Mobile Device Name to the ‘name’ value each time the device checks in.
       * @example false
       */
      enforceName?: boolean;
      /** @example 12345 */
      assetTag?: string;
      /**
       * Format: date-time
       * @example 2018-10-15T16:39:56Z
       */
      lastInventoryUpdateTimestamp?: string;
      /** @example 11.4 */
      osVersion?: string;
      /** @example 15F79 */
      osBuild?: string;
      /**
       * @description Collected for iOS 16 and iPadOS 16.1 or later
       * @example 20B101
       */
      osSupplementalBuildVersion?: string;
      /**
       * @description Collected for iOS 16 and iPadOS 16.1 or later
       * @example (a)
       */
      osRapidSecurityResponse?: string;
      /** @example J132AP */
      softwareUpdateDeviceId?: string;
      /** @example DMQVGC0DHLF0 */
      serialNumber?: string;
      /** @example 0dad565fb40b010a9e490440188063a378721069 */
      udid?: string;
      /** @example 10.0.0.1 */
      ipAddress?: string;
      /** @example ee:00:7c:f0:e5:ff */
      wifiMacAddress?: string;
      /** @example ee:00:7c:f0:e5:aa */
      bluetoothMacAddress?: string;
      /** @example true */
      managed?: boolean;
      /** @example Europe/Warsaw */
      timeZone?: string;
      /**
       * Format: date-time
       * @example 2018-10-15T16:39:56.307Z
       */
      initialEntryTimestamp?: string;
      /**
       * Format: date-time
       * @example 2018-10-15T16:39:56.307Z
       */
      lastEnrollmentTimestamp?: string;
      /**
       * Format: date-time
       * @example 2018-10-15T16:39:56.307Z
       */
      mdmProfileExpirationTimestamp?: string;
      /** @example institutional */
      deviceOwnershipLevel?: string;
      /** @example User-initiated - no invitation */
      enrollmentMethod?: string;
      /** @example false */
      enrollmentSessionTokenValid?: boolean;
      /** @example true */
      declarativeDeviceManagementEnabled?: boolean;
      site?: components["schemas"]["V1Site"];
      extensionAttributes?: components["schemas"]["ExtensionAttributeV2"][];
      location?: components["schemas"]["LocationV2"];
      /**
       * @description Based on the value of this either ios, appleTv, android objects will be populated.
       * @example ios
       * @enum {string}
       */
      type?: "ios" | "tvos" | "unknown";
      ios?: components["schemas"]["IosDetailsV2"];
      tvos?: components["schemas"]["TvOsDetails"];
    };
    MobileDeviceEbook: {
      /** @example Homer J Simpson */
      author?: string;
      /** @example The Odyssey */
      title?: string;
      /** @example 0.1 */
      version?: string;
    };
    MobileDeviceEbookInventoryDetail: {
      /** @example Homer J Simpson */
      author?: string;
      /** @example The Odyssey */
      title?: string;
      /** @example 0.1 */
      version?: string;
      /** @example PDF */
      kind?: string;
      /** @example Managed */
      managementState?: string;
    };
    MobileDeviceExtensionAttribute: {
      /** @example 1 */
      id?: string;
      /** @example Example EA */
      name?: string;
      /**
       * @example STRING
       * @enum {string}
       */
      type?: "STRING" | "INTEGER" | "DATE";
      value?: string[];
      /** @example false */
      extensionAttributeCollectionAllowed?: boolean;
      /** @example General */
      inventoryDisplay?: string;
    };
    MobileDeviceExtensionAttributeResults: {
      extensionAttributes?: {
          /** @example extAttribute1 */
          name?: string;
        }[];
    };
    MobileDeviceGeneral: {
      /** @example 0dad565fb40b010a9e490440188063a378721069 */
      udid?: string;
      /** @example Banezicron */
      displayName?: string;
      /** @example 8675309 */
      assetTag?: string;
      /** @example -1 */
      siteId?: string;
      /**
       * Format: date-time
       * @example 2022-10-17T11:48:56.307Z
       */
      lastInventoryUpdateDate?: string;
      /** @example 11.4 */
      osVersion?: string;
      /** @example (a) */
      osRapidSecurityResponse?: string;
      /** @example 15F79 */
      osBuild?: string;
      /** @example 22A103310o */
      osSupplementalBuildVersion?: string;
      /** @example J132AP */
      softwareUpdateDeviceId?: string;
      /** @example 10.0.0.1 */
      ipAddress?: string;
      /** @example true */
      managed?: boolean;
      /** @example true */
      supervised?: boolean;
      /**
       * @example Institutional
       * @enum {string}
       */
      deviceOwnershipType?: "Institutional" | "PersonalDeviceProfile" | "UserEnrollment" | "AccountDrivenUserEnrollment" | "AccountDrivenDeviceEnrollment";
      enrollmentMethodPrestage?: components["schemas"]["EnrollmentMethodPrestage"];
      /** @example false */
      enrollmentSessionTokenValid?: boolean;
      /**
       * Format: date-time
       * @example 2022-10-17T11:48:56.307Z
       */
      lastEnrolledDate?: string;
      /**
       * Format: date-time
       * @example 2022-10-17T11:48:56.307Z
       */
      mdmProfileExpirationDate?: string;
      /**
       * @description IANA time zone database name
       * @example Europe/Warsaw
       */
      timeZone?: string;
      /** @example true */
      declarativeDeviceManagementEnabled?: boolean;
      extensionAttributes?: components["schemas"]["MobileDeviceExtensionAttribute"][];
    };
    MobileDeviceGroup: {
      /** @example 1 */
      id?: number;
      /** @example All Managed iPads */
      name?: string;
      /** @example true */
      isSmartGroup?: boolean;
    };
    MobileDeviceHardware: {
      /** @example 100 */
      capacityMb?: number;
      /** @example 30 */
      availableSpaceMb?: number;
      /** @example 70 */
      usedSpacePercentage?: number;
      /** @example 60 */
      batteryLevel?: number;
      /** @example 5c28fdae */
      serialNumber?: string;
      /** @example ee:00:7c:f0:e5:ff */
      wifiMacAddress?: string;
      /** @example ee:00:7c:f0:e5:aa */
      bluetoothMacAddress?: string;
      /** @example iPad7,11 */
      modemFirmwareVersion?: string;
      /** @example iPad 7th Generation (Wi-Fi) */
      model?: string;
      /** @example iPad7,11 */
      modelIdentifier?: string;
      /** @example MW742LL */
      modelNumber?: string;
      /** @example false */
      bluetoothLowEnergyCapable?: boolean;
      /** @example c6a49c6d-8c09-4d71-a37d-2f6a9dfbb69b */
      deviceId?: string;
      extensionAttributes?: components["schemas"]["MobileDeviceExtensionAttribute"][];
    };
    MobileDeviceInventory: {
      /** @example 1 */
      mobileDeviceId?: string;
      /**
       * @description Based on the value of this type either ios or appleTv objects will be populated.
       * @example ["tvOS","iOS"]
       */
      deviceType: string;
      hardware?: components["schemas"]["MobileDeviceHardware"];
      userAndLocation?: components["schemas"]["MobileDeviceUserAndLocation"];
      purchasing?: components["schemas"]["MobileDevicePurchasing"];
      applications?: components["schemas"]["MobileDeviceApplicationInventoryDetail"][];
      certificates?: components["schemas"]["MobileDeviceCertificate"][];
      profiles?: components["schemas"]["MobileDeviceProfile"][];
      userProfiles?: components["schemas"]["MobileDeviceUserProfile"][];
      extensionAttributes?: components["schemas"]["MobileDeviceExtensionAttribute"][];
    };
    MobileDeviceInventorySearchResults: {
      /** @example 2 */
      totalCount?: number;
      results?: components["schemas"]["MobileDeviceResponse"][];
    };
    MobileDeviceIosGeneral: components["schemas"]["MobileDeviceGeneral"] & {
      /** @example false */
      sharedIpad?: boolean;
      /** @example false */
      diagnosticAndUsageReportingEnabled?: boolean;
      /** @example false */
      appAnalyticsEnabled?: boolean;
      /** @example 0 */
      residentUsers?: number;
      /** @example 1024 */
      quotaSize?: number;
      /** @example false */
      temporarySessionOnly?: boolean;
      /** @example 30 */
      temporarySessionTimeout?: number;
      /** @example 30 */
      userSessionTimeout?: number;
      /** @example 30 */
      syncedToComputer?: number;
      /** @example 16 */
      maximumSharediPadUsersStored?: number;
      /**
       * Format: date-time
       * @example 2022-10-17T11:48:56.307Z
       */
      lastBackupDate?: string;
      /** @example false */
      deviceLocatorServiceEnabled?: boolean;
      /** @example false */
      doNotDisturbEnabled?: boolean;
      /** @example false */
      cloudBackupEnabled?: boolean;
      /**
       * Format: date-time
       * @example 2022-10-17T11:48:56.307Z
       */
      lastCloudBackupDate?: string;
      /** @example false */
      locationServicesForSelfServiceMobileEnabled?: boolean;
      /** @example false */
      itunesStoreAccountActive?: boolean;
      /** @example eas-1 */
      exchangeDeviceId?: string;
      /** @example false */
      tethered?: boolean;
    };
    MobileDeviceIosInventory: components["schemas"]["MobileDeviceInventory"] & {
      general?: components["schemas"]["MobileDeviceIosGeneral"];
      security?: components["schemas"]["MobileDeviceSecurity"];
      ebooks?: components["schemas"]["MobileDeviceEbookInventoryDetail"][];
      network?: components["schemas"]["MobileDeviceNetwork"];
      serviceSubscriptions?: components["schemas"]["MobileDeviceServiceSubscriptions"][];
      provisioningProfiles?: components["schemas"]["MobileDeviceProvisioningProfiles"][];
      sharedUsers?: components["schemas"]["MobileDeviceSharedUser"][];
    };
    MobileDeviceLostModeLocation: {
      /**
       * Format: date-time
       * @example 2019-02-04T21:09:31.661Z
       */
      lastLocationUpdate?: string;
      /** @example 7 */
      lostModeLocationHorizontalAccuracyMeters?: number;
      /** @example 5 */
      lostModeLocationVerticalAccuracyMeters?: number;
      /** @example 7.9 */
      lostModeLocationAltitudeMeters?: number;
      /** @example 10 */
      lostModeLocationSpeedMetersPerSecond?: number;
      /** @example 15 */
      lostModeLocationCourseDegrees?: number;
      /** @example 2023-04-21 12:30:00 UTC */
      lostModeLocationTimestamp?: string;
    };
    /** @description This section only avaiable for Ios type. */
    MobileDeviceNetwork: {
      /** @example Unknown */
      cellularTechnology?: string;
      /** @example false */
      voiceRoamingEnabled?: boolean;
      /** @example 59 105109 176278 3 */
      imei?: string;
      /** @example 8991101200003204514 */
      iccid?: string;
      /** @example 15302309236898 */
      meid?: string;
      /**
       * @description EID or "embedded identity document" is a number associated with the eSIM on a device
       * @example 12547444452496388545569920380795
       */
      eid?: string;
      /** @example 33.1 */
      carrierSettingsVersion?: string;
      /** @example Verizon Wireless */
      currentCarrierNetwork?: string;
      /** @example 311 */
      currentMobileCountryCode?: string;
      /** @example 480 */
      currentMobileNetworkCode?: string;
      /** @example Verizon */
      homeCarrierNetwork?: string;
      /** @example US */
      homeMobileCountryCode?: string;
      /** @example 480 */
      homeMobileNetworkCode?: string;
      /** @example true */
      dataRoamingEnabled?: boolean;
      /** @example false */
      roaming?: boolean;
      /** @example false */
      personalHotspotEnabled?: boolean;
      /** @example 555-555-5555 ext 5 */
      phoneNumber?: string;
    };
    MobileDevicePrestage: components["schemas"]["DeviceEnrollmentPrestage"] & {
      /** @example true */
      isAllowPairing: boolean;
      /** @example true */
      isMultiUser: boolean;
      /** @example true */
      isSupervised: boolean;
      /** @example 10 */
      maximumSharedAccounts: number;
      /** @example true */
      isAutoAdvanceSetup: boolean;
      /** @example true */
      isConfigureDeviceBeforeSetupAssistant: boolean;
      /** @example en */
      language?: string;
      /** @example US */
      region?: string;
      names?: components["schemas"]["MobileDevicePrestageNames"];
    };
    MobileDevicePrestageName: {
      /** @example 1 */
      id?: number;
      /** @example iPad */
      deviceName?: string;
      /** @example false */
      isUsed?: boolean;
    };
    MobileDevicePrestageNameV2: {
      /** @example 1 */
      id?: string;
      /** @example iPad */
      deviceName?: string;
      /** @example false */
      used?: boolean;
    };
    MobileDevicePrestageNames: {
      /** @example List of Names */
      assignNamesUsing?: string;
      prestageDeviceNames?: components["schemas"]["MobileDevicePrestageName"][];
      /** @example prefix */
      deviceNamePrefix?: string;
      /** @example suffix */
      deviceNameSuffix?: string;
      /** @example name */
      singleDeviceName?: string;
      /** @example true */
      isManageNames?: boolean;
      /** @example true */
      isDeviceNamingConfigured?: boolean;
    };
    MobileDevicePrestageNamesV2: {
      /** @example List of Names */
      assignNamesUsing?: string;
      prestageDeviceNames?: components["schemas"]["MobileDevicePrestageNameV2"][];
      /** @example prefix */
      deviceNamePrefix?: string;
      /** @example suffix */
      deviceNameSuffix?: string;
      /** @example name */
      singleDeviceName?: string;
      /** @example true */
      manageNames?: boolean;
      /** @example true */
      deviceNamingConfigured?: boolean;
    };
    MobileDevicePrestageSearchResults: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["GetMobileDevicePrestage"][];
    };
    MobileDevicePrestageSearchResultsV2: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["GetMobileDevicePrestageV2"][];
    };
    MobileDevicePrestageV2: components["schemas"]["DeviceEnrollmentPrestageV2"] & {
      /** @example true */
      allowPairing: boolean;
      /** @example true */
      multiUser: boolean;
      /** @example true */
      supervised: boolean;
      /** @example 10 */
      maximumSharedAccounts: number;
      /** @example true */
      configureDeviceBeforeSetupAssistant: boolean;
      names?: components["schemas"]["MobileDevicePrestageNamesV2"];
      /** @example true */
      sendTimezone: boolean;
      /** @example America/Chicago */
      timezone: string;
      /** @example 4096 */
      storageQuotaSizeMegabytes: number;
      /** @example true */
      useStorageQuotaSize: boolean;
      /** @example false */
      temporarySessionOnly?: boolean;
      /** @example false */
      enforceTemporarySessionTimeout?: boolean;
      /** @example 30 */
      temporarySessionTimeout?: number;
      /** @example false */
      enforceUserSessionTimeout?: boolean;
      /** @example 30 */
      userSessionTimeout?: number;
    };
    MobileDeviceProfile: {
      /** @example Test WiFi */
      displayName?: string;
      /** @example 1 */
      version?: string;
      /** @example D29DD9FB-0D5B-422F-A3A2-ABBC5848E949 */
      uuid?: string;
      /** @example ac2-server4.D0EFAC2D-326C-4BB6-87E6-2BCB88490AAA */
      identifier?: string;
      /** @example true */
      removable?: boolean;
      /**
       * Format: date-time
       * @example 2019-02-04T21:09:31.661Z
       */
      lastInstalled?: string;
    };
    MobileDeviceProvisioningProfiles: {
      /** @example jamfnation */
      displayName?: string;
      /** @example 89AF33FC-123C-1231-AEFD-9C3ED123AFCC */
      uuid?: string;
      /**
       * Format: date-time
       * @example 2018-10-24T21:57:37Z
       */
      expirationDate?: string;
    };
    MobileDevicePurchasing: {
      /** @example true */
      purchased?: boolean;
      /** @example false */
      leased?: boolean;
      /** @example 8675309 */
      poNumber?: string;
      /** @example Apple */
      vendor?: string;
      /** @example 9546567.0 */
      appleCareId?: string;
      /** @example $399 */
      purchasePrice?: string;
      /** @example IT Budget */
      purchasingAccount?: string;
      /**
       * Format: date-time
       * @example 2019-02-04T21:09:31.661Z
       */
      poDate?: string;
      /**
       * Format: date-time
       * @example 2019-02-04T21:09:31.661Z
       */
      warrantyExpiresDate?: string;
      /**
       * Format: date-time
       * @example 2019-02-04T21:09:31.661Z
       */
      leaseExpiresDate?: string;
      /** @example 7 */
      lifeExpectancy?: number;
      /** @example Nick in IT */
      purchasingContact?: string;
      extensionAttributes?: components["schemas"]["MobileDeviceExtensionAttribute"][];
    };
    MobileDeviceResponse: components["schemas"]["MobileDeviceTvOsInventory"] | components["schemas"]["MobileDeviceIosInventory"];
    MobileDeviceSearchParams: {
      /** @example 1 */
      pageNumber?: number;
      /** @example 100 */
      pageSize?: number;
      /** @example false */
      isLoadToEnd?: boolean;
      orderBy?: components["schemas"]["OrderBy"][];
      /** @example 2b6f0cc904d137be2e1730235f5664094b831186 */
      udid?: string;
      /** @example ee:00:7c:f0:e5:aa */
      macAddress?: string;
      /** @example Jan's MObile Device */
      name?: string;
      /** @example C02L29ECF8J1 */
      serialNumber?: string;
      /** @example IOS */
      osType?: string;
      /** @example false */
      isManaged?: boolean;
      /**
       * @example [
       *   1,
       *   3
       * ]
       */
      excludedIds?: number[];
    };
    MobileDeviceSearchResults: {
      /** @example 3 */
      totalCount?: number;
      results?: components["schemas"]["MobileDevice"][];
    };
    MobileDeviceSearchResultsV2: {
      /** @example 3 */
      totalCount?: number;
      results?: components["schemas"]["MobileDeviceV2"][];
    };
    /**
     * @example GENERAL
     * @enum {string}
     */
    MobileDeviceSection: "GENERAL" | "HARDWARE" | "USER_AND_LOCATION" | "PURCHASING" | "SECURITY" | "APPLICATIONS" | "EBOOKS" | "NETWORK" | "SERVICE_SUBSCRIPTIONS" | "CERTIFICATES" | "PROFILES" | "USER_PROFILES" | "PROVISIONING_PROFILES" | "SHARED_USERS" | "EXTENSION_ATTRIBUTES";
    /** @description This section only avaiable for Ios type. */
    MobileDeviceSecurity: {
      /** @example false */
      dataProtected?: boolean;
      /** @example true */
      blockLevelEncryptionCapable?: boolean;
      /** @example true */
      fileLevelEncryptionCapable?: boolean;
      /** @example false */
      passcodePresent?: boolean;
      /** @example true */
      passcodeCompliant?: boolean;
      /** @example true */
      passcodeCompliantWithProfile?: boolean;
      /** @example 3 */
      hardwareEncryption?: number;
      /** @example false */
      activationLockEnabled?: boolean;
      /** @example false */
      jailBreakDetected?: boolean;
      /** @example 3 */
      passcodeLockGracePeriodEnforcedSeconds?: number;
      /** @example false */
      personalDeviceProfileCurrent?: boolean;
      /** @example false */
      lostModeEnabled?: boolean;
      /** @example false */
      lostModePersistent?: boolean;
      /** @example Lost phone */
      lostModeMessage?: string;
      /** @example 555-555-5555 */
      lostModePhoneNumber?: string;
      /** @example Note */
      lostModeFootnote?: string;
      lostModeLocation?: components["schemas"]["MobileDeviceLostModeLocation"];
    };
    MobileDeviceServiceSubscriptions: {
      /** @example 47.1 */
      carrierSettingsVersion?: string;
      /** @example T-Mobile Wi-Fi */
      currentCarrierNetwork?: string;
      /** @example 310 */
      currentMobileCountryCode?: string;
      /** @example 260 */
      currentMobileNetworkCode?: string;
      /** @example T-Mobile Wi-Fi */
      subscriberCarrierNetwork?: string;
      /** @example 89049032007008882600085727376656 */
      eid?: string;
      /** @example 8901 2605 7071 8002 130 */
      iccid?: string;
      /** @example 35 882334 083223 0 */
      imei?: string;
      /** @example true */
      dataPreferred?: boolean;
      /** @example true */
      roaming?: boolean;
      /** @example true */
      voicePreferred?: boolean;
      /** @example Primary */
      label?: string;
      /**
       * @description The unique identifier for this subscription.
       * @example D1F4AEC5-2FCD-4A6D-A09E-A940F60F856B
       */
      labelId?: string;
      /** @example 35882334083223 */
      meid?: string;
      /** @example +15128145868 */
      phoneNumber?: string;
      /**
       * @description The description of the slot that contains the SIM representing this subscription.
       * @example CTSubscriptionSlotOne
       */
      slot?: string;
    };
    MobileDeviceSharedUser: {
      /** @example astark@jamf.edu */
      managedAppleId?: string;
      /** @example true */
      loggedIn?: boolean;
      /** @example true */
      dataToSync?: boolean;
    };
    MobileDeviceTvOsGeneral: components["schemas"]["MobileDeviceGeneral"] & {
      /** @example 1234 */
      airPlayPassword?: string;
      /** @example null */
      locales?: string;
      /** @example english */
      languages?: string;
    };
    MobileDeviceTvOsInventory: components["schemas"]["MobileDeviceInventory"] & {
      general?: components["schemas"]["MobileDeviceTvOsGeneral"];
    };
    MobileDeviceUserAndLocation: {
      /** @example admin */
      username?: string;
      /** @example IT Bob */
      realName?: string;
      /** @example ITBob@jamf.com */
      emailAddress?: string;
      /** @example IT Team Lead */
      position?: string;
      /** @example 555-555-5555 */
      phoneNumber?: string;
      /** @example 1 */
      departmentId?: string;
      /** @example 1 */
      buildingId?: string;
      /** @example room */
      room?: string;
      /** @example Building 1 */
      building?: string;
      /** @example Department 1 */
      department?: string;
      extensionAttributes?: components["schemas"]["MobileDeviceExtensionAttribute"][];
    };
    MobileDeviceUserProfile: {
      /** @example Test WiFi */
      displayName?: string;
      /** @example 1 */
      version?: string;
      /** @example D29DD9FB-0D5B-422F-A3A2-ABBC5848E949 */
      uuid?: string;
      /** @example ac2-server4.D0EFAC2D-326C-4BB6-87E6-2BCB88490AAA */
      identifier?: string;
      /** @example true */
      removable?: boolean;
      /**
       * Format: date-time
       * @example 2019-02-04T21:09:31.661Z
       */
      lastInstalled?: string;
      /** @example admin */
      username?: string;
    };
    MobileDeviceV2: {
      /** @example 1 */
      id?: string;
      /** @example iPad */
      name?: string;
      /** @example DMQVGC0DHLA0 */
      serialNumber?: string;
      /** @example C4:84:66:92:78:00 */
      wifiMacAddress?: string;
      /** @example 0dad565fb40b010a9e490440188063a378721069 */
      udid?: string;
      /** @example 651-555-5555 Ext111 */
      phoneNumber?: string;
      /** @example iPad 5th Generation (Wi-Fi) */
      model?: string;
      /** @example iPad6,11 */
      modelIdentifier?: string;
      /** @example admin */
      username?: string;
      /**
       * @example ios
       * @enum {string}
       */
      type?: "ios" | "tvos" | "unknown";
      /** @example 73226fb6-61df-4c10-9552-eb9bc353d507 */
      managementId?: string;
      /** @example J132AP */
      softwareUpdateDeviceId?: string;
    };
    Network: {
      /** @example Unknown */
      cellularTechnology?: string;
      /** @example false */
      isVoiceRoamingEnabled?: boolean;
      /** @example 59 105109 176278 3 */
      imei?: string;
      /** @example 8991101200003204514 */
      iccid?: string;
      /** @example 15302309236898 */
      meid?: string;
      /** @example 33.1 */
      carrierSettingsVersion?: string;
      /** @example Verizon Wireless */
      currentCarrierNetwork?: string;
      /** @example 311 */
      currentMobileCountryCode?: string;
      /** @example 480 */
      currentMobileNetworkCode?: string;
      /** @example Verizon */
      homeCarrierNetwork?: string;
      /** @example US */
      homeMobileCountryCode?: string;
      /** @example 480 */
      homeMobileNetworkCode?: string;
      /** @example true */
      isDataRoamingEnabled?: boolean;
      /** @example false */
      isRoaming?: boolean;
      /** @example false */
      isPersonalHotspotEnabled?: boolean;
      /** @example 555-555-5555 ext 5 */
      phoneNumber?: string;
    };
    NetworkV2: {
      /** @example Unknown */
      cellularTechnology?: string;
      /** @example false */
      voiceRoamingEnabled?: boolean;
      /** @example 59 105109 176278 3 */
      imei?: string;
      /** @example 8991101200003204514 */
      iccid?: string;
      /** @example 15302309236898 */
      meid?: string;
      /**
       * @description EID or "embedded identity document" is a number associated with the eSIM on a device
       * @example 12547444452496388545569920380795
       */
      eid?: string;
      /** @example 33.1 */
      carrierSettingsVersion?: string;
      /** @example Verizon Wireless */
      currentCarrierNetwork?: string;
      /** @example 311 */
      currentMobileCountryCode?: string;
      /** @example 480 */
      currentMobileNetworkCode?: string;
      /** @example Verizon */
      homeCarrierNetwork?: string;
      /** @example US */
      homeMobileCountryCode?: string;
      /** @example 480 */
      homeMobileNetworkCode?: string;
      /** @example true */
      dataRoamingEnabled?: boolean;
      /** @example false */
      roaming?: boolean;
      /** @example false */
      personalHotspotEnabled?: boolean;
      /** @example 555-555-5555 ext 5 */
      phoneNumber?: string;
    };
    /** @description Jamf Pro notification used for important alerts. */
    Notification: {
      /** @example EXCEEDED_LICENSE_COUNT */
      type?: string;
      /** @example 1 */
      id?: number;
      /** @example {} */
      params?: {
        [key: string]: Record<string, never>;
      };
    };
    /** @enum {string} */
    NotificationType: "APNS_CERT_REVOKED" | "APNS_CONNECTION_FAILURE" | "APPLE_SCHOOL_MANAGER_T_C_NOT_SIGNED" | "BUILT_IN_CA_EXPIRED" | "BUILT_IN_CA_EXPIRING" | "BUILT_IN_CA_RENEWAL_FAILED" | "BUILT_IN_CA_RENEWAL_SUCCESS" | "CLOUD_LDAP_CERT_EXPIRED" | "CLOUD_LDAP_CERT_WILL_EXPIRE" | "DEP_INSTANCE_EXPIRED" | "DEP_INSTANCE_WILL_EXPIRE" | "DEVICE_ENROLLMENT_PROGRAM_T_C_NOT_SIGNED" | "EXCEEDED_LICENSE_COUNT" | "FREQUENT_INVENTORY_COLLECTION_POLICY" | "GSX_CERT_EXPIRED" | "GSX_CERT_WILL_EXPIRE" | "HCL_BIND_ERROR" | "HCL_ERROR" | "INSECURE_LDAP" | "INVALID_REFERENCES_EXT_ATTR" | "INVALID_REFERENCES_POLICIES" | "INVALID_REFERENCES_SCRIPTS" | "JAMF_CONNECT_UPDATE" | "JAMF_PROTECT_UPDATE" | "JIM_ERROR" | "LDAP_CONNECTION_CHECK_THROUGH_JIM_FAILED" | "LDAP_CONNECTION_CHECK_THROUGH_JIM_SUCCESSFUL" | "MDM_EXTERNAL_SIGNING_CERTIFICATE_EXPIRED" | "MDM_EXTERNAL_SIGNING_CERTIFICATE_EXPIRING" | "MDM_EXTERNAL_SIGNING_CERTIFICATE_EXPIRING_TODAY" | "MII_HEARTBEAT_FAILED_NOTIFICATION" | "MII_INVENTORY_UPLOAD_FAILED_NOTIFICATION" | "MII_UNATHORIZED_RESPONSE_NOTIFICATION" | "PATCH_EXTENTION_ATTRIBUTE" | "PATCH_UPDATE" | "POLICY_MANAGEMENT_ACCOUNT_PAYLOAD_SECURITY_MULTIPLE" | "POLICY_MANAGEMENT_ACCOUNT_PAYLOAD_SECURITY_SINGLE" | "PUSH_CERT_EXPIRED" | "PUSH_CERT_WILL_EXPIRE" | "PUSH_PROXY_CERT_EXPIRED" | "SSO_CERT_EXPIRED" | "SSO_IDP_CERT_EXPIRED" | "SSO_CERT_WILL_EXPIRE" | "SSO_IDP_CERT_WILL_EXPIRE" | "TOMCAT_SSL_CERT_EXPIRED" | "TOMCAT_SSL_CERT_WILL_EXPIRE" | "USER_INITIATED_ENROLLMENT_MANAGEMENT_ACCOUNT_SECURITY_ISSUE" | "USER_MAID_DUPLICATE_ERROR" | "USER_MAID_MISMATCH_ERROR" | "USER_MAID_ROSTER_DUPLICATE_ERROR" | "VPP_ACCOUNT_EXPIRED" | "VPP_ACCOUNT_WILL_EXPIRE" | "VPP_TOKEN_REVOKED" | "DEVICE_COMPLIANCE_CONNECTION_ERROR" | "CONDITIONAL_ACCESS_CONNECTION_ERROR" | "AZURE_AD_MIGRATION_REPORT_GENERATED" | "BEYOND_CORP_CONNECTION_ERROR";
    /** @description Jamf Pro notification used for important alerts. */
    NotificationV1: {
      type?: components["schemas"]["NotificationType"];
      /** @example 1 */
      id?: string;
      /** @example {} */
      params?: {
        [key: string]: Record<string, never>;
      };
    };
    OAuthClientCredentials: {
      /** @example admin */
      clientId: string;
      /** @example 12345 */
      clientSecret: string;
    };
    ObjectHistory: {
      /** @example 1 */
      id?: number;
      /** @example admin */
      username?: string;
      /** @example 2019-02-04T21:09:31.661Z */
      date?: string;
      /** @example Sso settings update */
      note?: string;
      /** @example Is SSO Enabled false\nSelected SSO Provider */
      details?: string | null;
    };
    ObjectHistoryNote: {
      /** @example A generic note can sometimes be useful, but generally not. */
      note: string;
    };
    ObjectHistoryV1: {
      /** @example 1 */
      id?: string;
      /** @example admin */
      username?: string;
      /** @example 2019-02-04T21:09:31.661Z */
      date?: string;
      /** @example Sso settings update */
      note?: string;
      /** @example Is SSO Enabled false\nSelected SSO Provider */
      details?: string | null;
    };
    OnboardingConfiguration: {
      /** @example 1 */
      id?: string;
      /** @example true */
      enabled: boolean;
      onboardingItems: components["schemas"]["OnboardingItem"][];
    };
    OnboardingEligibleItem: {
      /** @example 1 */
      id: string;
      /** @example Item 1 */
      name: string;
      /** @example All Computers */
      scopeDescription: string;
      /** @example Example Site */
      siteDescription: string;
    };
    /** @description A list of onboarding eligible items */
    OnboardingEligibleItemsSearchResult: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["OnboardingEligibleItem"][];
    };
    OnboardingItem: {
      /** @example 3 */
      id?: string | null;
      /**
       * @description The id of the Jamf Pro object that should be added to the onboarding workflow for end users.
       * Use this in conjunction with the selfServiceEntityType. For example, if the policy with id 132
       * should be added to onboarding, then entityId should be 132 and selfServiceEntityType should be
       * OS_X_POLICY.
       *
       * @example 1
       */
      entityId: string;
      /**
       * @example OS_X_POLICY
       * @enum {string}
       */
      selfServiceEntityType: "OS_X_POLICY" | "OS_X_CONFIG_PROFILE" | "OS_X_MAC_APP" | "OS_X_APP_INSTALLER" | "OS_X_EBOOK" | "OS_X_PATCH_POLICY" | "UNKNOWN";
      /** @example 35 */
      priority: number;
    };
    OrderBy: {
      /** @example Name */
      field?: string;
      /**
       * @example DESC
       * @enum {string}
       */
      direction?: "ASC" | "DESC";
    };
    PackageManifest: {
      /** @example https://example.jamf.com/this/package */
      url: string;
      /** @example dcb02a41cd6d842943459a88c96a5f72 */
      hash: string;
      /**
       * @example MD5
       * @enum {string}
       */
      hashType: "MD5" | "SHA256";
      /** @example https://example.jamf.com/img/display/this/package.jpg */
      displayImageUrl?: string;
      /** @example https://example.jamf.com/img/full/this/package.jpg */
      fullSizeImageUrl?: string;
      /** @example com.jamf.example */
      bundleId: string;
      /** @example 0.1.0 */
      bundleVersion: string;
      /** @example Subtitle */
      subtitle?: string;
      /** @example Title */
      title: string;
      /** @example 12345 */
      sizeInBytes: number;
    };
    ParentApp: {
      /** @example Europe/Paris */
      timezoneId: string;
      /**
       * @example {
       *   "SUNDAY": {
       *     "beginTime": "08:30:00",
       *     "endTime": "15:45:00"
       *   }
       * }
       */
      restrictedTimes: {
        key?: components["schemas"]["DayOfWeek"];
        [key: string]: components["schemas"]["TimeFrame"] | undefined;
      };
      /** @example 1 */
      deviceGroupId: number;
      /** @example true */
      isEnabled: boolean;
      /** @example true */
      allowTemplates?: boolean;
      /** @example true */
      disassociateOnWipeAndReEnroll?: boolean;
      /** @example true */
      allowClearPasscode?: boolean;
      safelistedApps?: components["schemas"]["SafelistedApp"][];
    };
    PatchPolicies: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["PatchPolicyListView"][];
    };
    PatchPolicyDetail: {
      /** @example 1 */
      id?: string;
      /** @example Policy name */
      name?: string;
      /** @example false */
      enabled?: boolean;
      /** @example v1 */
      targetPatchVersion?: string;
      /** @example automatically */
      deploymentMethod?: string;
      /** @example 1 */
      softwareTitleId?: string;
      /** @example 1 */
      softwareTitleConfigurationId?: string;
      /** @example 5 */
      killAppsDelayMinutes?: number;
      /** @example message */
      killAppsMessage?: string;
      /** @example false */
      downgrade?: boolean;
      /** @example false */
      patchUnknownVersion?: boolean;
      /** @example notification header */
      notificationHeader?: string;
      /** @example false */
      selfServiceEnforceDeadline?: boolean;
      /** @example 1 */
      selfServiceDeadline?: number;
      /** @example install */
      installButtonText?: string;
      /** @example description */
      selfServiceDescription?: string;
      /** @example 1 */
      iconId?: string;
      /** @example 1 */
      reminderFrequency?: number;
      /** @example false */
      reminderEnabled?: boolean;
    };
    PatchPolicyDetails: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["PatchPolicyDetail"][];
    };
    PatchPolicyListView: {
      /** @example 1 */
      id?: string;
      /** @example Policy name */
      policyName?: string;
      /** @example false */
      policyEnabled?: boolean;
      /** @example v1 */
      policyTargetVersion?: string;
      /** @example automatically */
      policyDeploymentMethod?: string;
      /** @example Software title */
      softwareTitle?: string;
      /** @example 1 */
      softwareTitleConfigurationId?: string;
      /** @example 0 */
      pending?: number;
      /** @example 0 */
      completed?: number;
      /** @example 0 */
      deferred?: number;
      /** @example 0 */
      failed?: number;
    };
    PatchPolicyLogDetail: {
      /** @example 1 */
      id?: string;
      /** @example 1 */
      attemptNumber?: number;
      /** @example 1 */
      deviceId?: string;
      actions?: components["schemas"]["PatchPolicyLogDetailAction"][];
    };
    PatchPolicyLogDetailAction: {
      /** @example 1 */
      id?: string;
      /** @example 1 */
      actionOrder?: number;
      /** @example Installing... */
      action?: string;
    };
    PatchPolicyLogEligibleRetryCount: {
      /** @example 5 */
      count?: number;
    };
    PatchPolicyLogRetry: {
      /**
       * @example [
       *   "1",
       *   "3"
       * ]
       */
      deviceIds?: string[];
    };
    PatchPolicyLogV2: {
      /** @example 1 */
      patchPolicyId?: string;
      /** @example Admins Macbook */
      deviceName?: string;
      /** @example 1 */
      deviceId?: string;
      /** @example 1 */
      statusCode?: number;
      /**
       * Format: date-time
       * @example 2019-02-04T21:09:31.661Z
       */
      statusDate?: string;
      /**
       * @example COMPLETED
       * @enum {string}
       */
      statusEnum?: "UNKNOWN" | "PENDING" | "COMPLETED" | "FAILED";
      /** @example 1 */
      attemptNumber?: number;
      /** @example 1 */
      ignoredForPatchPolicyId?: string;
    };
    PatchPolicyLogs: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["PatchPolicyLogV2"][];
    };
    PatchPolicyV2OnDashboard: {
      /** @example true */
      onDashboard?: boolean;
    };
    PatchSoftwareTitleConfiguration: components["schemas"]["PatchSoftwareTitleConfigurationBase"] & {
      /** @example 1 */
      id?: string;
      packages?: components["schemas"]["PatchSoftwareTitlePackages"][];
    };
    PatchSoftwareTitleConfigurationBase: {
      /** @example Google Chrome */
      displayName: string;
      /**
       * @default -1
       * @example -1
       */
      categoryId?: string;
      /**
       * @default -1
       * @example -1
       */
      siteId?: string;
      /**
       * @default false
       * @example false
       */
      uiNotifications?: boolean;
      /**
       * @default false
       * @example false
       */
      emailNotifications?: boolean;
      /** @example 1 */
      softwareTitleId: string;
      /** @example false */
      jamfOfficial?: boolean;
      extensionAttributes?: components["schemas"]["PatchSoftwareTitleConfigurationExtensionAttributes"][];
      /** @example Safari */
      softwareTitleName?: string;
      /** @example AppleSafari */
      softwareTitleNameId?: string;
      /** @example Apple */
      softwareTitlePublisher?: string;
      /** @example Jamf */
      patchSourceName?: string;
      /** @example true */
      patchSourceEnabled?: boolean;
    };
    PatchSoftwareTitleConfigurationDefinitionKillApp: {
      /** @example Firefox */
      appName?: string;
    };
    PatchSoftwareTitleConfigurationDependencies: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["PatchSoftwareTitleConfigurationDependency"][];
    };
    PatchSoftwareTitleConfigurationDependency: {
      /** @example 1 */
      smartGroupId?: string;
      /** @example name */
      smartGroupName?: string;
    };
    PatchSoftwareTitleConfigurationExtensionAttributes: {
      /**
       * @description Once an extension attribute is accepted, it cannot be reverted.
       * @default false
       * @example false
       */
      accepted?: boolean;
      /** @example google-chrome-ea */
      eaId?: string;
    };
    PatchSoftwareTitleConfigurationPatch: {
      /** @example Google Chrome */
      displayName?: string;
      /** @example -1 */
      categoryId?: string;
      /** @example -1 */
      siteId?: string;
      /** @example false */
      uiNotifications?: boolean;
      /** @example false */
      emailNotifications?: boolean;
      /** @example 1 */
      softwareTitleId?: string;
      packages?: components["schemas"]["PatchSoftwareTitlePackages"][];
      extensionAttributes?: components["schemas"]["PatchSoftwareTitleConfigurationExtensionAttributes"][];
    };
    PatchSoftwareTitleDefinition: {
      /** @example 10.37.0 */
      version?: string;
      /**
       * @default -1
       * @example 12.0.1
       */
      minimumOperatingSystem?: string;
      /**
       * @default -1
       * @example 2010-12-10 13:36:04
       */
      releaseDate?: string;
      /**
       * @default false
       * @example false
       */
      rebootRequired?: boolean;
      killApps?: components["schemas"]["PatchSoftwareTitleConfigurationDefinitionKillApp"][];
      /**
       * @default false
       * @example false
       */
      standalone?: boolean;
      /** @example 1 */
      absoluteOrderId?: string;
    };
    PatchSoftwareTitleDefinitions: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["PatchSoftwareTitleDefinition"][];
    };
    PatchSoftwareTitleExtensionAttributes: {
      /** @example google-chrome-ea */
      eaId?: string;
      /** @example true */
      accepted?: boolean;
      /** @example Google Chrome */
      displayName?: string;
      /**
       * Format: base64
       * @example ZXhhbXBsZSBvZiBhIGJhc2U2NCBlbmNvZGVkIHZhbGlkIHAxMi4ga2V5c3RvcmUgZmlsZQ==
       */
      scriptContents?: string;
    };
    PatchSoftwareTitlePackages: {
      /** @example 1 */
      packageId?: string;
      /** @example 1 */
      version?: string;
      /** @example Firefox.pkg */
      displayName?: string;
    };
    PatchSoftwareTitleReport: {
      /** @example MacBook */
      computerName?: string;
      /** @example 2 */
      deviceId?: string;
      /** @example User */
      username?: string;
      /** @example 10.11 */
      operatingSystemVersion?: string;
      /**
       * Format: date-time
       * @example 1970-01-01T00:00:00Z
       */
      lastContactTime?: string;
      /** @example Building */
      buildingName?: string;
      /** @example Department */
      departmentName?: string;
      /** @example Site */
      siteName?: string;
      /** @example 10.1 */
      version?: string;
    };
    PatchSoftwareTitleReportSearchResult: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["PatchSoftwareTitleReport"][];
    };
    PatchSummary: {
      /** @example 1 */
      softwareTitleId?: string;
      /** @example Patch title */
      title?: string;
      /** @example 2 */
      latestVersion?: string;
      /**
       * Format: date-time
       * @example 2018-10-15T16:39:56.307Z
       */
      releaseDate?: string;
      /** @example 3 */
      upToDate?: number;
      /** @example 6 */
      outOfDate?: number;
      /** @example false */
      onDashboard?: boolean;
      /** @example 1 */
      softwareTitleConfigurationId?: string;
    };
    PatchSummaryVersion: {
      /** @example 1 */
      absoluteOrderId?: string;
      /** @example 3 */
      version?: string;
      /** @example 1 */
      onVersion?: number;
    };
    /**
     * @example ENABLE_PERSONAL_HOTSPOT
     * @enum {string}
     */
    PersonalHotspotSetting: "ENABLE_PERSONAL_HOTSPOT" | "DISABLE_PERSONAL_HOTSPOT";
    PlanConfigurationPost: {
      /**
       * @example DOWNLOAD_INSTALL
       * @enum {string}
       */
      updateAction: "DOWNLOAD_ONLY" | "DOWNLOAD_INSTALL" | "DOWNLOAD_INSTALL_ALLOW_DEFERRAL" | "DOWNLOAD_INSTALL_RESTART" | "DOWNLOAD_INSTALL_SCHEDULE" | "UNKNOWN";
      /**
       * @example SPECIFIC_VERSION
       * @enum {string}
       */
      versionType: "LATEST_MAJOR" | "LATEST_MINOR" | "LATEST_ANY" | "SPECIFIC_VERSION" | "UNKNOWN";
      /**
       * @description Optional. Indicates the specific version to update to. Only available when the version type is set to specific version, otherwise defaults to NO_SPECIFIC_VERSION.
       * @default NO_SPECIFIC_VERSION
       * @example 12.6.1
       */
      specificVersion?: string;
      /**
       * @description Required when the provided updateAction is DOWNLOAD_INSTALL_ALLOW_DEFERRAL, not applicable to all managed software update plans
       * @example 5
       */
      maxDeferrals?: number;
      /**
       * @description Optional. Indicates the local date and time of the device to force update by.
       * @example 2023-12-25T21:09:31
       */
      forceInstallLocalDateTime?: string | null;
    };
    PlanDevice: {
      /** @example 1 */
      deviceId?: string;
      /**
       * @example COMPUTER
       * @enum {string}
       */
      objectType?: "COMPUTER" | "MOBILE_DEVICE" | "APPLE_TV";
      /** @example /v1/computers-inventory/1 */
      href?: string;
    };
    PlanDevicePost: {
      /** @example 1 */
      deviceId: string;
      /**
       * @example COMPUTER
       * @enum {string}
       */
      objectType: "COMPUTER" | "MOBILE_DEVICE" | "APPLE_TV";
    };
    PlanDeviceResponse: {
      device?: components["schemas"]["PlanDevice"];
      /** @example 6E47EF55-5318-494F-A09E-70F613E0AFD1 */
      planId?: string;
      /** @example /v1/managed-software-updates/plans/6E47EF55-5318-494F-A09E-70F613E0AFD1 */
      href?: string;
    };
    PlanGroupPost: {
      /** @example 1 */
      groupId: string;
      /**
       * @example COMPUTER_GROUP
       * @enum {string}
       */
      objectType: "COMPUTER_GROUP" | "MOBILE_DEVICE_GROUP";
    };
    PlanSearchResults: {
      /** @example 3 */
      totalCount?: number;
      results?: components["schemas"]["JamfProtectPlan"][];
    };
    PlanStatus: {
      /**
       * @example SchedulingScanForOSUpdates
       * @enum {string}
       */
      state?: "Init" | "PendingPlanValidation" | "AcceptingPlan" | "RejectingPlan" | "ProcessingPlanType" | "StartingPlan" | "PlanFailed" | "SchedulingScanForOSUpdates" | "ProcessingScheduleOSUpdateScanResponse" | "WaitingForScheduledOSUpdateScanToComplete" | "CollectingAvailableOSUpdates" | "ProcessingAvailableOSUpdatesResponse" | "ProcessingSchedulingType" | "SchedulingDDM" | "DDMPlanScheduled" | "WaitingToStartDDMUpdate" | "ProcessingDDMStatusResponse" | "CollectingDDMStatus" | "SchedulingMDM" | "MDMPlanScheduled" | "SchedulingOSUpdate" | "ProcessingScheduleOSUpdateResponse" | "CollectingOSUpdateStatus" | "ProcessingOSUpdateStatusResponse" | "WaitingToCollectOSUpdateStatus" | "VerifyingInstallation" | "ProcessingInstallationVerification" | "PlanCompleted" | "PlanCanceled" | "PlanException" | "Unknown";
      /**
       * @example [
       *   "NO_UPDATES_AVAILABLE",
       *   "NOT_SUPERVISED"
       * ]
       */
      errorReasons?: (readonly ("APPLE_SILICON_NO_ESCROW_KEY" | "NOT_SUPERVISED" | "NOT_MANAGED" | "NO_DISK_SPACE" | "NO_UPDATES_AVAILABLE" | "SPECIFIC_VERSION_UNAVAILABLE" | "ACTION_NOT_SUPPORTED_FOR_DEVICE_TYPE" | "DECLARATIVE_DEVICE_MANAGEMENT_SOFTWARE_UPDATES_NOT_SUPPORTED_FOR_DEVICE_OS_VERSION" | "DECLARATIVE_DEVICE_MANAGEMENT_SOFTWARE_UPDATES_NOT_SUPPORTED_FOR_DEVICE_TYPE" | "PLAN_NOT_FOUND" | "APPLE_SOFTWARE_LOOKUP_SERVICE_ERROR" | "EXISTING_PLAN_FOR_DEVICE_IN_PROGRESS" | "DOWNGRADE_NOT_SUPPORTED" | "DECLARATIVE_SERVICE_ERROR" | "UNKNOWN")[]) | null;
    };
    PluginPath: {
      /** @example 3 */
      id: string;
      /** @example /Example/Path/To/Plugin/ */
      path: string;
    };
    PolicyProperties: {
      /**
       * @description This field always returns false.
       * @default false
       */
      isPoliciesRequireNetworkStateChange?: boolean;
      /** @default true */
      isAllowNetworkStateChangeTriggers?: boolean;
    };
    PolicyPropertiesV1: {
      /**
       * @description This field always returns false.
       * @default false
       */
      policiesRequireNetworkStateChange?: boolean;
      /** @default true */
      allowNetworkStateChangeTriggers?: boolean;
    };
    PostComputerPrestageV2: components["schemas"]["ComputerPrestageV2"] & {
      /**
       * Format: password
       * @example password123
       */
      recoveryLockPassword?: string;
    };
    PostComputerPrestageV3: components["schemas"]["ComputerPrestageV3"] & {
      accountSettings?: components["schemas"]["AccountSettingsRequest"];
      /**
       * Format: password
       * @example password123
       */
      recoveryLockPassword?: string;
    };
    PrestageDependencies: {
      dependencies?: components["schemas"]["PrestageDependency"][];
    };
    PrestageDependency: {
      /** @example Name */
      name?: string;
      /** @example Computer PreStage */
      humanReadableName?: string;
      /** @example /mobile-prestage/id */
      hyperlink?: string;
    };
    PrestageFileAttachment: {
      /** @example 1 */
      id?: number;
      /** @example receipt.pdf */
      name?: string;
      /** @example pdf */
      fileType?: string;
    };
    PrestageFileAttachmentV2: {
      /** @example 1 */
      id?: string;
      /** @example receipt.pdf */
      name?: string;
      /** @example pdf */
      fileType?: string;
    };
    PrestagePurchasingInformation: {
      /** @example 0 */
      id: number;
      /** @example true */
      isLeased: boolean;
      /** @example true */
      isPurchased: boolean;
      /** @example abcd */
      appleCareID: string;
      /** @example 53-1 */
      poNumber: string;
      /** @example Example Vendor */
      vendor: string;
      /** @example $500 */
      purchasePrice: string;
      /** @example 5 */
      lifeExpectancy: number;
      /** @example admin */
      purchasingAccount: string;
      /** @example true */
      purchasingContact: string;
      /** @example 2019-01-01 */
      leaseDate: string;
      /** @example 2019-01-01 */
      poDate: string;
      /** @example 2019-01-01 */
      warrantyDate: string;
      /** @example 1 */
      versionLock: number;
    };
    PrestagePurchasingInformationV2: {
      /** @example -1 */
      id: string;
      /** @example true */
      leased: boolean;
      /** @example true */
      purchased: boolean;
      /** @example abcd */
      appleCareId: string;
      /** @example 53-1 */
      poNumber: string;
      /** @example Example Vendor */
      vendor: string;
      /** @example $500 */
      purchasePrice: string;
      /** @example 5 */
      lifeExpectancy: number;
      /** @example admin */
      purchasingAccount: string;
      /** @example true */
      purchasingContact: string;
      /** @example 2019-01-01 */
      leaseDate: string;
      /** @example 2019-01-01 */
      poDate: string;
      /** @example 2019-01-01 */
      warrantyDate: string;
      /** @example 1 */
      versionLock: number;
    };
    PrestageScope: {
      /**
       * @example {
       *   "ABCD": 1,
       *   "XYZ": 12
       * }
       */
      serialsByPrestageId?: {
        [key: string]: number;
      };
    };
    PrestageScopeAssignment: {
      /** @example XYZ */
      serialNumber?: string;
      /** @example 123456789 */
      assignmentEpoch?: number;
      /** @example admin */
      userAssigned?: string;
    };
    PrestageScopeAssignmentV2: {
      /** @example XYZ */
      serialNumber?: string;
      /**
       * Format: date-time
       * @example 2019-02-04T21:09:31.661Z
       */
      assignmentDate?: string;
      /** @example admin */
      userAssigned?: string;
    };
    PrestageScopeResponse: {
      /** @example 1 */
      prestageId?: number;
      assignments?: components["schemas"]["PrestageScopeAssignment"][];
      /** @example 1 */
      versionLock?: number;
    };
    PrestageScopeResponseV2: {
      /** @example 1 */
      prestageId?: string;
      assignments?: components["schemas"]["PrestageScopeAssignmentV2"][];
      /** @example 1 */
      versionLock?: number;
    };
    PrestageScopeUpdate: {
      /**
       * @example [
       *   "DMQVGC0DHLF0",
       *   "C02L29ECF8J1"
       * ]
       */
      serialNumbers: string[];
      /** @example 1 */
      versionLock: number;
    };
    PrestageScopeV2: {
      /**
       * @example {
       *   "ABCD": 1,
       *   "XYZ": 12
       * }
       */
      serialsByPrestageId?: {
        [key: string]: string;
      };
    };
    PrestageSyncStatus: {
      /** @example CONNECTION_ERROR */
      syncState?: string;
      /** @example 1 */
      prestageId?: number;
      /** @example 2019-04-17T14:08:06.706+0000 */
      timestamp?: string;
    };
    PrestageSyncStatusV2: {
      /** @example CONNECTION_ERROR */
      syncState?: string;
      /** @example 1 */
      prestageId?: string;
      /** @example 2019-04-17T14:08:06.706+0000 */
      timestamp?: string;
    };
    ProcessTextsSearchResults: {
      /** @example 10 */
      totalCount?: number;
      results?: components["schemas"]["EnrollmentProcessTextObject"][];
    };
    /** @description Create an API Client in the Jamf Protect web console to obtain these values. */
    ProtectRegistrationRequest: {
      /** @example https://examplejamfprotect.jamfcloud.com/graphql */
      protectUrl: string;
      /** @example uzPJXlArmzTAmPRQtZEnQ2OFtNw8qQV */
      clientId: string;
      /**
       * Format: password
       * @example 7fyP6BphUUQ5B_zoLrkYhM5j1HTcf-4PxshettZbK0ZcnzV57gyHwF23U3F96F
       */
      password: string;
    };
    ProtectSettingsResponse: {
      /** @example 1 */
      id?: string;
      /** @example esgzYzYBqN7wCImwyusbQcXob2qalGMN */
      apiClientId?: string;
      /**
       * @description display name used when creating the API Client in the Jamf Protect web console
       * @example Jamf Pro integration
       */
      apiClientName?: string;
      /**
       * @description ID used when making requests to identify this particular Protect registration.
       * @example 6f250316-2cfb-4521-8cb7-bfaf46497bc5
       */
      registrationId?: string;
      /** @example https://examplejamfprotect.jamfcloud.com/graphql */
      protectUrl?: string;
      /** @example 2003-01-05T18:00:14.885Z */
      lastSyncTime?: string;
      /**
       * @example COMPLETED
       * @enum {string}
       */
      syncStatus?: "IN_PROGRESS" | "COMPLETED" | "ERROR" | "UNKNOWN";
      /**
       * @description determines whether the Jamf Protect agent will be automatically installed on client computers
       * @example true
       */
      autoInstall?: boolean;
    };
    ProtectUpdatableSettingsRequest: {
      /**
       * @description determines whether the Jamf Protect agent will be automatically installed on client computers
       * @example true
       */
      autoInstall?: boolean;
    };
    Purchasing: {
      /** @example true */
      isPurchased?: boolean;
      /** @example false */
      isLeased?: boolean;
      /** @example 8675309 */
      poNumber?: string;
      /** @example Apple */
      vendor?: string;
      /** @example 9546567.0 */
      appleCareId?: string;
      /** @example $399 */
      purchasePrice?: string;
      /** @example IT Budget */
      purchasingAccount?: string;
      /**
       * Format: date-time
       * @example 2019-02-04T21:09:31.661Z
       */
      poDate?: string;
      /**
       * Format: date-time
       * @example 2019-02-04T21:09:31.661Z
       */
      warrantyExpiresDate?: string;
      /**
       * Format: date-time
       * @example 2019-02-04T21:09:31.661Z
       */
      leaseExpiresDate?: string;
      /** @example 7 */
      lifeExpectancy?: number;
      /** @example Nick in IT */
      purchasingContact?: string;
    };
    PurchasingV2: {
      /** @example true */
      purchased?: boolean;
      /** @example false */
      leased?: boolean;
      /** @example 8675309 */
      poNumber?: string;
      /** @example Apple */
      vendor?: string;
      /** @example 9546567.0 */
      appleCareId?: string;
      /** @example $399 */
      purchasePrice?: string;
      /** @example IT Budget */
      purchasingAccount?: string;
      /**
       * Format: date-time
       * @example 2019-02-04T21:09:31.661Z
       */
      poDate?: string;
      /**
       * Format: date-time
       * @example 2019-02-04T21:09:31.661Z
       */
      warrantyExpiresDate?: string;
      /**
       * Format: date-time
       * @example 2019-02-04T21:09:31.661Z
       */
      leaseExpiresDate?: string;
      /** @example 7 */
      lifeExpectancy?: number;
      /** @example Nick in IT */
      purchasingContact?: string;
    };
    PutComputerPrestageV2: components["schemas"]["ComputerPrestageV2"] & {
      /**
       * Format: password
       * @example password123
       */
      recoveryLockPassword?: string;
      /** @example 0 */
      versionLock?: number;
    };
    PutComputerPrestageV3: components["schemas"]["ComputerPrestageV3"] & {
      accountSettings?: components["schemas"]["AccountSettingsRequest"];
      /**
       * Format: password
       * @example password123
       */
      recoveryLockPassword?: string;
      /** @example 0 */
      versionLock?: number;
    };
    PutMobileDevicePrestage: components["schemas"]["MobileDevicePrestage"] & {
      /** @example 0 */
      versionLock?: number;
    };
    PutMobileDevicePrestageV2: components["schemas"]["MobileDevicePrestageV2"] & {
      /** @example 0 */
      versionLock?: number;
    };
    RecalculationResults: {
      /** @example 3 */
      count?: number;
    };
    Recipient: {
      /** @example 1 */
      id?: number;
      /** @example test recipient */
      realName?: string;
      /** @example test@test.com */
      email?: string;
    };
    Recipients: {
      recipientList?: components["schemas"]["Recipient"][];
    };
    RedeployJamfManagementFrameworkResponse: {
      /** @example 1 */
      deviceId?: string;
      /** @example f5965c4f-0db4-4dc4-9f37-6f1dad4e939c */
      commandUuid?: string;
    };
    Reenrollment: {
      /** @default false */
      isFlushPolicyHistoryEnabled?: boolean;
      /** @default false */
      isFlushLocationInformationEnabled?: boolean;
      /** @default false */
      isFlushLocationInformationHistoryEnabled?: boolean;
      /** @default false */
      isFlushExtensionAttributesEnabled?: boolean;
      /**
       * @example DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED
       * @enum {string}
       */
      flushMDMQueue: "DELETE_NOTHING" | "DELETE_ERRORS" | "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED" | "DELETE_EVERYTHING";
    };
    /** @description A Remote administration response */
    RemoteAdministrationResponse: {
      /** @example 1 */
      id?: string;
      /** @example 1 */
      siteId?: string;
      /** @example Remote administration */
      displayName?: string;
      /**
       * @example team-viewer
       * @enum {string}
       */
      type?: "team-viewer";
    };
    /** @description A list with Remote administration configurations */
    RemoteAdministrationSearchResults: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["RemoteAdministrationResponse"][];
    };
    RenewMdmProfileResponse: {
      udidsNotProcessed?: components["schemas"]["Udids"];
    };
    RestartDeviceCommand: components["schemas"]["MdmCommandBase"] & {
      /** @example true */
      rebuildKernelCache?: boolean;
      /**
       * @description Only used if RebuildKernelCache is true
       * @example [
       *   "extension1",
       *   "extension2"
       * ]
       */
      kextPaths?: string[];
      /** @example true */
      notifyUser?: boolean;
    };
    SafelistedApp: {
      /** @example Content Filter */
      name?: string;
      /** @example com.jamf.parent */
      bundleId?: string;
    };
    readonly SchedulerJob: {
      /** @example 1 */
      readonly totalCount?: number;
      readonly results?: components["schemas"]["SchedulerTrigger"][];
    };
    readonly SchedulerJobs: {
      readonly jobKeys?: string[];
    };
    readonly SchedulerSummary: {
      /** @example 1 */
      readonly numberOfPendingJobs?: number;
      /** @example 1 */
      readonly numberOfExecutingJobs?: number;
      /** @example 1 */
      readonly numberOfExecutedJobs?: number;
      /** @example true */
      readonly started?: boolean;
    };
    readonly SchedulerTrigger: {
      /** @example EXAMPLE_TRIGGER */
      readonly triggerKey?: string;
      /**
       * Format: date-time
       * @example 2023-08-21T21:20:34.35Z
       */
      readonly previousFireTime?: string;
      /**
       * Format: date-time
       * @example 2023-08-21T21:30:34.35Z
       */
      readonly nextFireTime?: string;
    };
    Script: {
      /** @example 1 */
      id?: string;
      /** @example Install Developer Utils Script */
      name: string;
      /** @example Installs utilities for developers */
      info?: string;
      /** @example Should be able to be re-run without problem. */
      notes?: string;
      /**
       * @example AFTER
       * @enum {string}
       */
      priority?: "BEFORE" | "AFTER" | "AT_REBOOT";
      /** @example 1 */
      categoryId?: string;
      /** @example Developer Tools */
      categoryName?: string;
      /** @example 1 */
      parameter4?: string;
      /** @example 2 */
      parameter5?: string;
      /** @example 3 */
      parameter6?: string;
      /** @example 4 */
      parameter7?: string;
      /** @example 5 */
      parameter8?: string;
      /** @example 6 */
      parameter9?: string;
      /** @example 7 */
      parameter10?: string;
      /** @example 8 */
      parameter11?: string;
      /** @example 10.10.x */
      osRequirements?: string;
      /** @example echo "Trivial script." */
      scriptContents?: string;
    };
    ScriptsSearchResults: {
      /** @example 3 */
      totalCount?: number;
      results?: components["schemas"]["Script"][];
    };
    Security: {
      /** @example false */
      isDataProtected?: boolean;
      /** @example true */
      isBlockLevelEncryptionCapable?: boolean;
      /** @example true */
      isFileLevelEncryptionCapable?: boolean;
      /** @example false */
      isPasscodePresent?: boolean;
      /** @example true */
      isPasscodeCompliant?: boolean;
      /** @example true */
      isPasscodeCompliantWithProfile?: boolean;
      /** @example 3 */
      hardwareEncryption?: number;
      /** @example false */
      isActivationLockEnabled?: boolean;
      /** @example false */
      isJailBreakDetected?: boolean;
    };
    SecurityV2: {
      /** @example false */
      dataProtected?: boolean;
      /** @example true */
      blockLevelEncryptionCapable?: boolean;
      /** @example true */
      fileLevelEncryptionCapable?: boolean;
      /** @example false */
      passcodePresent?: boolean;
      /** @example true */
      passcodeCompliant?: boolean;
      /** @example true */
      passcodeCompliantWithProfile?: boolean;
      /** @example 3 */
      hardwareEncryption?: number;
      /** @example false */
      activationLockEnabled?: boolean;
      /** @example false */
      jailBreakDetected?: boolean;
    };
    /** @description object representation of Self Service settings regarding installation */
    SelfServiceInstallSettings: {
      /**
       * @description true if Self Service is insalled automatically, false if not
       *
       * @default false
       */
      installAutomatically?: boolean;
      /**
       * @description path at which Self Service is installed
       *
       * @example /Applications
       */
      installLocation: string;
    };
    /** @description object representation of Self Service settings regarding user interaction */
    SelfServiceInteractionSettings: {
      /**
       * @description global Self Service setting for if notifications are on or off
       *
       * @default false
       */
      notificationsEnabled?: boolean;
      /**
       * @description whether users should be notified they need to approve organization's MDM profile
       *
       * @default true
       */
      alertUserApprovedMdm?: boolean;
      /**
       * @description the default landing page in Self Service
       *
       * @default HOME
       * @example HOME
       * @enum {string}
       */
      defaultLandingPage?: "HOME" | "BROWSE" | "HISTORY" | "NOTIFICATIONS";
      /**
       * Format: int32
       * @description id for the default home category in Self Service
       *
       * @default -1
       */
      defaultHomeCategoryId?: number;
      /**
       * @description renamed string for bookmarks if the admin wishes
       *
       * @example Bookmarks
       */
      bookmarksName: string;
    };
    /** @description object representation of Self Service settings regarding login */
    SelfServiceLoginSettings: {
      /**
       * @description login setting to tell clients how to let users log in
       *
       * @example NotRequired
       * @enum {string}
       */
      userLoginLevel: "NotRequired" | "Anonymous" | "Required";
      /**
       * @description true if remember me functionality is allowed, false if not
       *
       * @default false
       */
      allowRememberMe?: boolean;
      /**
       * @description login type to be used when asking users to log in
       *
       * @example Basic
       * @enum {string}
       */
      authType: "Basic" | "Saml";
    };
    /** @description object representation of Self Service settings */
    SelfServiceSettings: {
      installSettings?: components["schemas"]["SelfServiceInstallSettings"];
      loginSettings?: components["schemas"]["SelfServiceLoginSettings"];
      configurationSettings?: components["schemas"]["SelfServiceInteractionSettings"];
    };
    Session: {
      /** @example 1 */
      currentSiteId?: number;
    };
    /** @description Request to crate new remote session. Ultimately this allows connection between an admin and an end-user */
    SessionCandidateRequest: {
      /**
       * @description Device identifier
       * @example 1
       */
      deviceId: string;
      /**
       * @description Device type
       * @example COMPUTER
       * @enum {string}
       */
      deviceType: "COMPUTER";
      /**
       * @description Session description. To be used for additional context on the reason of the session
       * @example Customer reported that he cannot install application X
       */
      description: string;
    };
    /** @description Session details */
    SessionDetails: {
      /**
       * @description Session identifier
       * @example 1
       */
      id?: string;
      /**
       * @description Sessions code
       * @example s1234-5678
       */
      code?: string;
      /**
       * @description Session description. To be used for additional context on the reason of the session
       * @example Customer reported that he cannot install application X
       */
      description?: string;
      /**
       * @description Supporter session URL
       * @example https://get.teamviewer.com/v15/en/s12345678-a1b2c3d4e5f6
       */
      supporterLink?: string;
      /**
       * @description End user session URL
       * @example https://get.teamviewer.com/v15/en/s12345678
       */
      endUserLink?: string;
      /**
       * @description Device identifier
       * @example 1
       */
      deviceId?: string;
      /**
       * @description Device name if found - null otherwise
       * @example Przemek MacBook Pro
       */
      deviceName?: string;
      /**
       * @description Device type
       * @example COMPUTER
       * @enum {string}
       */
      deviceType?: "COMPUTER";
      /**
       * @description Session state
       * @example OPEN
       * @enum {string}
       */
      state?: "OPEN" | "CLOSED" | "UNKNOWN";
      /**
       * @description ID of session creator if session created by Jamf Pro local user, null otherwise
       * @example 1
       */
      creatorId?: string;
      /**
       * @description Username of the session creator
       * @example creator
       */
      creatorName?: string;
      /**
       * Format: date-time
       * @description Session creation time
       * @example 2021-06-10T12:00:00Z
       */
      createdAt?: string;
    };
    /** @description Sessions search result */
    SessionDetailsSearchResults: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["SessionDetails"][];
    };
    SessionHistoryItem: {
      /** @example ee5d0ffae49e675d32ba5bdb2ce25182e958b979afc8d210c924d725bbf45f8b */
      tenantId?: string;
      /** @example c4087bc8-cb48-4452-9bec-a3c50088a485 */
      sessionId?: string;
      /** @example aeafd2ff95c7e0b937a8dbf3121a8dcab7a70161cd4493af038fa9c784b61866 */
      deviceId?: string;
      /**
       * Format: date-time
       * @example 2023-11-07T10:25:27.49Z
       */
      sessionStartedTimestamp?: string;
      /**
       * Format: date-time
       * @example 2023-11-07T10:25:27.49Z
       */
      sessionEndedTimestamp?: string;
      /**
       * @example ATTENDED
       * @enum {string}
       */
      sessionType?: "ATTENDED" | "UNATTENDED";
      /**
       * @example STARTED
       * @enum {string}
       */
      statusType?: "STARTED" | "FINISHED" | "ERROR";
      /** @example sessionAdminId1 */
      sessionAdminId?: string;
      /** @example Example comment */
      comment?: string;
    };
    SessionHistoryItemDetails: {
      fileTransferItemList?: components["schemas"]["FileTransferItem"][];
    };
    SessionHistoryItemWithDetails: {
      /** @example ee5d0ffae49e675d32ba5bdb2ce25182e958b979afc8d210c924d725bbf45f8b */
      tenantId?: string;
      /** @example c4087bc8-cb48-4452-9bec-a3c50088a485 */
      sessionId?: string;
      /** @example aeafd2ff95c7e0b937a8dbf3121a8dcab7a70161cd4493af038fa9c784b61866 */
      deviceId?: string;
      /**
       * Format: date-time
       * @example 2023-11-07T10:25:27.49Z
       */
      sessionStartedTimestamp?: string;
      /**
       * Format: date-time
       * @example 2023-11-07T10:25:27.49Z
       */
      sessionEndedTimestamp?: string;
      /**
       * @example ATTENDED
       * @enum {string}
       */
      sessionType?: "ATTENDED" | "UNATTENDED";
      /**
       * @example STARTED
       * @enum {string}
       */
      statusType?: "STARTED" | "FINISHED" | "ERROR";
      /** @example sessionAdminId1 */
      sessionAdminId?: string;
      /** @example Example comment */
      comment?: string;
      details?: components["schemas"]["SessionHistoryItemDetails"];
    };
    /** @description Session status */
    SessionStatus: {
      /**
       * @description Session state
       * @example OPEN
       * @enum {string}
       */
      sessionState?: "OPEN" | "CLOSED" | "UNKNOWN";
      /**
       * @description Defines if the end user is online
       * @example true
       */
      online?: boolean;
    };
    SetAutoAdminPasswordCommand: components["schemas"]["MdmCommandBase"] & {
      /**
       * @description The unique identifier of the local administrator account. Must match the GUID of an administrator account that MDM created during Device Enrollment Program (DEP) enrollment.
       * @example 76d765f1-651b-4032-9eea-a10e09a62d50
       */
      guid?: string;
      /**
       * Format: password
       * @description The new password for the local administrator account.
       * @example newQuerty1234
       */
      password?: string;
    };
    SetRecoveryLockCommand: components["schemas"]["MdmCommandBase"] & {
      /**
       * Format: password
       * @description The new password for Recovery Lock. Set as an empty string to clear the Recovery Lock password.
       * @example newQuerty1234
       */
      newPassword?: string;
    };
    SettingsCommand: components["schemas"]["MdmCommandBase"] & {
      /** @example true */
      bootstrapTokenAllowed?: boolean;
      /** @example true */
      bluetooth?: boolean;
      appAnalytics?: components["schemas"]["AppAnalyticsSetting"];
      diagnosticSubmission?: components["schemas"]["DiagnosticSubmissionSetting"];
      dataRoaming?: components["schemas"]["DataRoamingSetting"];
      voiceRoaming?: components["schemas"]["VoiceRoamingSetting"];
      personalHotspot?: components["schemas"]["PersonalHotspotSetting"];
      /** @example 1 */
      maximumResidentUsers?: number;
      /** @example My iPhone */
      deviceName?: string;
      applicationAttributes?: components["schemas"]["ApplicationAttributes"];
      sharedDeviceConfiguration?: components["schemas"]["SharedDeviceConfiguration"];
      applicationConfiguration?: components["schemas"]["ApplicationConfiguration"];
      /** @example America/New_York */
      timeZone?: string;
      softwareUpdateSettings?: components["schemas"]["SoftwareUpdateSettings"];
      /**
       * @description The number of seconds before a locked screen requires the user to enter the device passcode to unlock it. (Shared iPad Only)
       * @example 60
       */
      passcodeLockGracePeriod?: number;
    };
    SharedDeviceComplianceFeatureToggle: {
      /** @example false */
      sharedDeviceFeatureEnabled: boolean;
    };
    SharedDeviceConfiguration: {
      /** @example 2048 */
      quotaSize?: number;
      /** @example 3 */
      residentUsers?: number;
    };
    ShutDownDeviceCommand: components["schemas"]["MdmCommandBase"] & Record<string, never>;
    Signature: {
      /** @example SHA256withRSA */
      algorithm?: string;
      /** @example 1.2.840.113549.1.1.11 */
      algorithmOid?: string;
      /** @example 6874f9b8c60a46c25b6b270c14b9a2949c87b25524868394309b20349f95edd624588ada274e5678a921199d26d0fe5b231fc794eb6e020b7a6c4790cf91ec5d9a5bd4da126f141a657cf4af78df6303327964c57721d82b85af1d46379ac7ec45a24ae3418576688f05fd075a1c9c3d137d0fd8831f4c88ce7698af9c747db983a40fb0480ebfb293bf4889e34a949d4a53251b1abef19d895bcea8e0ce590b22244ad1623624319e6a8b7e7d11aea3d94b77be1a94d28fda58e8df2e398c45e2e9c13473dcc81db01acac8f2c6d21cb5c44371c9ebfba632dcb46838a91808d4e82a35500f370dc71f4156528fbce93137c94eb33d83d41d49483d4dcca5e1 */
      value?: string;
    };
    Site: {
      /** @example 1 */
      id?: number;
      /** @example Eau Claire */
      name?: string;
    };
    SiteObject: {
      /** @example 1 */
      siteId: string;
      /**
       * @example User
       * @enum {string}
       */
      objectType: "Computer" | "Peripheral" | "Licensed Software" | "Licensed Software Template" | "Policy" | "macOS Configuration Profile" | "Restricted Software" | "Managed Preference Profile" | "Computer Group" | "Mobile Device" | "Apple TV" | "Android Device" | "User Group" | "iOS Configuration Profile" | "Mobile Device App" | "E-book" | "Mobile Device Group" | "Classroom" | "Advanced Computer Search" | "Advanced Mobile Search" | "Advanced User Search" | "Advanced User Content Search" | "Computer Invitation" | "Mobile Device Invitation" | "Mobile Device Enrollment Profile" | "Device Enrollment Program Instance" | "Mobile Device Prestage" | "Computer DEP Prestage" | "Enrollment Customization" | "VPP Location" | "VPP Subscription" | "VPP Invitation" | "VPP Assignment" | "User" | "Network Integration" | "Mac App" | "App Installer" | "BYO Profile" | "Self Service Plugin" | "Software Title" | "Patch Software Title Summary" | "Patch Policy" | "Patch Software Title Configuration" | "Change Password" | "Mobile Device Inventory" | "Computer Inventory" | "Change Management" | "Licensed Software License" | "Unknown";
      /** @example 1 */
      objectId: string;
    };
    SmartSearchCriterion: {
      /** @example Account */
      name?: string;
      /** @example 0 */
      priority?: number;
      /** @example and */
      andOr?: string;
      /** @example is */
      searchType?: string;
      /** @example test */
      value?: string;
      /** @example false */
      openingParen?: boolean;
      /** @example false */
      closingParen?: boolean;
    };
    SmtpServer: {
      /**
       * @default false
       * @example true
       */
      enabled: boolean;
      /**
       * @default
       * @example abcd.server.com
       */
      server: string;
      /**
       * @default 25
       * @example 25
       */
      port: number;
      /**
       * @default NONE
       * @example SSL
       * @enum {string}
       */
      encryptionType: "NONE" | "SSL" | "TLS_1_2" | "TLS_1_1" | "TLS_1";
      /**
       * @default 5
       * @example 5
       */
      connectionTimeout: number;
      /**
       * @default Jamf Pro Server
       * @example Jamf Pro Server
       */
      senderDisplayName: string;
      /**
       * @default
       * @example exampleEmail@example.com
       */
      senderEmailAddress: string;
      /**
       * @default false
       * @example true
       */
      requiresAuthentication: boolean;
      /**
       * @default
       * @example exampleEmail@example.com
       */
      username?: string;
      /**
       * Format: password
       * @default
       * @example examplePassword
       */
      password?: string;
    };
    SmtpServerTest: {
      /** @example exampleEmail@example.com */
      recipientEmail: string;
    };
    SoftwareTitleConfigurationOnDashboard: {
      /** @example true */
      onDashboard?: boolean;
    };
    SoftwareUpdateSettings: {
      /**
       * @example ALLOW_ALL_UPDATES
       * @enum {string}
       */
      recommendationCadence?: "ALLOW_ALL_UPDATES" | "ONLY_ALLOW_LEAST_CURRENT_UPDATE" | "ONLY_ALLOW_MOST_CURRENT_UPDATE";
    };
    SsoFailoverData: {
      /** @example https://jamf.jamfcloud.com/?failover=0123456789ABCDEF */
      failoverUrl?: string;
      /**
       * Format: int64
       * @description Generation time of failover key
       * @example 1674133253000
       */
      generationTime?: number;
    };
    SsoKeystore: {
      certType: "SsoKeystore";
    } & Omit<components["schemas"]["SsoKeystoreParse"], "certType"> & ({
      keys?: components["schemas"]["CertificateKey"][];
      /** @default */
      key: string;
      /**
       * Format: password
       * @example ***
       */
      password: string;
      /**
       * @example PKCS12
       * @enum {string}
       */
      type: "PKCS12" | "JKS" | "NONE";
      /**
       * @example UPLOADED
       * @enum {string}
       */
      keystoreSetupType?: "NONE" | "UPLOADED" | "GENERATED";
    });
    SsoKeystoreCertParseResponse: {
      /** @default */
      key?: string;
      keys?: components["schemas"]["CertificateKey"][];
      /**
       * @example PKCS12
       * @enum {string}
       */
      type?: "PKCS12" | "JKS" | "NONE";
      /**
       * @example UPLOADED
       * @enum {string}
       */
      keystoreSetupType?: "NONE" | "UPLOADED" | "GENERATED";
      /** @example ZXhhbXBsZSBvZiBhIGJhc2U2NCBlbmNvZGVkIHZhbGlkIHAxMi4ga2V5c3RvcmUgZmlsZQ== */
      keystoreFile?: string[];
      /** @example keystore.p12 */
      keystoreFileName?: string;
    };
    SsoKeystoreDetails: {
      keys?: string[];
      /** @example 2322472237 */
      serialNumber?: number;
      /** @example CN=SSO:jamf.com, OU=JSS, O=JAMF Software, L=Minneapolis, ST=MN, C=US */
      subject?: string;
      /** @example CN= Jamf Pro JSS Built-in Certificate Authority */
      issuer?: string;
      /** @example 2030-02-24T12:18:32.000 */
      expiration?: string;
    };
    SsoKeystoreParse: {
      /**
       * Format: password
       * @example ***
       */
      keystorePassword: string;
      /**
       * Format: byte
       * @example WlhoaGJYQnNaU0J2WmlCaElHSmhjMlUyTkNCbGJtTnZaR1ZrSUhaaGJHbGtJSEF4TWk0Z2EyVjVjM1J2Y21VZ1ptbHNaUT09
       */
      keystoreFile: string;
      /** @example keystore.p12 */
      keystoreFileName: string;
    };
    SsoKeystoreResponse: {
      /** @default */
      key?: string;
      keys?: components["schemas"]["CertificateKey"][];
      /**
       * @example PKCS12
       * @enum {string}
       */
      type?: "PKCS12" | "JKS" | "NONE";
      /**
       * @example UPLOADED
       * @enum {string}
       */
      keystoreSetupType?: "NONE" | "UPLOADED" | "GENERATED";
      /** @example keystore.p12 */
      keystoreFileName?: string;
    };
    SsoKeystoreResponseWithDetails: {
      keystore?: components["schemas"]["SsoKeystoreResponse"];
      keystoreDetails?: components["schemas"]["SsoKeystoreDetails"];
    };
    SsoKeystoreWithDetails: {
      keystore?: components["schemas"]["SsoKeystore"];
      keystoreDetails?: components["schemas"]["SsoKeystoreDetails"];
    };
    SsoMetadataUrl: {
      /** @example https://your-idp.com/saml/metadata */
      idpUrl: string;
    };
    SsoSettingsV1: {
      /** @default false */
      ssoForEnrollmentEnabled: boolean;
      /** @default false */
      ssoBypassAllowed: boolean;
      /** @default false */
      ssoEnabled: boolean;
      /** @default false */
      ssoForMacOsSelfServiceEnabled: boolean;
      /** @default false */
      tokenExpirationDisabled: boolean;
      /** @default false */
      userAttributeEnabled: boolean;
      /** @default */
      userAttributeName?: string;
      /**
       * @example USERNAME
       * @enum {string}
       */
      userMapping: "USERNAME" | "EMAIL";
      /** @default false */
      enrollmentSsoForAdueEnabled: boolean;
      enrollmentSsoConfig?: components["schemas"]["EnrollmentSsoConfig"];
      /** @default false */
      groupEnrollmentAccessEnabled: boolean;
      /** @default http://schemas.xmlsoap.org/claims/Group */
      groupAttributeName: string;
      /** @default */
      groupRdnKey: string;
      /** @default */
      groupEnrollmentAccessName?: string;
      /**
       * @example ADFS
       * @enum {string}
       */
      idpProviderType: "ADFS" | "OKTA" | "GOOGLE" | "SHIBBOLETH" | "ONELOGIN" | "PING" | "CENTRIFY" | "AZURE" | "OTHER";
      /** @example https://example.idp.com/app/id/sso/saml/metadata */
      idpUrl?: string;
      /** @example saml/metadata */
      entityId: string;
      /** @example if MetadataSource is set to URL, remove this field */
      metadataFileName?: string;
      /** @default */
      otherProviderTypeName?: string;
      /**
       * Format: byte
       * @example WlhoaGJYQnNaU0J2WmlCaElHSmhjMlUyTkNCbGJtTnZaR1ZrSUhaaGJHbGtJSEF4TWk0Z2EyVjVjM1J2Y21VZ1ptbHNaUT09
       */
      federationMetadataFile?: string;
      /**
       * @example URL
       * @enum {string}
       */
      metadataSource: "URL" | "FILE" | "UNKNOWN";
      /**
       * Format: int32
       * @default 480
       */
      sessionTimeout?: number;
    };
    SsoSettingsV2: {
      /** @default false */
      ssoForEnrollmentEnabled: boolean;
      /** @default false */
      ssoBypassAllowed: boolean;
      /** @default false */
      ssoEnabled: boolean;
      /** @default false */
      ssoForMacOsSelfServiceEnabled: boolean;
      /** @default false */
      tokenExpirationDisabled: boolean;
      /** @default false */
      userAttributeEnabled: boolean;
      /** @default */
      userAttributeName?: string;
      /**
       * @example USERNAME
       * @enum {string}
       */
      userMapping: "USERNAME" | "EMAIL";
      /** @default false */
      enrollmentSsoForAccountDrivenEnrollmentEnabled: boolean;
      enrollmentSsoConfig?: components["schemas"]["EnrollmentSsoConfig"];
      /** @default false */
      groupEnrollmentAccessEnabled: boolean;
      /** @default http://schemas.xmlsoap.org/claims/Group */
      groupAttributeName: string;
      /** @default */
      groupRdnKey: string;
      /** @default */
      groupEnrollmentAccessName?: string;
      /**
       * @example ADFS
       * @enum {string}
       */
      idpProviderType: "ADFS" | "OKTA" | "GOOGLE" | "SHIBBOLETH" | "ONELOGIN" | "PING" | "CENTRIFY" | "AZURE" | "OTHER";
      /** @example https://example.idp.com/app/id/sso/saml/metadata */
      idpUrl?: string;
      /** @example saml/metadata */
      entityId: string;
      /** @example if MetadataSource is set to URL, remove this field */
      metadataFileName?: string;
      /** @default */
      otherProviderTypeName?: string;
      /**
       * Format: byte
       * @example WlhoaGJYQnNaU0J2WmlCaElHSmhjMlUyTkNCbGJtTnZaR1ZrSUhaaGJHbGtJSEF4TWk0Z2EyVjVjM1J2Y21VZ1ptbHNaUT09
       */
      federationMetadataFile?: string;
      /**
       * @example URL
       * @enum {string}
       */
      metadataSource: "URL" | "FILE" | "UNKNOWN";
      /**
       * Format: int32
       * @default 480
       */
      sessionTimeout?: number;
    };
    StartupStatus: {
      /** @example Initializing */
      step?: string;
      /**
       * @example SERVER_INIT_START
       * @enum {string}
       */
      stepCode?: "SERVER_INIT_START" | "SERVER_INIT_ANALYZING_WEBAPP" | "SERVER_INIT_POPULATING_NAVIGATION" | "SERVER_INIT_POPULATING_OBJECTS" | "SERVER_INIT_INITIALIZING_OBJ" | "SERVER_INIT_VERIFYING_CACHE" | "SERVER_INIT_INITIALIZING_CHANGE_MANAGEMENT" | "SERVER_INIT_INITIALIZING_COMMUNICATION_SYSTEM" | "SERVER_INIT_INITIALIZING_MDM_QUEUE_MONITOR" | "SERVER_INIT_CALCULATING_SMART_GROUPS" | "SERVER_INIT_DB_SCHEMA_COMPARE" | "SERVER_INIT_DB_TABLE_CHECK_FOR_RENAME" | "SERVER_INIT_DB_TABLE_ALTER" | "SERVER_INIT_DB_TABLE_ANALYZING" | "SERVER_INIT_DB_TABLE_CREATE" | "SERVER_INIT_DB_TABLE_DROP" | "SERVER_INIT_DB_TABLE_RENAME" | "SERVER_INIT_DB_COLUMN_RENAME" | "SERVER_INIT_DB_COLUMN_ENCODING_CHANGE_STEP_1" | "SERVER_INIT_DB_COLUMN_ENCODING_CHANGE_STEP_2" | "SERVER_INIT_DB_COLUMN_ENCODING_CHANGE_STEP_3" | "SERVER_INIT_DB_UPGRADE_CHECK" | "SERVER_INIT_DB_UPGRADE_COMPLETE" | "SERVER_INIT_SS_GENERATE_NOTIFICATIONS" | "SERVER_INIT_SS_GENERATE_NOTIFICATIONS_STATUS" | "SERVER_INIT_SS_GENERATE_NOTIFICATIONS_FINALIZE" | "SERVER_INIT_PKI_MIGRATION_DONE" | "SERVER_INIT_PKI_MIGRATION_STATUS" | "SERVER_INIT_MEMCACHED_ENDPOINTS_CHECK" | "SERVER_INIT_CACHE_FLUSHING" | "SERVER_INIT_COMPLETE";
      /** @example buildings */
      stepParam?: string | null;
      /** @example 50 */
      percentage?: number;
      /** @example Converting buildings, do not restart your JSS */
      warning?: string | null;
      /**
       * @example SERVER_INIT_WARNING_DB_TABLE_ENCODING
       * @enum {string|null}
       */
      warningCode?: "SERVER_INIT_WARNING_DB_TABLE_ENCODING" | null;
      /** @example 13 MB */
      warningParam?: string | null;
      /** @example Jamf Pro Startup Suspended */
      error?: string | null;
      /**
       * @example SERVER_INIT_ERROR_INITIALIZATION_FAILED
       * @enum {string|null}
       */
      errorCode?: "CACHE_CONFIGURATION_ERROR" | "SECONDARY_NODE_STARTUP_ERROR" | "MORE_THAN_ONE_CLUSTER_SETTINGS_ERROR" | "PRIMARY_NODE_NOT_SET_ERROR" | "DATABASE_ERROR" | "DATABASE_PASSWORD_MISSING" | "EHCACHE_ERROR" | "FLAG_INITIALIZATION_FAILED" | "MEMCACHED_ERROR" | "DATABASE_MYISAM_ERROR" | "OLD_VERSION_ERROR" | null;
      /** @example false */
      setupAssistantNecessary?: boolean;
    };
    StaticGroup: {
      /** @example 6 */
      groupId?: string;
      /** @example Static iPad Group */
      groupName?: string;
      /** @example 11 */
      siteId?: string;
    };
    StaticGroupAssignment: {
      /** @example 7 */
      groupId?: string;
      /** @example Static iPads */
      groupName?: string;
      /** @example 11 */
      siteId?: string;
      assignments?: components["schemas"]["Assignment"][];
    };
    StaticGroupSearchResults: {
      /** @example 3 */
      totalCount?: number;
      results?: components["schemas"]["StaticGroupSummary"][];
    };
    StaticGroupSummary: {
      /** @example 6 */
      groupId?: string;
      /** @example Static iPad Group */
      groupName?: string;
      /** @example 11 */
      siteId?: string;
      /**
       * @description membership count
       * @example 15
       */
      count?: number;
    };
    StaticUserGroup: {
      /** @example 1 */
      id?: number;
      /** @example Grade School Teachers */
      name?: string;
    };
    SupervisionIdentity: {
      /** @example 1 */
      id?: number;
      /** @example Supervision Identity */
      displayName?: string;
      /** @example Jamf Identity - Supervision Identity */
      commonName?: string;
      /** @example 2000-10-31 */
      expirationDate?: string;
    };
    SupervisionIdentityCertificateUpload: {
      /** @example Supervision Identity */
      displayName: string;
      /**
       * Format: password
       * @example jamf1234
       */
      password: string;
      /**
       * Format: byte
       * @description The base 64 encoded supervision identity certificate data
       * @example VTI5dFpTQnlZVzVrYjIwZ1ltbDBJRzltSUhSbGVIUWdkRzhnZFhObElHRnVaQ0J6WldVZ2FXWWdZVzU1YjI1bElHRmpkSFZoYkd4NUlIUnlhV1Z6SUhSdklHUmxZMjlrWlNCcGRBPT0=
       */
      certificateData?: string;
    };
    SupervisionIdentityCreate: {
      /** @example Supervision Identity */
      displayName: string;
      /**
       * Format: password
       * @example jamf1234
       */
      password: string;
    };
    SupervisionIdentitySearchResults: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["SupervisionIdentity"][];
    };
    SupervisionIdentityUpdate: {
      /** @example Supervision Identity */
      displayName: string;
    };
    TeacherFeatures: {
      /** @example true */
      isAllowAppLock?: boolean;
      /** @example true */
      isAllowWebLock?: boolean;
      /** @example true */
      isAllowRestrictions?: boolean;
      /** @example true */
      isAllowAttentionScreen?: boolean;
      /** @example true */
      isAllowClearPasscode?: boolean;
    };
    TeacherSettingsRequest: {
      /** @example true */
      isEnabled?: boolean;
      /** @example Europe/Paris */
      timezoneId?: string;
      /** @example 05:30 */
      autoClear?: string | null;
      /** @example 600 */
      maxRestrictionLengthSeconds?: number;
      safelistedApps?: components["schemas"]["SafelistedApp"][];
    };
    TeacherSettingsResponse: {
      /** @example true */
      isEnabled?: boolean;
      /** @example Europe/Paris */
      timezoneId?: string;
      /** @example 05:30 */
      autoClear?: string;
      /** @example 600 */
      maxRestrictionLengthSeconds?: number;
      /** @example user */
      displayNameType?: string;
      features?: components["schemas"]["TeacherFeatures"];
      safelistedApps?: components["schemas"]["SafelistedApp"][];
    };
    TimeFrame: {
      /** @example 08:30:00 */
      beginTime?: string;
      /** @example 15:45:00 */
      endTime?: string;
    };
    TimeZone: {
      /** @example America/Chicago */
      zoneId?: string;
      /**
       * @example America
       * @enum {string}
       */
      region?: "Africa" | "America" | "Asia" | "Atlantic" | "Australia" | "Europe" | "Indian" | "Pacific" | "None";
      /** @example Chicago - CT (-0500) */
      displayName?: string;
    };
    /** @description will be populated if the type is appleTv. */
    TvOsDetails: {
      /** @example Apple TV 3rd Generation Rev 2 */
      model?: string;
      /** @example AppleTV3,2 */
      modelIdentifier?: string;
      /** @example MD199LL */
      modelNumber?: string;
      /** @example true */
      supervised?: boolean;
      /**
       * Format: password
       * @example 1234
       */
      airplayPassword?: string;
      /** @example 1 */
      deviceId?: string;
      /** @example null */
      locales?: string;
      purchasing?: components["schemas"]["PurchasingV2"];
      configurationProfiles?: components["schemas"]["ConfigurationProfile"][];
      certificates?: components["schemas"]["MobileDeviceCertificateV2"][];
    };
    Udids: {
      udids?: string[];
    };
    UpdateAppleTv: {
      /**
       * Format: password
       * @example 12345
       */
      airplayPassword?: string;
      purchasing?: components["schemas"]["Purchasing"];
    };
    UpdateIos: {
      purchasing?: components["schemas"]["Purchasing"];
    };
    UpdateIosV2: {
      purchasing?: components["schemas"]["PurchasingV2"];
    };
    UpdateMobileDevice: {
      /** @example Jan's Mobile Device */
      name?: string;
      /** @example 8675309 */
      assetTag?: string;
      /** @example 1 */
      siteId?: number;
      location?: components["schemas"]["Location"];
      updatedExtensionAttributes?: components["schemas"]["ExtensionAttribute"][];
      ios?: components["schemas"]["UpdateIos"];
      appleTv?: components["schemas"]["UpdateAppleTv"];
    };
    UpdateMobileDeviceV2: {
      /**
       * @description Mobile Device Name. When updated, Jamf Pro sends an MDM settings command to the device (device must be supervised).
       * @example Jan's Mobile Device
       */
      name?: string;
      /**
       * @description Enforce the mobile device name. Device must be supervised. If set to true, Jamf Pro will revert the Mobile Device Name to the ‘name’ value each time the device checks in.
       * @example true
       */
      enforceName?: boolean;
      /** @example 8675309 */
      assetTag?: string;
      /** @example 1 */
      siteId?: string;
      /**
       * @description IANA time zone database name
       * @example Europe/Warsaw
       */
      timeZone?: string;
      location?: components["schemas"]["LocationV2"];
      updatedExtensionAttributes?: components["schemas"]["ExtensionAttributeV2"][];
      ios?: components["schemas"]["UpdateIosV2"];
      tvos?: components["schemas"]["UpdateTvOs"];
    };
    UpdateTvOs: {
      /**
       * Format: password
       * @example 12345
       */
      airplayPassword?: string;
      purchasing?: components["schemas"]["PurchasingV2"];
    };
    /** @description Cloud Identity Provider user mappings configuration */
    UserMappings: {
      /**
       * @example ANY_OBJECT_CLASSES
       * @enum {string}
       */
      objectClassLimitation: "ANY_OBJECT_CLASSES" | "ALL_OBJECT_CLASSES";
      /** @example inetOrgPerson */
      objectClasses: string;
      /** @example ou=Users */
      searchBase: string;
      /**
       * @example ALL_SUBTREES
       * @enum {string}
       */
      searchScope: "ALL_SUBTREES" | "FIRST_LEVEL_ONLY";
      /** @default */
      additionalSearchBase?: string;
      /** @example mail */
      userID: string;
      /** @example uid */
      username: string;
      /** @example displayName */
      realName: string;
      /** @example mail */
      emailAddress: string;
      /** @example departmentNumber */
      department: string;
      /** @default */
      building: string;
      /** @default */
      room: string;
      /** @default */
      phone: string;
      /** @example title */
      position: string;
      /** @example uid */
      userUuid: string;
    };
    /** @description Valid JSON of any client-desired structure */
    UserPreferencesJson: Record<string, never>;
    /** @description Response object. */
    UserPreferencesSettings: {
      /** @example jamfuser */
      username: string;
      /** @example mobileDeviceDisplayHeadings */
      key: string;
      /** @description List of preferences for the specific key and user. */
      values: string[];
    };
    UserTestAttributes: {
      /** @example Bob */
      fullName?: string;
      /** @example bob@jamf.com */
      emailAddress?: string;
      /** @example 123456789 */
      phoneNumber?: string;
      /** @example SE */
      position?: string;
      /** @example 1 */
      room?: string;
      /** @example Jamf */
      buildingName?: string;
      /** @example Engineering */
      departmentName?: string;
    };
    UserTestSearch: {
      /** @example uid=admin,ou=Users,dc=jamf,dc=com */
      distinguishedName?: string;
      /** @example admin@jamf.com */
      id?: string;
      /** @example admin */
      uuid?: string;
      /** @example 1001 */
      serverId?: string;
      /** @example admin */
      name?: string;
      attributes?: components["schemas"]["UserTestAttributes"];
    };
    UserTestSearchRequest: {
      /** @example admin */
      username: string;
    };
    UserTestSearchResponse: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["UserTestSearch"][];
    };
    V1Site: {
      /** @example 1 */
      id?: string;
      /** @example Eau Claire */
      name?: string;
    };
    VenafiCaRecord: {
      /** @example 4 */
      id?: number;
      /** @example Venafi Certificate Authority */
      name: string;
      /** @example username */
      username?: string;
      /**
       * Format: password
       * @example password
       */
      password?: string;
      /** @example true */
      passwordConfigured?: boolean;
      /** @example localhost:9443 */
      proxyAddress?: string;
      /** @example true */
      revocationEnabled?: boolean;
      /** @example jamf-pro */
      clientId?: string;
      /** @example qdkP4SrCFKd7tefAVM6N */
      refreshToken?: string;
      /** @example true */
      refreshTokenConfigured?: boolean;
    };
    VenafiPkiPayloadRecord: {
      /** @example OSXConfigurationProfile.html?id=1 */
      urlPath?: string;
      /** @example Configuration Profile Name */
      name?: string;
    };
    VenafiPkiPayloadRecordSearchResults: {
      /** @example 3 */
      totalCount?: number;
      results?: components["schemas"]["VenafiPkiPayloadRecord"][];
    };
    VenafiServiceStatus: {
      /** @example Successfully connected */
      status?: string;
    };
    VerbosePackageDeploymentResponse: {
      queuedCommands?: {
          /** @example 1 */
          device?: number;
          /** @example aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937 */
          commandUuid?: string;
        }[];
      errors?: {
          /** @example 2 */
          device?: number;
          /** @example 3 */
          group?: number;
          /** @example Device does not support the InstallEnterpriseApplication command */
          reason?: string;
        }[];
    };
    /**
     * @example ENABLE_VOICE_ROAMING
     * @enum {string}
     */
    VoiceRoamingSetting: "ENABLE_VOICE_ROAMING" | "DISABLE_VOICE_ROAMING";
    VolumePurchasingContent: {
      /** @example Example Content */
      name?: string;
      /** @example 1 */
      licenseCountTotal?: number;
      /** @example 1 */
      licenseCountInUse?: number;
      /** @example 1 */
      licenseCountReported?: number;
      /** @example https://is4-ssl.mzstatic.com/image/thumb/Purple113/v4/73/d4/73/73d47332-fefc-d350-2984-5b4a4755a502/AppIcon-0-1x_U007emarketing-0-0-GLES2_U002c0-512MB-sRGB-0-0-0-85-220-0-0-0-6.png/360x216bb.png */
      iconUrl?: string;
      deviceTypes?: readonly ("IOS" | "MACOS" | "TVOS")[];
      /**
       * @example IOS_APP
       * @enum {string}
       */
      contentType?: "IOS_APP" | "MAC_APP" | "BOOK" | "UNKNOWN";
      /**
       * @example STDQ
       * @enum {string}
       */
      pricingParam?: "STDQ" | "PLUS" | "Unknown";
      /** @example 748057890 */
      adamId?: string;
    };
    VolumePurchasingContentList: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["VolumePurchasingContent"][];
    };
    VolumePurchasingLocation: components["schemas"]["VolumePurchasingLocationListView"] & {
      content?: readonly components["schemas"]["VolumePurchasingContent"][];
    };
    VolumePurchasingLocationListView: {
      /** @example Example Location */
      name?: string;
      /** @example 1 */
      totalPurchasedLicenses?: number;
      /** @example 1 */
      totalUsedLicenses?: number;
      /** @example 1 */
      id?: string;
      /** @example testUser@apple.com */
      appleId?: string;
      /** @example Jamf */
      organizationName?: string;
      /** @example 2022-04-25T21:09:31.661Z */
      tokenExpiration?: string;
      /**
       * @description The two-letter ISO 3166-1 code that designates the country where the Volume Purchasing account is located.
       * @example US
       */
      countryCode?: string;
      /** @example Example Location */
      locationName?: string;
      /**
       * @description If this is "true", the clientContext used by this server does not match the clientContext returned by the Volume Purchasing API.
       * @example false
       */
      clientContextMismatch?: boolean;
      /** @example false */
      automaticallyPopulatePurchasedContent?: boolean;
      /** @example false */
      sendNotificationWhenNoLongerAssigned?: boolean;
      /** @example false */
      autoRegisterManagedUsers?: boolean;
      /** @example 1 */
      siteId?: string;
      /** @example 2022-09-25T21:09:31.661Z */
      lastSyncTime?: string;
    };
    VolumePurchasingLocationPatch: {
      /** @example Example Location */
      name?: string;
      /** @example false */
      automaticallyPopulatePurchasedContent?: boolean;
      /** @example false */
      sendNotificationWhenNoLongerAssigned?: boolean;
      /**
       * @default false
       * @example false
       */
      autoRegisterManagedUsers?: boolean;
      /** @example 1 */
      siteId?: string;
      /** @example eyJleHBEYXRlIjoiMjAyMi0wMy0yOVQxNTozNjoyNiswMDAwIiwidG9rZW4iOiJWR2hwY3lCcGN5QnViM1FnWVNCMGIydGxiaTRnU0c5d1pXWjFiR3g1SUdsMElHeHZiMnR6SUd4cGEyVWdZU0IwYjJ0bGJpd2dZblYwSUdsMEozTWdibTkwTGc9PSIsIm9yZ05hbWUiOiJFeGFtcGxlIE9yZyJ9 */
      serviceToken?: string;
    };
    VolumePurchasingLocationPost: {
      /**
       * @description If no value is provided when creating a VolumePurchasingLocation object, the 'name' will default to the 'locationName' value
       * @example Example Location
       */
      name?: string;
      /**
       * @default false
       * @example false
       */
      automaticallyPopulatePurchasedContent?: boolean;
      /**
       * @default false
       * @example false
       */
      sendNotificationWhenNoLongerAssigned?: boolean;
      /**
       * @default false
       * @example false
       */
      autoRegisterManagedUsers?: boolean;
      /**
       * @default -1
       * @example 1
       */
      siteId?: string;
      /** @example eyJleHBEYXRlIjoiMjAyMi0wMy0yOVQxNTozNjoyNiswMDAwIiwidG9rZW4iOiJWR2hwY3lCcGN5QnViM1FnWVNCMGIydGxiaTRnU0c5d1pXWjFiR3g1SUdsMElHeHZiMnR6SUd4cGEyVWdZU0IwYjJ0bGJpd2dZblYwSUdsMEozTWdibTkwTGc9PSIsIm9yZ05hbWUiOiJFeGFtcGxlIE9yZyJ9 */
      serviceToken: string;
    };
    VolumePurchasingLocations: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["VolumePurchasingLocationListView"][];
    };
    VolumePurchasingSubscription: components["schemas"]["VolumePurchasingSubscriptionBase"] & {
      /** @example 1 */
      id?: string;
    };
    VolumePurchasingSubscriptionBase: {
      /** @example Example */
      name: string;
      /**
       * @default true
       * @example true
       */
      enabled?: boolean;
      triggers?: ("NO_MORE_LICENSES" | "REMOVED_FROM_APP_STORE")[];
      locationIds?: string[];
      internalRecipients?: components["schemas"]["InternalRecipient"][];
      externalRecipients?: components["schemas"]["ExternalRecipient"][];
      /**
       * @default -1
       * @example 1
       */
      siteId?: string;
    };
    VolumePurchasingSubscriptions: {
      /** @example 1 */
      totalCount?: number;
      results?: components["schemas"]["VolumePurchasingSubscription"][];
    };
    VppAdminAccount: {
      /** @example 1 */
      id?: number;
      /** @example VPP Admin Account */
      name?: string;
      /** @example 42 */
      licenseCount?: number;
      /** @example 40 */
      usedLicenseCount?: number;
      /** @example Public School */
      location?: string;
      /** @example 2000-10-31 */
      expirationDate?: string;
      site?: components["schemas"]["Site"];
    };
    VppTokenSubscription: {
      /** @example 1 */
      id?: number;
      /** @example Subscription name */
      name?: string;
      /** @example false */
      enabled?: boolean;
      recipients?: components["schemas"]["Recipients"];
      adminAccounts?: components["schemas"]["AdminAccount"][];
      /** @example -1 */
      siteID?: number;
      /** @example site A */
      siteName?: string;
    };
    WebLink: {
      /** @example A popular search engine */
      name?: string;
      /** @example https://duckduckgo.com */
      url?: string;
    };
  };
  responses: never;
  parameters: {
    page?: number;
    "page-size"?: number;
    /** @deprecated */
    size?: number;
    /** @deprecated */
    pagesize?: number;
    /** @description Sorting criteria in the format: property:asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is not duplicated for each sort criterion, e.g., ...&sort=name:asc,date:desc. Fields that can be sorted: status, updated */
    sort?: string[];
    /** @description Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15 */
    filter?: string;
    /** @description Export fields parameter, used to change default order or ignore some of the response properties. Default is empty array, which means that all fields of the response entity will be serialized. Example: export-fields=id,username */
    "export-fields"?: string[];
    /** @description Export labels parameter, used to customize fieldnames/columns in the exported file. Default is empty array, which means that response properties names will be used. Number of the provided labels must match the number of export-fields Example: export-labels=identifier,name with matching: export-fields=id,username */
    "export-labels"?: string[];
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Create API integration object
   * @description Create API integration object
   */
  postCreateApiIntegration: {
    /** @description api integration object to create */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ApiIntegrationRequest"];
      };
    };
    responses: {
      /** @description Api Integration object was created */
      201: {
        content: {
          "application/json": components["schemas"]["ApiIntegrationResponse"];
        };
      };
    };
  };
  /**
   * Get specified API integration object
   * @description Gets specified API integration object
   */
  getOneApiIntegration: {
    parameters: {
      path: {
        /** @description instance id of api integration object */
        id: string;
      };
    };
    responses: {
      /** @description Details of api integration object were found. */
      200: {
        content: {
          "application/json": components["schemas"]["ApiIntegrationResponse"];
        };
      };
      /** @description Specified api integration object does not exist. */
      404: {
        content: {
          "application/json": components["schemas"]["ApiError"];
        };
      };
    };
  };
  /**
   * Update specified API integration object
   * @description Update specified API integration object
   */
  putUpdateApiIntegration: {
    parameters: {
      path: {
        /** @description instance id of api integration object */
        id: string;
      };
    };
    /** @description api object to update */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ApiIntegrationRequest"];
      };
    };
    responses: {
      /** @description Api Integration updated */
      200: {
        content: {
          "application/json": components["schemas"]["ApiIntegrationResponse"];
        };
      };
      /** @description Api Integration could not be updated. */
      400: {
        content: {
          "application/json": components["schemas"]["ApiError"];
        };
      };
      /** @description Specified api integration object does not exist. */
      404: {
        content: {
          "application/json": components["schemas"]["ApiError"];
        };
      };
    };
  };
  /**
   * Remove specified API integration
   * @description Removes specified API integration
   */
  deleteApiIntegration: {
    parameters: {
      path: {
        /** @description instance id of api integration object */
        id: string;
      };
    };
    responses: {
      /** @description Api Integration was deleted */
      204: {
        content: never;
      };
      /** @description Specified api integration object does not exist. */
      404: {
        content: {
          "application/json": components["schemas"]["ApiError"];
        };
      };
    };
  };
  /**
   * Create client credentials for specified API integration
   * @description Create client credentials for specified API integration
   */
  postCreateClientCredentials: {
    parameters: {
      path: {
        /** @description instance id of api integration object */
        id: string;
      };
    };
    responses: {
      /** @description Client credentials have been created */
      200: {
        content: {
          "application/json": components["schemas"]["OAuthClientCredentials"];
        };
      };
      /** @description Client credentials could not be created for this api integration */
      400: {
        content: {
          "application/json": components["schemas"]["ApiError"];
        };
      };
      /** @description Specified api integration object does not exist. */
      404: {
        content: {
          "application/json": components["schemas"]["ApiError"];
        };
      };
    };
  };
  /**
   * Get the current Jamf API Roles
   * @description Get roles with Search Criteria
   */
  getAllApiRoles: {
    parameters: {
      query?: {
        page?: components["parameters"]["page"];
        "page-size"?: components["parameters"]["page-size"];
        /** @description Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Fields allowed in the query: id, displayName. Example: sort=displayName:desc */
        sort?: string[];
        /** @description Query in the RSQL format, allowing to filter app titles collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, displayName. Example: displayName=="*myRole*" */
        filter?: string;
      };
    };
    responses: {
      /** @description A list of the current Jamf API Roles */
      200: {
        content: {
          "application/json": components["schemas"]["ApiRoleResult"];
        };
      };
    };
  };
  /**
   * Create a new API role
   * @description Post to create new Role
   */
  postCreateApiRole: {
    /** @description API Integrations Role to create */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ApiRoleRequest"];
      };
    };
    responses: {
      /** @description The created Role */
      200: {
        content: {
          "application/json": components["schemas"]["ApiRole"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ApiError"];
        };
      };
    };
  };
  /**
   * Get the specific Jamf API Role
   * @description Get specific Role
   */
  getOneApiRole: {
    parameters: {
      path: {
        /** @description instance id of API role */
        id: string;
      };
    };
    responses: {
      /** @description The requested Jamf API Role */
      200: {
        content: {
          "application/json": components["schemas"]["ApiRole"];
        };
      };
      /** @description Role not found */
      404: {
        content: {
          "application/json": components["schemas"]["ApiError"];
        };
      };
    };
  };
  /**
   * Update API Integrations Role
   * @description Update specific Role
   */
  putUpdateApiRole: {
    parameters: {
      path: {
        /** @description instance id of API role */
        id: string;
      };
    };
    /** @description API Integrations Role to update */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ApiRoleRequest"];
      };
    };
    responses: {
      /** @description Jamf API Integrations Role updated */
      200: {
        content: {
          "application/json": components["schemas"]["ApiRole"];
        };
      };
      /** @description Bad Request, could not parse input. */
      400: {
        content: {
          "application/json": components["schemas"]["ApiError"];
        };
      };
      /** @description Role not found */
      404: {
        content: {
          "application/json": components["schemas"]["ApiError"];
        };
      };
    };
  };
  /**
   * Delete API Integrations Role
   * @description Delete specific Role
   */
  deleteApiRole: {
    parameters: {
      path: {
        /** @description instance id of API role */
        id: string;
      };
    };
    responses: {
      /** @description Jamf API Integrations Role deleted */
      204: {
        content: never;
      };
      /** @description Role not found. */
      404: {
        content: {
          "application/json": components["schemas"]["ApiError"];
        };
      };
      /** @description Role in use by an Integration/Client */
      409: {
        content: {
          "application/json": components["schemas"]["ApiError"];
        };
      };
    };
  };
}
